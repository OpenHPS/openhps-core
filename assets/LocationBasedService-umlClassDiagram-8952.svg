<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1239px" preserveAspectRatio="none" style="width:707px;height:1239px;background:#00000000;" version="1.1" viewBox="0 0 707 1239" width="707px" zoomAndPan="magnify"><defs><filter height="300%" id="f1nt7ftqc9jj1d" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[46e304561f47e31a49f90980daa7edec]
class LocationBasedService<T, P>--><rect codeLine="4" fill="#FEFECE" filter="url(#f1nt7ftqc9jj1d)" height="649.8203" id="LocationBasedService&lt;T, P&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="9" y="576"/><ellipse cx="256.75" cy="592" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M259.7188,597.6406 Q259.1406,597.9375 258.5,598.0781 Q257.8594,598.2344 257.1563,598.2344 Q254.6563,598.2344 253.3281,596.5938 Q252.0156,594.9375 252.0156,591.8125 Q252.0156,588.6875 253.3281,587.0313 Q254.6563,585.375 257.1563,585.375 Q257.8594,585.375 258.5,585.5313 Q259.1563,585.6875 259.7188,585.9844 L259.7188,588.7031 Q259.0938,588.125 258.5,587.8594 Q257.9063,587.5781 257.2813,587.5781 Q255.9375,587.5781 255.25,588.6563 Q254.5625,589.7188 254.5625,591.8125 Q254.5625,593.9063 255.25,594.9844 Q255.9375,596.0469 257.2813,596.0469 Q257.9063,596.0469 258.5,595.7813 Q259.0938,595.5 259.7188,594.9219 L259.7188,597.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="180" x="277.25" y="596.1543">LocationBasedService&lt;T, P&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="608" y2="608"/><ellipse cx="20" cy="619" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="29" y="622.2104">captureRejections : boolean</text><ellipse cx="20" cy="631.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="29" y="635.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="20" cy="644.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="29" y="647.8198">defaultMaxListeners : number</text><ellipse cx="20" cy="657.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="29" y="660.6245">errorMonitor : typeof errorMonitor</text><ellipse cx="20" cy="670.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="29" y="673.4292">logger : Function</text><ellipse cx="20" cy="683.0234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="230" x="29" y="686.2339">model : Model&lt;DataFrame, DataFrame&gt;</text><ellipse cx="20" cy="695.8281" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="29" y="699.0386">uid : string</text><polygon fill="none" points="20,703.6328,24,707.6328,20,711.6328,16,707.6328" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="29" y="711.8433">options : LBSOptions</text><polygon fill="none" points="20,716.4375,24,720.4375,20,724.4375,16,720.4375" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="182" x="29" y="724.6479">service : DataObjectService&lt;T&gt;</text><polygon fill="none" points="20,729.2422,24,733.2422,20,737.2422,16,733.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="236" x="29" y="737.4526">watchedObjects : Map&lt;string, number[]&gt;</text><polygon fill="none" points="20,742.0469,24,746.0469,20,750.0469,16,746.0469" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="202" x="29" y="750.2573">watchers : Map&lt;number, Watcher&gt;</text><polygon fill="none" points="20,754.8516,24,758.8516,20,762.8516,16,758.8516" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="119" x="29" y="763.062">watchIndex : number</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="769.6563" y2="769.6563"/><ellipse cx="20" cy="780.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="516" x="29" y="783.8667">addListener(eventName: string | symbol, listener: Function) : LocationBasedService&lt;T, P&gt;</text><ellipse cx="20" cy="793.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="199" x="29" y="796.6714">clearWatch(watchId: number) : void</text><ellipse cx="20" cy="806.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="29" y="809.4761">emit(name: string | symbol, args: any[]) : boolean</text><ellipse cx="20" cy="819.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="29" y="822.2808">emit(name: "ready") : boolean</text><ellipse cx="20" cy="831.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="29" y="835.0854">emit(name: "destroy") : boolean</text><ellipse cx="20" cy="844.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="29" y="847.8901">eventNames() : (string | symbol)[]</text><ellipse cx="20" cy="857.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="417" x="29" y="860.6948">getCurrentPosition(object: string | T, options: GeoOptions) : Promise&lt;P&gt;</text><ellipse cx="20" cy="870.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="29" y="873.4995">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="20" cy="883.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="29" y="886.3042">getMaxListeners() : number</text><ellipse cx="20" cy="895.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="29" y="899.1089">isReady() : boolean</text><ellipse cx="20" cy="908.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="29" y="911.9136">listenerCount(eventName: string | symbol) : number</text><ellipse cx="20" cy="921.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="29" y="924.7183">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="20" cy="934.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="29" y="937.5229">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="947.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="464" x="29" y="950.3276">off(eventName: string | symbol, listener: Function) : LocationBasedService&lt;T, P&gt;</text><ellipse cx="20" cy="959.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="463" x="29" y="963.1323">on(eventName: string | symbol, listener: Function) : LocationBasedService&lt;T, P&gt;</text><ellipse cx="20" cy="972.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="29" y="975.937">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="20" cy="985.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="444" x="29" y="988.7417">once(name: string | symbol, listener: Function) : LocationBasedService&lt;T, P&gt;</text><ellipse cx="20" cy="998.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="411" x="29" y="1001.5464">once(name: "destroy", listener: Function) : LocationBasedService&lt;T, P&gt;</text><ellipse cx="20" cy="1011.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="395" x="29" y="1014.3511">once(name: "build", listener: Function) : LocationBasedService&lt;T, P&gt;</text><ellipse cx="20" cy="1023.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="400" x="29" y="1027.1558">once(name: "ready", listener: Function) : LocationBasedService&lt;T, P&gt;</text><ellipse cx="20" cy="1036.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="29" y="1039.9604">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="1049.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="29" y="1052.7651">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="1062.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="542" x="29" y="1065.5698">prependListener(eventName: string | symbol, listener: Function) : LocationBasedService&lt;T, P&gt;</text><ellipse cx="20" cy="1075.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="571" x="29" y="1078.3745">prependOnceListener(eventName: string | symbol, listener: Function) : LocationBasedService&lt;T, P&gt;</text><ellipse cx="20" cy="1087.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="29" y="1091.1792">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="1100.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="419" x="29" y="1103.9839">removeAllListeners(event: string | symbol) : LocationBasedService&lt;T, P&gt;</text><ellipse cx="20" cy="1113.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="538" x="29" y="1116.7886">removeListener(eventName: string | symbol, listener: Function) : LocationBasedService&lt;T, P&gt;</text><ellipse cx="20" cy="1126.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="29" y="1129.5933">setCurrentPosition(object: string | T, position: P) : Promise&lt;void&gt;</text><ellipse cx="20" cy="1139.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="337" x="29" y="1142.3979">setMaxListeners(n: number) : LocationBasedService&lt;T, P&gt;</text><ellipse cx="20" cy="1151.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="29" y="1155.2026">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="20" cy="1164.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="29" y="1168.0073">setUID(uid: string) : LocationBasedService&lt;T, P&gt;</text><ellipse cx="20" cy="1177.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="502" x="29" y="1180.812">watchPosition(object: string | T, callback: Function, options: GeoWatchOptions) : number</text><polygon fill="#FFFF44" points="20,1185.4063,24,1189.4063,20,1193.4063,16,1189.4063" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="29" y="1193.6167">generateUUID() : string</text><polygon fill="#FFFF44" points="20,1198.2109,24,1202.2109,20,1206.2109,16,1202.2109" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="287" x="29" y="1206.4214">unwatchObject(uid: string, watchId: number) : void</text><polygon fill="#FFFF44" points="20,1211.0156,24,1215.0156,20,1219.0156,16,1215.0156" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="29" y="1219.2261">watchObject(uid: string, watchId: number) : void</text><!--MD5=[dbb8b4f13c7b21394f9d757e58732f45]
class Service--><rect codeLine="53" fill="#FEFECE" filter="url(#f1nt7ftqc9jj1d)" height="508.9688" id="Service" style="stroke:#A80036;stroke-width:1.5;" width="684" x="9" y="7"/><ellipse cx="324.25" cy="23" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M324.3594,18.3438 L323.2031,23.4219 L325.5313,23.4219 L324.3594,18.3438 Z M322.875,16.1094 L325.8594,16.1094 L329.2188,28.5 L326.7656,28.5 L326,25.4375 L322.7188,25.4375 L321.9688,28.5 L319.5313,28.5 L322.875,16.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="45" x="344.75" y="27.1543">Service</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="39" y2="39"/><ellipse cx="20" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="29" y="53.2104">captureRejections : boolean</text><ellipse cx="20" cy="62.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="29" y="66.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="20" cy="75.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="29" y="78.8198">defaultMaxListeners : number</text><ellipse cx="20" cy="88.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="29" y="91.6245">errorMonitor : typeof errorMonitor</text><ellipse cx="20" cy="101.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="29" y="104.4292">logger : Function</text><ellipse cx="20" cy="114.0234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="29" y="117.2339">model : any</text><ellipse cx="20" cy="126.8281" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="29" y="130.0386">uid : string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="136.6328" y2="136.6328"/><ellipse cx="20" cy="147.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="393" x="29" y="150.8433">addListener(eventName: string | symbol, listener: Function) : Service</text><ellipse cx="20" cy="160.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="29" y="163.6479">emit(name: string | symbol, args: any[]) : boolean</text><ellipse cx="20" cy="173.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="29" y="176.4526">emit(name: "ready") : boolean</text><ellipse cx="20" cy="186.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="29" y="189.2573">emit(name: "destroy") : boolean</text><ellipse cx="20" cy="198.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="29" y="202.062">eventNames() : (string | symbol)[]</text><ellipse cx="20" cy="211.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="29" y="214.8667">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="20" cy="224.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="29" y="227.6714">getMaxListeners() : number</text><ellipse cx="20" cy="237.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="29" y="240.4761">isReady() : boolean</text><ellipse cx="20" cy="250.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="29" y="253.2808">listenerCount(eventName: string | symbol) : number</text><ellipse cx="20" cy="262.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="29" y="266.0854">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="20" cy="275.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="29" y="278.8901">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="288.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="29" y="291.6948">off(eventName: string | symbol, listener: Function) : Service</text><ellipse cx="20" cy="301.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="340" x="29" y="304.4995">on(eventName: string | symbol, listener: Function) : Service</text><ellipse cx="20" cy="314.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="29" y="317.3042">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="20" cy="326.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="321" x="29" y="330.1089">once(name: string | symbol, listener: Function) : Service</text><ellipse cx="20" cy="339.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="29" y="342.9136">once(name: "destroy", listener: Function) : Service</text><ellipse cx="20" cy="352.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="272" x="29" y="355.7183">once(name: "build", listener: Function) : Service</text><ellipse cx="20" cy="365.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="277" x="29" y="368.5229">once(name: "ready", listener: Function) : Service</text><ellipse cx="20" cy="378.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="29" y="381.3276">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="390.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="29" y="394.1323">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="403.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="419" x="29" y="406.937">prependListener(eventName: string | symbol, listener: Function) : Service</text><ellipse cx="20" cy="416.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="448" x="29" y="419.7417">prependOnceListener(eventName: string | symbol, listener: Function) : Service</text><ellipse cx="20" cy="429.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="29" y="432.5464">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="442.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="29" y="445.3511">removeAllListeners(event: string | symbol) : Service</text><ellipse cx="20" cy="454.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="415" x="29" y="458.1558">removeListener(eventName: string | symbol, listener: Function) : Service</text><ellipse cx="20" cy="467.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="214" x="29" y="470.9604">setMaxListeners(n: number) : Service</text><ellipse cx="20" cy="480.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="29" y="483.7651">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="20" cy="493.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="29" y="496.5698">setUID(uid: string) : Service</text><polygon fill="#FFFF44" points="20,501.1641,24,505.1641,20,509.1641,16,505.1641" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="29" y="509.3745">generateUUID() : string</text><!--MD5=[5c3e0ac1ca20acb3d17261e4381cbd23]
reverse link Service to LocationBasedService<T, P>--><path codeLine="91" d="M351,536.63 C351,549.63 351,562.74 351,575.86 " fill="none" id="Service-backto-LocationBasedService&lt;T, P&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="344,536.29,351,516.29,358,536.29,344,536.29" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[7243bb01b46a6275d24e0789eee3bf79]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "LocationBasedService<T, P>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +logger : Function
    +model : Model<DataFrame, DataFrame>
    +uid : string
    #options : LBSOptions
    #service : DataObjectService<T>
    #watchedObjects : Map<string, number[]>
    #watchers : Map<number, Watcher>
    #watchIndex : number
    +addListener(eventName: string | symbol, listener: Function) : LocationBasedService<T, P>
    +clearWatch(watchId: number) : void
    +emit(name: string | symbol, args: any[]) : boolean
    +emit(name: "ready") : boolean
    +emit(name: "destroy") : boolean
    +eventNames() : (string | symbol)[]
    +getCurrentPosition(object: string | T, options: GeoOptions) : Promise<P>
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +isReady() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : LocationBasedService<T, P>
    +on(eventName: string | symbol, listener: Function) : LocationBasedService<T, P>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(name: string | symbol, listener: Function) : LocationBasedService<T, P>
    +once(name: "destroy", listener: Function) : LocationBasedService<T, P>
    +once(name: "build", listener: Function) : LocationBasedService<T, P>
    +once(name: "ready", listener: Function) : LocationBasedService<T, P>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : LocationBasedService<T, P>
    +prependOnceListener(eventName: string | symbol, listener: Function) : LocationBasedService<T, P>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : LocationBasedService<T, P>
    +removeListener(eventName: string | symbol, listener: Function) : LocationBasedService<T, P>
    +setCurrentPosition(object: string | T, position: P) : Promise<void>
    +setMaxListeners(n: number) : LocationBasedService<T, P>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setUID(uid: string) : LocationBasedService<T, P>
    +watchPosition(object: string | T, callback: Function, options: GeoWatchOptions) : number
    #generateUUID() : string
    #unwatchObject(uid: string, watchId: number) : void
    #watchObject(uid: string, watchId: number) : void
}
abstract class "Service" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +logger : Function
    +model : any
    +uid : string
    +addListener(eventName: string | symbol, listener: Function) : Service
    +emit(name: string | symbol, args: any[]) : boolean
    +emit(name: "ready") : boolean
    +emit(name: "destroy") : boolean
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +isReady() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Service
    +on(eventName: string | symbol, listener: Function) : Service
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(name: string | symbol, listener: Function) : Service
    +once(name: "destroy", listener: Function) : Service
    +once(name: "build", listener: Function) : Service
    +once(name: "ready", listener: Function) : Service
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : Service
    +prependOnceListener(eventName: string | symbol, listener: Function) : Service
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : Service
    +removeListener(eventName: string | symbol, listener: Function) : Service
    +setMaxListeners(n: number) : Service
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setUID(uid: string) : Service
    #generateUUID() : string
}
"Service" <|- - "LocationBasedService<T, P>"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 16:46:50 UTC 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>