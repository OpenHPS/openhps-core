<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="535px" preserveAspectRatio="none" style="width:697px;height:535px;background:#00000000;" version="1.1" viewBox="0 0 697 535" width="697px" zoomAndPan="magnify"><defs><filter height="300%" id="f352nf3bw20pe" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[d703a9e208692cd725729e0af10f46fe]
class ModelBuilder<In, Out>--><rect codeLine="4" fill="#FEFECE" filter="url(#f352nf3bw20pe)" height="252.875" id="ModelBuilder&lt;In, Out&gt;" style="stroke:#A80036;stroke-width:1.5;" width="676" x="7" y="269"/><ellipse cx="270.25" cy="285" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M273.2188,290.6406 Q272.6406,290.9375 272,291.0781 Q271.3594,291.2344 270.6563,291.2344 Q268.1563,291.2344 266.8281,289.5938 Q265.5156,287.9375 265.5156,284.8125 Q265.5156,281.6875 266.8281,280.0313 Q268.1563,278.375 270.6563,278.375 Q271.3594,278.375 272,278.5313 Q272.6563,278.6875 273.2188,278.9844 L273.2188,281.7031 Q272.5938,281.125 272,280.8594 Q271.4063,280.5781 270.7813,280.5781 Q269.4375,280.5781 268.75,281.6563 Q268.0625,282.7188 268.0625,284.8125 Q268.0625,286.9063 268.75,287.9844 Q269.4375,289.0469 270.7813,289.0469 Q271.4063,289.0469 272,288.7813 Q272.5938,288.5 273.2188,287.9219 L273.2188,290.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="141" x="290.75" y="289.1543">ModelBuilder&lt;In, Out&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="682" y1="301" y2="301"/><ellipse cx="18" cy="312" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="315.2104">graph : ModelGraph&lt;any, any&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="682" y1="321.8047" y2="321.8047"/><ellipse cx="18" cy="332.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="27" y="336.0151">addEdge(edge: Edge&lt;any&gt;) : ModelBuilder&lt;In, Out&gt;</text><ellipse cx="18" cy="345.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="365" x="27" y="348.8198">addNode(node: GraphNode&lt;any, any&gt;) : ModelBuilder&lt;In, Out&gt;</text><ellipse cx="18" cy="358.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="463" x="27" y="361.6245">addService(service: Service, proxy: ProxyHandler&lt;any&gt;) : ModelBuilder&lt;In, Out&gt;</text><ellipse cx="18" cy="371.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="27" y="374.4292">addServices(services: Service[]) : ModelBuilder&lt;In, Out&gt;</text><ellipse cx="18" cy="384.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="650" x="27" y="387.2339">addShape(shape: Model&lt;any, any&gt; | GraphShape&lt;any, any&gt; | GraphBuilder&lt;any, any&gt;) : ModelBuilder&lt;In, Out&gt;</text><ellipse cx="18" cy="396.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="201" x="27" y="400.0386">build() : Promise&lt;Model&lt;In, Out&gt;&gt;</text><ellipse cx="18" cy="409.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="241" x="27" y="412.8433">create&lt;In, Out&gt;() : ModelBuilder&lt;In, Out&gt;</text><ellipse cx="18" cy="422.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="314" x="27" y="425.6479">deleteEdge(edge: Edge&lt;any&gt;) : ModelBuilder&lt;In, Out&gt;</text><ellipse cx="18" cy="435.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="379" x="27" y="438.4526">deleteNode(node: GraphNode&lt;any, any&gt;) : ModelBuilder&lt;In, Out&gt;</text><ellipse cx="18" cy="448.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="430" x="27" y="451.2573">from(nodes: (string | GraphNode&lt;any, any&gt;)[]) : GraphShapeBuilder&lt;any&gt;</text><ellipse cx="18" cy="460.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="27" y="464.062">on(name: "ready", listener: Function) : ModelBuilder&lt;In, Out&gt;</text><ellipse cx="18" cy="473.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="365" x="27" y="476.8667">on(name: "prebuild", listener: Function) : ModelBuilder&lt;In, Out&gt;</text><ellipse cx="18" cy="486.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="371" x="27" y="489.6714">on(name: "postbuild", listener: Function) : ModelBuilder&lt;In, Out&gt;</text><ellipse cx="18" cy="499.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="27" y="502.4761">withLogger(logger: Function) : ModelBuilder&lt;In, Out&gt;</text><ellipse cx="18" cy="512.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="398" x="27" y="515.2808">withReferenceSpace(space: ReferenceSpace) : ModelBuilder&lt;In, Out&gt;</text><!--MD5=[f80d450b781a20143d5d6045e24c73e2]
class GraphBuilder<In, Out>--><rect codeLine="22" fill="#FEFECE" filter="url(#f352nf3bw20pe)" height="201.6563" id="GraphBuilder&lt;In, Out&gt;" style="stroke:#A80036;stroke-width:1.5;" width="567" x="61.5" y="7"/><ellipse cx="269.75" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M272.7188,28.6406 Q272.1406,28.9375 271.5,29.0781 Q270.8594,29.2344 270.1563,29.2344 Q267.6563,29.2344 266.3281,27.5938 Q265.0156,25.9375 265.0156,22.8125 Q265.0156,19.6875 266.3281,18.0313 Q267.6563,16.375 270.1563,16.375 Q270.8594,16.375 271.5,16.5313 Q272.1563,16.6875 272.7188,16.9844 L272.7188,19.7031 Q272.0938,19.125 271.5,18.8594 Q270.9063,18.5781 270.2813,18.5781 Q268.9375,18.5781 268.25,19.6563 Q267.5625,20.7188 267.5625,22.8125 Q267.5625,24.9063 268.25,25.9844 Q268.9375,27.0469 270.2813,27.0469 Q270.9063,27.0469 271.5,26.7813 Q272.0938,26.5 272.7188,25.9219 L272.7188,28.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="142" x="290.25" y="27.1543">GraphBuilder&lt;In, Out&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="62.5" x2="627.5" y1="39" y2="39"/><ellipse cx="72.5" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="81.5" y="53.2104">graph : GraphShape&lt;In, Out&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="62.5" x2="627.5" y1="59.8047" y2="59.8047"/><ellipse cx="72.5" cy="70.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="81.5" y="74.0151">addEdge(edge: Edge&lt;any&gt;) : GraphBuilder&lt;In, Out&gt;</text><ellipse cx="72.5" cy="83.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="367" x="81.5" y="86.8198">addNode(node: GraphNode&lt;any, any&gt;) : GraphBuilder&lt;In, Out&gt;</text><ellipse cx="72.5" cy="96.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="541" x="81.5" y="99.6245">addShape(shape: GraphShape&lt;any, any&gt; | GraphBuilder&lt;any, any&gt;) : GraphBuilder&lt;In, Out&gt;</text><ellipse cx="72.5" cy="109.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="203" x="81.5" y="112.4292">build() : Promise&lt;Graph&lt;In, Out&gt;&gt;</text><ellipse cx="72.5" cy="122.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="243" x="81.5" y="125.2339">create&lt;In, Out&gt;() : GraphBuilder&lt;In, Out&gt;</text><ellipse cx="72.5" cy="134.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="316" x="81.5" y="138.0386">deleteEdge(edge: Edge&lt;any&gt;) : GraphBuilder&lt;In, Out&gt;</text><ellipse cx="72.5" cy="147.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="381" x="81.5" y="150.8433">deleteNode(node: GraphNode&lt;any, any&gt;) : GraphBuilder&lt;In, Out&gt;</text><ellipse cx="72.5" cy="160.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="430" x="81.5" y="163.6479">from(nodes: (string | GraphNode&lt;any, any&gt;)[]) : GraphShapeBuilder&lt;any&gt;</text><ellipse cx="72.5" cy="173.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="81.5" y="176.4526">on(name: "ready", listener: Function) : GraphBuilder&lt;In, Out&gt;</text><ellipse cx="72.5" cy="186.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="367" x="81.5" y="189.2573">on(name: "prebuild", listener: Function) : GraphBuilder&lt;In, Out&gt;</text><ellipse cx="72.5" cy="198.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="373" x="81.5" y="202.062">on(name: "postbuild", listener: Function) : GraphBuilder&lt;In, Out&gt;</text><!--MD5=[959e9a8b8c394bdd5602e8beb99388ee]
reverse link GraphBuilder<In, Out> to ModelBuilder<In, Out>--><path codeLine="36" d="M345,229.48 C345,242.52 345,255.82 345,268.92 " fill="none" id="GraphBuilder&lt;In, Out&gt;-backto-ModelBuilder&lt;In, Out&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="338,229.26,345,209.26,352,229.26,338,229.26" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[eca76934ea9a6ecf7b3ebfa037af867f]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "ModelBuilder<In, Out>" {
    +graph : ModelGraph<any, any>
    +addEdge(edge: Edge<any>) : ModelBuilder<In, Out>
    +addNode(node: GraphNode<any, any>) : ModelBuilder<In, Out>
    +addService(service: Service, proxy: ProxyHandler<any>) : ModelBuilder<In, Out>
    +addServices(services: Service[]) : ModelBuilder<In, Out>
    +addShape(shape: Model<any, any> | GraphShape<any, any> | GraphBuilder<any, any>) : ModelBuilder<In, Out>
    +build() : Promise<Model<In, Out>>
    {static} +create<In, Out>() : ModelBuilder<In, Out>
    +deleteEdge(edge: Edge<any>) : ModelBuilder<In, Out>
    +deleteNode(node: GraphNode<any, any>) : ModelBuilder<In, Out>
    +from(nodes: (string | GraphNode<any, any>)[]) : GraphShapeBuilder<any>
    +on(name: "ready", listener: Function) : ModelBuilder<In, Out>
    +on(name: "prebuild", listener: Function) : ModelBuilder<In, Out>
    +on(name: "postbuild", listener: Function) : ModelBuilder<In, Out>
    +withLogger(logger: Function) : ModelBuilder<In, Out>
    +withReferenceSpace(space: ReferenceSpace) : ModelBuilder<In, Out>
}
class "GraphBuilder<In, Out>" {
    +graph : GraphShape<In, Out>
    +addEdge(edge: Edge<any>) : GraphBuilder<In, Out>
    +addNode(node: GraphNode<any, any>) : GraphBuilder<In, Out>
    +addShape(shape: GraphShape<any, any> | GraphBuilder<any, any>) : GraphBuilder<In, Out>
    +build() : Promise<Graph<In, Out>>
    {static} +create<In, Out>() : GraphBuilder<In, Out>
    +deleteEdge(edge: Edge<any>) : GraphBuilder<In, Out>
    +deleteNode(node: GraphNode<any, any>) : GraphBuilder<In, Out>
    +from(nodes: (string | GraphNode<any, any>)[]) : GraphShapeBuilder<any>
    +on(name: "ready", listener: Function) : GraphBuilder<In, Out>
    +on(name: "prebuild", listener: Function) : GraphBuilder<In, Out>
    +on(name: "postbuild", listener: Function) : GraphBuilder<In, Out>
}
"GraphBuilder<In, Out>" <|- - "ModelBuilder<In, Out>"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 16:46:50 UTC 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>