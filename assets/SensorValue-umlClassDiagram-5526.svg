<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="8098px" preserveAspectRatio="none" style="width:1997px;height:8098px;background:#00000000;" version="1.1" viewBox="0 0 1997 8098" width="1997px" zoomAndPan="magnify"><defs><filter height="300%" id="f1xc51alj6n3ve" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[4c6b4977910d63c28ef674b7c2693397]
class SensorValue<U>--><rect codeLine="5" fill="#FEFECE" filter="url(#f1xc51alj6n3ve)" height="1123.5938" id="SensorValue&lt;U&gt;" style="stroke:#A80036;stroke-width:1.5;" width="641" x="653" y="3484"/><ellipse cx="915.25" cy="3500" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M918.2188,3505.6406 Q917.6406,3505.9375 917,3506.0781 Q916.3594,3506.2344 915.6563,3506.2344 Q913.1563,3506.2344 911.8281,3504.5938 Q910.5156,3502.9375 910.5156,3499.8125 Q910.5156,3496.6875 911.8281,3495.0313 Q913.1563,3493.375 915.6563,3493.375 Q916.3594,3493.375 917,3493.5313 Q917.6563,3493.6875 918.2188,3493.9844 L918.2188,3496.7031 Q917.5938,3496.125 917,3495.8594 Q916.4063,3495.5781 915.7813,3495.5781 Q914.4375,3495.5781 913.75,3496.6563 Q913.0625,3497.7188 913.0625,3499.8125 Q913.0625,3501.9063 913.75,3502.9844 Q914.4375,3504.0469 915.7813,3504.0469 Q916.4063,3504.0469 917,3503.7813 Q917.5938,3503.5 918.2188,3502.9219 L918.2188,3505.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="108" x="935.75" y="3504.1543">SensorValue&lt;U&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="654" x2="1293" y1="3516" y2="3516"/><ellipse cx="664" cy="3527" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="673" y="3530.2104">accuracy : Accuracy&lt;U, number | Vector3&gt;</text><ellipse cx="664" cy="3539.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="673" y="3543.0151">isVector3 : true</text><ellipse cx="664" cy="3552.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="117" x="673" y="3555.8198">timestamp : number</text><ellipse cx="664" cy="3565.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="673" y="3568.6245">x : number</text><ellipse cx="664" cy="3578.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="673" y="3581.4292">y : number</text><ellipse cx="664" cy="3591.0234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="61" x="673" y="3594.2339">z : number</text><line style="stroke:#A80036;stroke-width:1.5;" x1="654" x2="1293" y1="3600.8281" y2="3600.8281"/><ellipse cx="664" cy="3611.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="673" y="3615.0386">add(v: Vector3) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="3624.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="234" x="673" y="3627.8433">addScalar(s: number) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="3637.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="337" x="673" y="3640.6479">addScaledVector(v: Vector3, s: number) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="3650.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="673" y="3653.4526">addVectors(a: Vector3, b: Vector3) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="3663.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="673" y="3666.2573">angleTo(v: Vector3) : number</text><ellipse cx="664" cy="3675.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="367" x="673" y="3679.062">applyAxisAngle(axis: Vector3, angle: number) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="3688.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="673" y="3691.8667">applyEuler(euler: Euler) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="3701.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="673" y="3704.6714">applyMatrix3(m: Matrix3) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="3714.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="673" y="3717.4761">applyMatrix4(m: Matrix4) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="3727.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="673" y="3730.2808">applyNormalMatrix(m: Matrix3) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="3739.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="673" y="3743.0854">applyQuaternion(q: Quaternion) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="3752.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="137" x="673" y="3755.8901">ceil() : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="3765.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="673" y="3768.6948">clamp(min: Vector3, max: Vector3) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="3778.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="347" x="673" y="3781.4995">clampLength(min: number, max: number) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="3791.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="345" x="673" y="3794.3042">clampScalar(min: number, max: number) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="3803.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="673" y="3807.1089">clone() : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="3816.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="201" x="673" y="3819.9136">copy(v: Vector3) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="3829.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="208" x="673" y="3832.7183">cross(a: Vector3) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="3842.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="673" y="3845.5229">crossVectors(a: Vector3, b: Vector3) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="3855.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="673" y="3858.3276">distanceTo(v: Vector3) : number</text><ellipse cx="664" cy="3867.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="242" x="673" y="3871.1323">distanceToManhattan(v: Vector3) : number</text><ellipse cx="664" cy="3880.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="673" y="3883.937">distanceToSquared(v: Vector3) : number</text><ellipse cx="664" cy="3893.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="208" x="673" y="3896.7417">divide(v: Vector3) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="3906.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="673" y="3909.5464">divideScalar(s: number) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="3919.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="673" y="3922.3511">dot(v: Vector3) : number</text><ellipse cx="664" cy="3931.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="160" x="673" y="3935.1558">equals(v: Vector3) : boolean</text><ellipse cx="664" cy="3944.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="144" x="673" y="3947.9604">floor() : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="3957.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="484" x="673" y="3960.7651">fromArray(array: number[] | ArrayLike&lt;number&gt;, offset: number) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="3970.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="673" y="3973.5698">fromArray(array: number[]) : Vector3</text><ellipse cx="664" cy="3983.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="615" x="673" y="3986.3745">fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="3995.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="229" x="673" y="3999.1792">getComponent(index: number) : number</text><ellipse cx="664" cy="4008.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="673" y="4011.9839">length() : number</text><ellipse cx="664" cy="4021.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="673" y="4024.7886">lengthManhattan() : number</text><ellipse cx="664" cy="4034.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="673" y="4037.5933">lengthSq() : number</text><ellipse cx="664" cy="4047.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="673" y="4050.3979">lerp(v: Vector3, alpha: number) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4059.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="410" x="673" y="4063.2026">lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4072.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="673" y="4076.0073">manhattanDistanceTo(v: Vector3) : number</text><ellipse cx="664" cy="4085.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="673" y="4088.812">manhattanLength() : number</text><ellipse cx="664" cy="4098.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="199" x="673" y="4101.6167">max(v: Vector3) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4111.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="673" y="4114.4214">min(v: Vector3) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4124.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="219" x="673" y="4127.2261">multiply(v: Vector3) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4136.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="257" x="673" y="4140.0308">multiplyScalar(s: number) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4149.625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="329" x="673" y="4152.8354">multiplyVectors(a: Vector3, b: Vector3) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4162.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="673" y="4165.6401">negate() : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4175.2344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="173" x="673" y="4178.4448">normalize() : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4188.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="673" y="4191.2495">project(camera: Camera) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4200.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="673" y="4204.0542">projectOnPlane(planeNormal: Vector3) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4213.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="266" x="673" y="4216.8589">projectOnVector(v: Vector3) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4226.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="673" y="4229.6636">random() : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4239.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="212" x="673" y="4242.4683">randomDirection() : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4252.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="240" x="673" y="4255.2729">reflect(vector: Vector3) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4264.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="151" x="673" y="4268.0776">round() : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4277.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="673" y="4280.8823">roundToZero() : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4290.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="673" y="4293.687">set(x: number, y: number, z: number) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4303.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="483" x="673" y="4306.4917">setAccuracy(accuracy: number | Accuracy&lt;U, number | Vector3&gt;) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4316.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="373" x="673" y="4319.2964">setComponent(index: number, value: number) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4328.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="673" y="4332.1011">setFromCylindrical(s: Cylindrical) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4341.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="507" x="673" y="4344.9058">setFromCylindricalCoords(radius: number, theta: number, y: number) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4354.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="238" x="673" y="4357.7104">setFromEuler(e: Euler) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4367.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="424" x="673" y="4370.5151">setFromMatrix3Column(matrix: Matrix3, index: number) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4380.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="417" x="673" y="4383.3198">setFromMatrixColumn(matrix: Matrix4, index: number) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4392.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="304" x="673" y="4396.1245">setFromMatrixPosition(m: Matrix4) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4405.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="290" x="673" y="4408.9292">setFromMatrixScale(m: Matrix4) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4418.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="673" y="4421.7339">setFromSpherical(s: Spherical) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4431.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="482" x="673" y="4434.5386">setFromSphericalCoords(r: number, phi: number, theta: number) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4444.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="229" x="673" y="4447.3433">setLength(l: number) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4456.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="673" y="4460.1479">setScalar(scalar: number) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4469.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="673" y="4472.9526">setX(x: number) : Vector3</text><ellipse cx="664" cy="4482.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="673" y="4485.7573">setY(y: number) : Vector3</text><ellipse cx="664" cy="4495.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="673" y="4498.562">setZ(z: number) : Vector3</text><ellipse cx="664" cy="4508.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="673" y="4511.3667">sub(a: Vector3) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4520.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="234" x="673" y="4524.1714">subScalar(s: number) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4533.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="306" x="673" y="4536.9761">subVectors(a: Vector3, b: Vector3) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4546.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="673" y="4549.7808">toArray(array: number[], offset: number) : number[]</text><ellipse cx="664" cy="4559.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="673" y="4562.5854">toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple</text><ellipse cx="664" cy="4572.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="420" x="673" y="4575.3901">toArray(array: ArrayLike&lt;number&gt;, offset: number) : ArrayLike&lt;number&gt;</text><ellipse cx="664" cy="4584.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="285" x="673" y="4588.1948">transformDirection(m: Matrix4) : SensorValue&lt;U&gt;</text><ellipse cx="664" cy="4597.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="267" x="673" y="4600.9995">unproject(camera: Camera) : SensorValue&lt;U&gt;</text><!--MD5=[65d619c042c23702cef2ca07d67b1cf6]
class Vector3--><rect codeLine="91" fill="#FEFECE" filter="url(#f1xc51alj6n3ve)" height="1085.1797" id="Vector3" style="stroke:#A80036;stroke-width:1.5;" width="586" x="7" y="3503.5"/><ellipse cx="271.25" cy="3519.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M274.2188,3525.1406 Q273.6406,3525.4375 273,3525.5781 Q272.3594,3525.7344 271.6563,3525.7344 Q269.1563,3525.7344 267.8281,3524.0938 Q266.5156,3522.4375 266.5156,3519.3125 Q266.5156,3516.1875 267.8281,3514.5313 Q269.1563,3512.875 271.6563,3512.875 Q272.3594,3512.875 273,3513.0313 Q273.6563,3513.1875 274.2188,3513.4844 L274.2188,3516.2031 Q273.5938,3515.625 273,3515.3594 Q272.4063,3515.0781 271.7813,3515.0781 Q270.4375,3515.0781 269.75,3516.1563 Q269.0625,3517.2188 269.0625,3519.3125 Q269.0625,3521.4063 269.75,3522.4844 Q270.4375,3523.5469 271.7813,3523.5469 Q272.4063,3523.5469 273,3523.2813 Q273.5938,3523 274.2188,3522.4219 L274.2188,3525.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="49" x="291.75" y="3523.6543">Vector3</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="592" y1="3535.5" y2="3535.5"/><ellipse cx="18" cy="3546.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="27" y="3549.7104">isVector3 : true</text><ellipse cx="18" cy="3559.3047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="27" y="3562.5151">x : number</text><ellipse cx="18" cy="3572.1094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="27" y="3575.3198">y : number</text><ellipse cx="18" cy="3584.9141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="61" x="27" y="3588.1245">z : number</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="592" y1="3594.7188" y2="3594.7188"/><ellipse cx="18" cy="3605.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="141" x="27" y="3608.9292">add(v: Vector3) : Vector3</text><ellipse cx="18" cy="3618.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="3621.7339">addScalar(s: number) : Vector3</text><ellipse cx="18" cy="3631.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="282" x="27" y="3634.5386">addScaledVector(v: Vector3, s: number) : Vector3</text><ellipse cx="18" cy="3644.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="27" y="3647.3433">addVectors(a: Vector3, b: Vector3) : Vector3</text><ellipse cx="18" cy="3656.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="27" y="3660.1479">angleTo(v: Vector3) : number</text><ellipse cx="18" cy="3669.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="312" x="27" y="3672.9526">applyAxisAngle(axis: Vector3, angle: number) : Vector3</text><ellipse cx="18" cy="3682.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="188" x="27" y="3685.7573">applyEuler(euler: Euler) : Vector3</text><ellipse cx="18" cy="3695.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="27" y="3698.562">applyMatrix3(m: Matrix3) : Vector3</text><ellipse cx="18" cy="3708.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="27" y="3711.3667">applyMatrix4(m: Matrix4) : Vector3</text><ellipse cx="18" cy="3720.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="228" x="27" y="3724.1714">applyNormalMatrix(m: Matrix3) : Vector3</text><ellipse cx="18" cy="3733.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="234" x="27" y="3736.9761">applyQuaternion(q: Quaternion) : Vector3</text><ellipse cx="18" cy="3746.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="82" x="27" y="3749.7808">ceil() : Vector3</text><ellipse cx="18" cy="3759.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="252" x="27" y="3762.5854">clamp(min: Vector3, max: Vector3) : Vector3</text><ellipse cx="18" cy="3772.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="27" y="3775.3901">clampLength(min: number, max: number) : Vector3</text><ellipse cx="18" cy="3784.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="290" x="27" y="3788.1948">clampScalar(min: number, max: number) : Vector3</text><ellipse cx="18" cy="3797.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="93" x="27" y="3800.9995">clone() : Vector3</text><ellipse cx="18" cy="3810.5938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="27" y="3813.8042">copy(v: Vector3) : Vector3</text><ellipse cx="18" cy="3823.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="153" x="27" y="3826.6089">cross(a: Vector3) : Vector3</text><ellipse cx="18" cy="3836.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="27" y="3839.4136">crossVectors(a: Vector3, b: Vector3) : Vector3</text><ellipse cx="18" cy="3849.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="27" y="3852.2183">distanceTo(v: Vector3) : number</text><ellipse cx="18" cy="3861.8125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="242" x="27" y="3865.0229">distanceToManhattan(v: Vector3) : number</text><ellipse cx="18" cy="3874.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="27" y="3877.8276">distanceToSquared(v: Vector3) : number</text><ellipse cx="18" cy="3887.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="153" x="27" y="3890.6323">divide(v: Vector3) : Vector3</text><ellipse cx="18" cy="3900.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="191" x="27" y="3903.437">divideScalar(s: number) : Vector3</text><ellipse cx="18" cy="3913.0313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="3916.2417">dot(v: Vector3) : number</text><ellipse cx="18" cy="3925.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="160" x="27" y="3929.0464">equals(v: Vector3) : boolean</text><ellipse cx="18" cy="3938.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="89" x="27" y="3941.8511">floor() : Vector3</text><ellipse cx="18" cy="3951.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="429" x="27" y="3954.6558">fromArray(array: number[] | ArrayLike&lt;number&gt;, offset: number) : Vector3</text><ellipse cx="18" cy="3964.25" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="27" y="3967.4604">fromArray(array: number[]) : Vector3</text><ellipse cx="18" cy="3977.0547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="560" x="27" y="3980.2651">fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : Vector3</text><ellipse cx="18" cy="3989.8594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="229" x="27" y="3993.0698">getComponent(index: number) : number</text><ellipse cx="18" cy="4002.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="27" y="4005.8745">length() : number</text><ellipse cx="18" cy="4015.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="27" y="4018.6792">lengthManhattan() : number</text><ellipse cx="18" cy="4028.2734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="27" y="4031.4839">lengthSq() : number</text><ellipse cx="18" cy="4041.0781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="27" y="4044.2886">lerp(v: Vector3, alpha: number) : Vector3</text><ellipse cx="18" cy="4053.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="27" y="4057.0933">lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : Vector3</text><ellipse cx="18" cy="4066.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="27" y="4069.8979">manhattanDistanceTo(v: Vector3) : number</text><ellipse cx="18" cy="4079.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="27" y="4082.7026">manhattanLength() : number</text><ellipse cx="18" cy="4092.2969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="144" x="27" y="4095.5073">max(v: Vector3) : Vector3</text><ellipse cx="18" cy="4105.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="141" x="27" y="4108.312">min(v: Vector3) : Vector3</text><ellipse cx="18" cy="4117.9063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="27" y="4121.1167">multiply(v: Vector3) : Vector3</text><ellipse cx="18" cy="4130.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="202" x="27" y="4133.9214">multiplyScalar(s: number) : Vector3</text><ellipse cx="18" cy="4143.5156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="274" x="27" y="4146.7261">multiplyVectors(a: Vector3, b: Vector3) : Vector3</text><ellipse cx="18" cy="4156.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="27" y="4159.5308">negate() : Vector3</text><ellipse cx="18" cy="4169.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="27" y="4172.3354">normalize() : Vector3</text><ellipse cx="18" cy="4181.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="198" x="27" y="4185.1401">project(camera: Camera) : Vector3</text><ellipse cx="18" cy="4194.7344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="272" x="27" y="4197.9448">projectOnPlane(planeNormal: Vector3) : Vector3</text><ellipse cx="18" cy="4207.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="211" x="27" y="4210.7495">projectOnVector(v: Vector3) : Vector3</text><ellipse cx="18" cy="4220.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="27" y="4223.5542">random() : Vector3</text><ellipse cx="18" cy="4233.1484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="27" y="4236.3589">randomDirection() : Vector3</text><ellipse cx="18" cy="4245.9531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="185" x="27" y="4249.1636">reflect(vector: Vector3) : Vector3</text><ellipse cx="18" cy="4258.7578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="27" y="4261.9683">round() : Vector3</text><ellipse cx="18" cy="4271.5625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="138" x="27" y="4274.7729">roundToZero() : Vector3</text><ellipse cx="18" cy="4284.3672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="270" x="27" y="4287.5776">set(x: number, y: number, z: number) : Vector3</text><ellipse cx="18" cy="4297.1719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="27" y="4300.3823">setComponent(index: number, value: number) : Vector3</text><ellipse cx="18" cy="4309.9766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="241" x="27" y="4313.187">setFromCylindrical(s: Cylindrical) : Vector3</text><ellipse cx="18" cy="4322.7813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="452" x="27" y="4325.9917">setFromCylindricalCoords(radius: number, theta: number, y: number) : Vector3</text><ellipse cx="18" cy="4335.5859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="27" y="4338.7964">setFromEuler(e: Euler) : Vector3</text><ellipse cx="18" cy="4348.3906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="369" x="27" y="4351.6011">setFromMatrix3Column(matrix: Matrix3, index: number) : Vector3</text><ellipse cx="18" cy="4361.1953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="27" y="4364.4058">setFromMatrixColumn(matrix: Matrix4, index: number) : Vector3</text><ellipse cx="18" cy="4374" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="27" y="4377.2104">setFromMatrixPosition(m: Matrix4) : Vector3</text><ellipse cx="18" cy="4386.8047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="235" x="27" y="4390.0151">setFromMatrixScale(m: Matrix4) : Vector3</text><ellipse cx="18" cy="4399.6094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="27" y="4402.8198">setFromSpherical(s: Spherical) : Vector3</text><ellipse cx="18" cy="4412.4141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="427" x="27" y="4415.6245">setFromSphericalCoords(r: number, phi: number, theta: number) : Vector3</text><ellipse cx="18" cy="4425.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="27" y="4428.4292">setLength(l: number) : Vector3</text><ellipse cx="18" cy="4438.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="204" x="27" y="4441.2339">setScalar(scalar: number) : Vector3</text><ellipse cx="18" cy="4450.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="27" y="4454.0386">setX(x: number) : Vector3</text><ellipse cx="18" cy="4463.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="27" y="4466.8433">setY(y: number) : Vector3</text><ellipse cx="18" cy="4476.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="4479.6479">setZ(z: number) : Vector3</text><ellipse cx="18" cy="4489.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="27" y="4492.4526">sub(a: Vector3) : Vector3</text><ellipse cx="18" cy="4502.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="27" y="4505.2573">subScalar(s: number) : Vector3</text><ellipse cx="18" cy="4514.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="27" y="4518.062">subVectors(a: Vector3, b: Vector3) : Vector3</text><ellipse cx="18" cy="4527.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="27" y="4530.8667">toArray(array: number[], offset: number) : number[]</text><ellipse cx="18" cy="4540.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="27" y="4543.6714">toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple</text><ellipse cx="18" cy="4553.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="420" x="27" y="4556.4761">toArray(array: ArrayLike&lt;number&gt;, offset: number) : ArrayLike&lt;number&gt;</text><ellipse cx="18" cy="4566.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="230" x="27" y="4569.2808">transformDirection(m: Matrix4) : Vector3</text><ellipse cx="18" cy="4578.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="212" x="27" y="4582.0854">unproject(camera: Camera) : Vector3</text><!--MD5=[d6c64b1f0b9a0da25bf9cd9e67310d9c]
class AngularVelocity--><rect codeLine="175" fill="#FEFECE" filter="url(#f1xc51alj6n3ve)" height="1123.5938" id="AngularVelocity" style="stroke:#A80036;stroke-width:1.5;" width="629" x="1354" y="7"/><ellipse cx="1616.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1619.2188,28.6406 Q1618.6406,28.9375 1618,29.0781 Q1617.3594,29.2344 1616.6563,29.2344 Q1614.1563,29.2344 1612.8281,27.5938 Q1611.5156,25.9375 1611.5156,22.8125 Q1611.5156,19.6875 1612.8281,18.0313 Q1614.1563,16.375 1616.6563,16.375 Q1617.3594,16.375 1618,16.5313 Q1618.6563,16.6875 1619.2188,16.9844 L1619.2188,19.7031 Q1618.5938,19.125 1618,18.8594 Q1617.4063,18.5781 1616.7813,18.5781 Q1615.4375,18.5781 1614.75,19.6563 Q1614.0625,20.7188 1614.0625,22.8125 Q1614.0625,24.9063 1614.75,25.9844 Q1615.4375,27.0469 1616.7813,27.0469 Q1617.4063,27.0469 1618,26.7813 Q1618.5938,26.5 1619.2188,25.9219 L1619.2188,28.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="96" x="1636.75" y="27.1543">AngularVelocity</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1355" x2="1982" y1="39" y2="39"/><ellipse cx="1365" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="345" x="1374" y="53.2104">accuracy : Accuracy&lt;AngularVelocityUnit, number | Vector3&gt;</text><ellipse cx="1365" cy="62.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="1374" y="66.0151">isVector3 : true</text><ellipse cx="1365" cy="75.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="117" x="1374" y="78.8198">timestamp : number</text><ellipse cx="1365" cy="88.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="1374" y="91.6245">x : number</text><ellipse cx="1365" cy="101.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="1374" y="104.4292">y : number</text><ellipse cx="1365" cy="114.0234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="61" x="1374" y="117.2339">z : number</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1355" x2="1982" y1="123.8281" y2="123.8281"/><ellipse cx="1365" cy="134.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="184" x="1374" y="138.0386">add(v: Vector3) : AngularVelocity</text><ellipse cx="1365" cy="147.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="222" x="1374" y="150.8433">addScalar(s: number) : AngularVelocity</text><ellipse cx="1365" cy="160.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="1374" y="163.6479">addScaledVector(v: Vector3, s: number) : AngularVelocity</text><ellipse cx="1365" cy="173.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="294" x="1374" y="176.4526">addVectors(a: Vector3, b: Vector3) : AngularVelocity</text><ellipse cx="1365" cy="186.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="1374" y="189.2573">angleTo(v: Vector3) : number</text><ellipse cx="1365" cy="198.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="1374" y="202.062">applyAxisAngle(axis: Vector3, angle: number) : AngularVelocity</text><ellipse cx="1365" cy="211.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="1374" y="214.8667">applyEuler(euler: Euler) : AngularVelocity</text><ellipse cx="1365" cy="224.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="237" x="1374" y="227.6714">applyMatrix3(m: Matrix3) : AngularVelocity</text><ellipse cx="1365" cy="237.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="237" x="1374" y="240.4761">applyMatrix4(m: Matrix4) : AngularVelocity</text><ellipse cx="1365" cy="250.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="271" x="1374" y="253.2808">applyNormalMatrix(m: Matrix3) : AngularVelocity</text><ellipse cx="1365" cy="262.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="277" x="1374" y="266.0854">applyQuaternion(q: Quaternion) : AngularVelocity</text><ellipse cx="1365" cy="275.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="125" x="1374" y="278.8901">ceil() : AngularVelocity</text><ellipse cx="1365" cy="288.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="295" x="1374" y="291.6948">clamp(min: Vector3, max: Vector3) : AngularVelocity</text><ellipse cx="1365" cy="301.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="335" x="1374" y="304.4995">clampLength(min: number, max: number) : AngularVelocity</text><ellipse cx="1365" cy="314.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="1374" y="317.3042">clampScalar(min: number, max: number) : AngularVelocity</text><ellipse cx="1365" cy="326.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="136" x="1374" y="330.1089">clone() : AngularVelocity</text><ellipse cx="1365" cy="339.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="189" x="1374" y="342.9136">copy(v: Vector3) : AngularVelocity</text><ellipse cx="1365" cy="352.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="1374" y="355.7183">cross(a: Vector3) : AngularVelocity</text><ellipse cx="1365" cy="365.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="305" x="1374" y="368.5229">crossVectors(a: Vector3, b: Vector3) : AngularVelocity</text><ellipse cx="1365" cy="378.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="1374" y="381.3276">distanceTo(v: Vector3) : number</text><ellipse cx="1365" cy="390.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="242" x="1374" y="394.1323">distanceToManhattan(v: Vector3) : number</text><ellipse cx="1365" cy="403.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="1374" y="406.937">distanceToSquared(v: Vector3) : number</text><ellipse cx="1365" cy="416.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="1374" y="419.7417">divide(v: Vector3) : AngularVelocity</text><ellipse cx="1365" cy="429.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="234" x="1374" y="432.5464">divideScalar(s: number) : AngularVelocity</text><ellipse cx="1365" cy="442.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="1374" y="445.3511">dot(v: Vector3) : number</text><ellipse cx="1365" cy="454.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="160" x="1374" y="458.1558">equals(v: Vector3) : boolean</text><ellipse cx="1365" cy="467.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="1374" y="470.9604">floor() : AngularVelocity</text><ellipse cx="1365" cy="480.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="472" x="1374" y="483.7651">fromArray(array: number[] | ArrayLike&lt;number&gt;, offset: number) : AngularVelocity</text><ellipse cx="1365" cy="493.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="398" x="1374" y="496.5698">fromArray(array: number[], unit: AngularVelocityUnit) : AngularVelocity</text><ellipse cx="1365" cy="506.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="603" x="1374" y="509.3745">fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : AngularVelocity</text><ellipse cx="1365" cy="518.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="229" x="1374" y="522.1792">getComponent(index: number) : number</text><ellipse cx="1365" cy="531.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="1374" y="534.9839">length() : number</text><ellipse cx="1365" cy="544.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="1374" y="547.7886">lengthManhattan() : number</text><ellipse cx="1365" cy="557.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="1374" y="560.5933">lengthSq() : number</text><ellipse cx="1365" cy="570.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="276" x="1374" y="573.3979">lerp(v: Vector3, alpha: number) : AngularVelocity</text><ellipse cx="1365" cy="582.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="398" x="1374" y="586.2026">lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : AngularVelocity</text><ellipse cx="1365" cy="595.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="1374" y="599.0073">manhattanDistanceTo(v: Vector3) : number</text><ellipse cx="1365" cy="608.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="1374" y="611.812">manhattanLength() : number</text><ellipse cx="1365" cy="621.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="187" x="1374" y="624.6167">max(v: Vector3) : AngularVelocity</text><ellipse cx="1365" cy="634.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="184" x="1374" y="637.4214">min(v: Vector3) : AngularVelocity</text><ellipse cx="1365" cy="647.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="207" x="1374" y="650.2261">multiply(v: Vector3) : AngularVelocity</text><ellipse cx="1365" cy="659.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="1374" y="663.0308">multiplyScalar(s: number) : AngularVelocity</text><ellipse cx="1365" cy="672.625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="1374" y="675.8354">multiplyVectors(a: Vector3, b: Vector3) : AngularVelocity</text><ellipse cx="1365" cy="685.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="145" x="1374" y="688.6401">negate() : AngularVelocity</text><ellipse cx="1365" cy="698.2344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="161" x="1374" y="701.4448">normalize() : AngularVelocity</text><ellipse cx="1365" cy="711.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="241" x="1374" y="714.2495">project(camera: Camera) : AngularVelocity</text><ellipse cx="1365" cy="723.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="1374" y="727.0542">projectOnPlane(planeNormal: Vector3) : AngularVelocity</text><ellipse cx="1365" cy="736.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="254" x="1374" y="739.8589">projectOnVector(v: Vector3) : AngularVelocity</text><ellipse cx="1365" cy="749.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="150" x="1374" y="752.6636">random() : AngularVelocity</text><ellipse cx="1365" cy="762.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="200" x="1374" y="765.4683">randomDirection() : AngularVelocity</text><ellipse cx="1365" cy="775.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="228" x="1374" y="778.2729">reflect(vector: Vector3) : AngularVelocity</text><ellipse cx="1365" cy="787.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="1374" y="791.0776">round() : AngularVelocity</text><ellipse cx="1365" cy="800.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="181" x="1374" y="803.8823">roundToZero() : AngularVelocity</text><ellipse cx="1365" cy="813.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="1374" y="816.687">set(x: number, y: number, z: number) : AngularVelocity</text><ellipse cx="1365" cy="826.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="571" x="1374" y="829.4917">setAccuracy(accuracy: number | Accuracy&lt;AngularVelocityUnit, number | Vector3&gt;) : AngularVelocity</text><ellipse cx="1365" cy="839.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="361" x="1374" y="842.2964">setComponent(index: number, value: number) : AngularVelocity</text><ellipse cx="1365" cy="851.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="1374" y="855.1011">setFromCylindrical(s: Cylindrical) : AngularVelocity</text><ellipse cx="1365" cy="864.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="495" x="1374" y="867.9058">setFromCylindricalCoords(radius: number, theta: number, y: number) : AngularVelocity</text><ellipse cx="1365" cy="877.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="1374" y="880.7104">setFromEuler(e: Euler) : AngularVelocity</text><ellipse cx="1365" cy="890.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="412" x="1374" y="893.5151">setFromMatrix3Column(matrix: Matrix3, index: number) : AngularVelocity</text><ellipse cx="1365" cy="903.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="405" x="1374" y="906.3198">setFromMatrixColumn(matrix: Matrix4, index: number) : AngularVelocity</text><ellipse cx="1365" cy="915.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="1374" y="919.1245">setFromMatrixPosition(m: Matrix4) : AngularVelocity</text><ellipse cx="1365" cy="928.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="1374" y="931.9292">setFromMatrixScale(m: Matrix4) : AngularVelocity</text><ellipse cx="1365" cy="941.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="274" x="1374" y="944.7339">setFromSpherical(s: Spherical) : AngularVelocity</text><ellipse cx="1365" cy="954.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="470" x="1374" y="957.5386">setFromSphericalCoords(r: number, phi: number, theta: number) : AngularVelocity</text><ellipse cx="1365" cy="967.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="1374" y="970.3433">setLength(l: number) : AngularVelocity</text><ellipse cx="1365" cy="979.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="247" x="1374" y="983.1479">setScalar(scalar: number) : AngularVelocity</text><ellipse cx="1365" cy="992.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="1374" y="995.9526">setX(x: number) : Vector3</text><ellipse cx="1365" cy="1005.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="1374" y="1008.7573">setY(y: number) : Vector3</text><ellipse cx="1365" cy="1018.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="1374" y="1021.562">setZ(z: number) : Vector3</text><ellipse cx="1365" cy="1031.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="185" x="1374" y="1034.3667">sub(a: Vector3) : AngularVelocity</text><ellipse cx="1365" cy="1043.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="222" x="1374" y="1047.1714">subScalar(s: number) : AngularVelocity</text><ellipse cx="1365" cy="1056.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="294" x="1374" y="1059.9761">subVectors(a: Vector3, b: Vector3) : AngularVelocity</text><ellipse cx="1365" cy="1069.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="1374" y="1072.7808">toArray(array: number[], offset: number) : number[]</text><ellipse cx="1365" cy="1082.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="1374" y="1085.5854">toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple</text><ellipse cx="1365" cy="1095.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="420" x="1374" y="1098.3901">toArray(array: ArrayLike&lt;number&gt;, offset: number) : ArrayLike&lt;number&gt;</text><ellipse cx="1365" cy="1107.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="1374" y="1111.1948">transformDirection(m: Matrix4) : AngularVelocity</text><ellipse cx="1365" cy="1120.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="255" x="1374" y="1123.9995">unproject(camera: Camera) : AngularVelocity</text><!--MD5=[b0a72cb6f9d8786c30247a2c6c4812ec]
class LinearVelocity--><rect codeLine="262" fill="#FEFECE" filter="url(#f1xc51alj6n3ve)" height="1123.5938" id="LinearVelocity" style="stroke:#A80036;stroke-width:1.5;" width="621" x="1358" y="1166"/><ellipse cx="1621.25" cy="1182" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1624.2188,1187.6406 Q1623.6406,1187.9375 1623,1188.0781 Q1622.3594,1188.2344 1621.6563,1188.2344 Q1619.1563,1188.2344 1617.8281,1186.5938 Q1616.5156,1184.9375 1616.5156,1181.8125 Q1616.5156,1178.6875 1617.8281,1177.0313 Q1619.1563,1175.375 1621.6563,1175.375 Q1622.3594,1175.375 1623,1175.5313 Q1623.6563,1175.6875 1624.2188,1175.9844 L1624.2188,1178.7031 Q1623.5938,1178.125 1623,1177.8594 Q1622.4063,1177.5781 1621.7813,1177.5781 Q1620.4375,1177.5781 1619.75,1178.6563 Q1619.0625,1179.7188 1619.0625,1181.8125 Q1619.0625,1183.9063 1619.75,1184.9844 Q1620.4375,1186.0469 1621.7813,1186.0469 Q1622.4063,1186.0469 1623,1185.7813 Q1623.5938,1185.5 1624.2188,1184.9219 L1624.2188,1187.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="86" x="1641.75" y="1186.1543">LinearVelocity</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1359" x2="1978" y1="1198" y2="1198"/><ellipse cx="1369" cy="1209" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="337" x="1378" y="1212.2104">accuracy : Accuracy&lt;LinearVelocityUnit, number | Vector3&gt;</text><ellipse cx="1369" cy="1221.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="1378" y="1225.0151">isVector3 : true</text><ellipse cx="1369" cy="1234.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="117" x="1378" y="1237.8198">timestamp : number</text><ellipse cx="1369" cy="1247.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="1378" y="1250.6245">x : number</text><ellipse cx="1369" cy="1260.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="1378" y="1263.4292">y : number</text><ellipse cx="1369" cy="1273.0234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="61" x="1378" y="1276.2339">z : number</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1359" x2="1978" y1="1282.8281" y2="1282.8281"/><ellipse cx="1369" cy="1293.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="176" x="1378" y="1297.0386">add(v: Vector3) : LinearVelocity</text><ellipse cx="1369" cy="1306.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="214" x="1378" y="1309.8433">addScalar(s: number) : LinearVelocity</text><ellipse cx="1369" cy="1319.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="1378" y="1322.6479">addScaledVector(v: Vector3, s: number) : LinearVelocity</text><ellipse cx="1369" cy="1332.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="1378" y="1335.4526">addVectors(a: Vector3, b: Vector3) : LinearVelocity</text><ellipse cx="1369" cy="1345.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="1378" y="1348.2573">angleTo(v: Vector3) : number</text><ellipse cx="1369" cy="1357.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="347" x="1378" y="1361.062">applyAxisAngle(axis: Vector3, angle: number) : LinearVelocity</text><ellipse cx="1369" cy="1370.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="223" x="1378" y="1373.8667">applyEuler(euler: Euler) : LinearVelocity</text><ellipse cx="1369" cy="1383.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="229" x="1378" y="1386.6714">applyMatrix3(m: Matrix3) : LinearVelocity</text><ellipse cx="1369" cy="1396.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="229" x="1378" y="1399.4761">applyMatrix4(m: Matrix4) : LinearVelocity</text><ellipse cx="1369" cy="1409.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="1378" y="1412.2808">applyNormalMatrix(m: Matrix3) : LinearVelocity</text><ellipse cx="1369" cy="1421.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="269" x="1378" y="1425.0854">applyQuaternion(q: Quaternion) : LinearVelocity</text><ellipse cx="1369" cy="1434.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="117" x="1378" y="1437.8901">ceil() : LinearVelocity</text><ellipse cx="1369" cy="1447.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="287" x="1378" y="1450.6948">clamp(min: Vector3, max: Vector3) : LinearVelocity</text><ellipse cx="1369" cy="1460.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="1378" y="1463.4995">clampLength(min: number, max: number) : LinearVelocity</text><ellipse cx="1369" cy="1473.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="1378" y="1476.3042">clampScalar(min: number, max: number) : LinearVelocity</text><ellipse cx="1369" cy="1485.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="128" x="1378" y="1489.1089">clone() : LinearVelocity</text><ellipse cx="1369" cy="1498.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="181" x="1378" y="1501.9136">copy(v: Vector3) : LinearVelocity</text><ellipse cx="1369" cy="1511.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="188" x="1378" y="1514.7183">cross(a: Vector3) : LinearVelocity</text><ellipse cx="1369" cy="1524.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="297" x="1378" y="1527.5229">crossVectors(a: Vector3, b: Vector3) : LinearVelocity</text><ellipse cx="1369" cy="1537.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="1378" y="1540.3276">distanceTo(v: Vector3) : number</text><ellipse cx="1369" cy="1549.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="242" x="1378" y="1553.1323">distanceToManhattan(v: Vector3) : number</text><ellipse cx="1369" cy="1562.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="1378" y="1565.937">distanceToSquared(v: Vector3) : number</text><ellipse cx="1369" cy="1575.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="188" x="1378" y="1578.7417">divide(v: Vector3) : LinearVelocity</text><ellipse cx="1369" cy="1588.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="1378" y="1591.5464">divideScalar(s: number) : LinearVelocity</text><ellipse cx="1369" cy="1601.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="1378" y="1604.3511">dot(v: Vector3) : number</text><ellipse cx="1369" cy="1613.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="160" x="1378" y="1617.1558">equals(v: Vector3) : boolean</text><ellipse cx="1369" cy="1626.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="1378" y="1629.9604">floor() : LinearVelocity</text><ellipse cx="1369" cy="1639.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="464" x="1378" y="1642.7651">fromArray(array: number[] | ArrayLike&lt;number&gt;, offset: number) : LinearVelocity</text><ellipse cx="1369" cy="1652.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="382" x="1378" y="1655.5698">fromArray(array: number[], unit: LinearVelocityUnit) : LinearVelocity</text><ellipse cx="1369" cy="1665.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="595" x="1378" y="1668.3745">fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : LinearVelocity</text><ellipse cx="1369" cy="1677.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="229" x="1378" y="1681.1792">getComponent(index: number) : number</text><ellipse cx="1369" cy="1690.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="1378" y="1693.9839">length() : number</text><ellipse cx="1369" cy="1703.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="1378" y="1706.7886">lengthManhattan() : number</text><ellipse cx="1369" cy="1716.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="1378" y="1719.5933">lengthSq() : number</text><ellipse cx="1369" cy="1729.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="1378" y="1732.3979">lerp(v: Vector3, alpha: number) : LinearVelocity</text><ellipse cx="1369" cy="1741.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="390" x="1378" y="1745.2026">lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : LinearVelocity</text><ellipse cx="1369" cy="1754.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="1378" y="1758.0073">manhattanDistanceTo(v: Vector3) : number</text><ellipse cx="1369" cy="1767.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="1378" y="1770.812">manhattanLength() : number</text><ellipse cx="1369" cy="1780.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="1378" y="1783.6167">max(v: Vector3) : LinearVelocity</text><ellipse cx="1369" cy="1793.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="176" x="1378" y="1796.4214">min(v: Vector3) : LinearVelocity</text><ellipse cx="1369" cy="1806.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="199" x="1378" y="1809.2261">multiply(v: Vector3) : LinearVelocity</text><ellipse cx="1369" cy="1818.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="237" x="1378" y="1822.0308">multiplyScalar(s: number) : LinearVelocity</text><ellipse cx="1369" cy="1831.625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="309" x="1378" y="1834.8354">multiplyVectors(a: Vector3, b: Vector3) : LinearVelocity</text><ellipse cx="1369" cy="1844.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="137" x="1378" y="1847.6401">negate() : LinearVelocity</text><ellipse cx="1369" cy="1857.2344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="153" x="1378" y="1860.4448">normalize() : LinearVelocity</text><ellipse cx="1369" cy="1870.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="1378" y="1873.2495">project(camera: Camera) : LinearVelocity</text><ellipse cx="1369" cy="1882.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="1378" y="1886.0542">projectOnPlane(planeNormal: Vector3) : LinearVelocity</text><ellipse cx="1369" cy="1895.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="1378" y="1898.8589">projectOnVector(v: Vector3) : LinearVelocity</text><ellipse cx="1369" cy="1908.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="1378" y="1911.6636">random() : LinearVelocity</text><ellipse cx="1369" cy="1921.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="192" x="1378" y="1924.4683">randomDirection() : LinearVelocity</text><ellipse cx="1369" cy="1934.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="220" x="1378" y="1937.2729">reflect(vector: Vector3) : LinearVelocity</text><ellipse cx="1369" cy="1946.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="1378" y="1950.0776">round() : LinearVelocity</text><ellipse cx="1369" cy="1959.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="173" x="1378" y="1962.8823">roundToZero() : LinearVelocity</text><ellipse cx="1369" cy="1972.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="305" x="1378" y="1975.687">set(x: number, y: number, z: number) : LinearVelocity</text><ellipse cx="1369" cy="1985.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="555" x="1378" y="1988.4917">setAccuracy(accuracy: number | Accuracy&lt;LinearVelocityUnit, number | Vector3&gt;) : LinearVelocity</text><ellipse cx="1369" cy="1998.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="1378" y="2001.2964">setComponent(index: number, value: number) : LinearVelocity</text><ellipse cx="1369" cy="2010.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="276" x="1378" y="2014.1011">setFromCylindrical(s: Cylindrical) : LinearVelocity</text><ellipse cx="1369" cy="2023.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="487" x="1378" y="2026.9058">setFromCylindricalCoords(radius: number, theta: number, y: number) : LinearVelocity</text><ellipse cx="1369" cy="2036.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="218" x="1378" y="2039.7104">setFromEuler(e: Euler) : LinearVelocity</text><ellipse cx="1369" cy="2049.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="404" x="1378" y="2052.5151">setFromMatrix3Column(matrix: Matrix3, index: number) : LinearVelocity</text><ellipse cx="1369" cy="2062.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="397" x="1378" y="2065.3198">setFromMatrixColumn(matrix: Matrix4, index: number) : LinearVelocity</text><ellipse cx="1369" cy="2074.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="1378" y="2078.1245">setFromMatrixPosition(m: Matrix4) : LinearVelocity</text><ellipse cx="1369" cy="2087.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="270" x="1378" y="2090.9292">setFromMatrixScale(m: Matrix4) : LinearVelocity</text><ellipse cx="1369" cy="2100.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="266" x="1378" y="2103.7339">setFromSpherical(s: Spherical) : LinearVelocity</text><ellipse cx="1369" cy="2113.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="462" x="1378" y="2116.5386">setFromSphericalCoords(r: number, phi: number, theta: number) : LinearVelocity</text><ellipse cx="1369" cy="2126.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="1378" y="2129.3433">setLength(l: number) : LinearVelocity</text><ellipse cx="1369" cy="2138.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="1378" y="2142.1479">setScalar(scalar: number) : LinearVelocity</text><ellipse cx="1369" cy="2151.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="1378" y="2154.9526">setX(x: number) : Vector3</text><ellipse cx="1369" cy="2164.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="1378" y="2167.7573">setY(y: number) : Vector3</text><ellipse cx="1369" cy="2177.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="1378" y="2180.562">setZ(z: number) : Vector3</text><ellipse cx="1369" cy="2190.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="177" x="1378" y="2193.3667">sub(a: Vector3) : LinearVelocity</text><ellipse cx="1369" cy="2202.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="214" x="1378" y="2206.1714">subScalar(s: number) : LinearVelocity</text><ellipse cx="1369" cy="2215.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="1378" y="2218.9761">subVectors(a: Vector3, b: Vector3) : LinearVelocity</text><ellipse cx="1369" cy="2228.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="1378" y="2231.7808">toArray(array: number[], offset: number) : number[]</text><ellipse cx="1369" cy="2241.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="1378" y="2244.5854">toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple</text><ellipse cx="1369" cy="2254.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="420" x="1378" y="2257.3901">toArray(array: ArrayLike&lt;number&gt;, offset: number) : ArrayLike&lt;number&gt;</text><ellipse cx="1369" cy="2266.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="265" x="1378" y="2270.1948">transformDirection(m: Matrix4) : LinearVelocity</text><ellipse cx="1369" cy="2279.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="247" x="1378" y="2282.9995">unproject(camera: Camera) : LinearVelocity</text><!--MD5=[bc39a93972ee56a020d0ede45fbe8c90]
class Acceleration--><rect codeLine="349" fill="#FEFECE" filter="url(#f1xc51alj6n3ve)" height="1123.5938" id="Acceleration" style="stroke:#A80036;stroke-width:1.5;" width="612" x="1362.5" y="2325"/><ellipse cx="1625.25" cy="2341" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1628.2188,2346.6406 Q1627.6406,2346.9375 1627,2347.0781 Q1626.3594,2347.2344 1625.6563,2347.2344 Q1623.1563,2347.2344 1621.8281,2345.5938 Q1620.5156,2343.9375 1620.5156,2340.8125 Q1620.5156,2337.6875 1621.8281,2336.0313 Q1623.1563,2334.375 1625.6563,2334.375 Q1626.3594,2334.375 1627,2334.5313 Q1627.6563,2334.6875 1628.2188,2334.9844 L1628.2188,2337.7031 Q1627.5938,2337.125 1627,2336.8594 Q1626.4063,2336.5781 1625.7813,2336.5781 Q1624.4375,2336.5781 1623.75,2337.6563 Q1623.0625,2338.7188 1623.0625,2340.8125 Q1623.0625,2342.9063 1623.75,2343.9844 Q1624.4375,2345.0469 1625.7813,2345.0469 Q1626.4063,2345.0469 1627,2344.7813 Q1627.5938,2344.5 1628.2188,2343.9219 L1628.2188,2346.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="78" x="1645.75" y="2345.1543">Acceleration</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1363.5" x2="1973.5" y1="2357" y2="2357"/><ellipse cx="1373.5" cy="2368" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="1382.5" y="2371.2104">accuracy : Accuracy&lt;Unit, number | Vector3&gt;</text><ellipse cx="1373.5" cy="2380.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="1382.5" y="2384.0151">isVector3 : true</text><ellipse cx="1373.5" cy="2393.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="117" x="1382.5" y="2396.8198">timestamp : number</text><ellipse cx="1373.5" cy="2406.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="1382.5" y="2409.6245">x : number</text><ellipse cx="1373.5" cy="2419.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="1382.5" y="2422.4292">y : number</text><ellipse cx="1373.5" cy="2432.0234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="61" x="1382.5" y="2435.2339">z : number</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1363.5" x2="1973.5" y1="2441.8281" y2="2441.8281"/><ellipse cx="1373.5" cy="2452.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="167" x="1382.5" y="2456.0386">add(v: Vector3) : Acceleration</text><ellipse cx="1373.5" cy="2465.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="1382.5" y="2468.8433">addScalar(s: number) : Acceleration</text><ellipse cx="1373.5" cy="2478.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="1382.5" y="2481.6479">addScaledVector(v: Vector3, s: number) : Acceleration</text><ellipse cx="1373.5" cy="2491.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="277" x="1382.5" y="2494.4526">addVectors(a: Vector3, b: Vector3) : Acceleration</text><ellipse cx="1373.5" cy="2504.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="1382.5" y="2507.2573">angleTo(v: Vector3) : number</text><ellipse cx="1373.5" cy="2516.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="1382.5" y="2520.062">applyAxisAngle(axis: Vector3, angle: number) : Acceleration</text><ellipse cx="1373.5" cy="2529.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="214" x="1382.5" y="2532.8667">applyEuler(euler: Euler) : Acceleration</text><ellipse cx="1373.5" cy="2542.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="220" x="1382.5" y="2545.6714">applyMatrix3(m: Matrix3) : Acceleration</text><ellipse cx="1373.5" cy="2555.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="220" x="1382.5" y="2558.4761">applyMatrix4(m: Matrix4) : Acceleration</text><ellipse cx="1373.5" cy="2568.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="254" x="1382.5" y="2571.2808">applyNormalMatrix(m: Matrix3) : Acceleration</text><ellipse cx="1373.5" cy="2580.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="260" x="1382.5" y="2584.0854">applyQuaternion(q: Quaternion) : Acceleration</text><ellipse cx="1373.5" cy="2593.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="108" x="1382.5" y="2596.8901">ceil() : Acceleration</text><ellipse cx="1373.5" cy="2606.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="1382.5" y="2609.6948">clamp(min: Vector3, max: Vector3) : Acceleration</text><ellipse cx="1373.5" cy="2619.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="1382.5" y="2622.4995">clampLength(min: number, max: number) : Acceleration</text><ellipse cx="1373.5" cy="2632.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="316" x="1382.5" y="2635.3042">clampScalar(min: number, max: number) : Acceleration</text><ellipse cx="1373.5" cy="2644.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="119" x="1382.5" y="2648.1089">clone() : Acceleration</text><ellipse cx="1373.5" cy="2657.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="1382.5" y="2660.9136">copy(v: Vector3) : Acceleration</text><ellipse cx="1373.5" cy="2670.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="1382.5" y="2673.7183">cross(a: Vector3) : Acceleration</text><ellipse cx="1373.5" cy="2683.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="1382.5" y="2686.5229">crossVectors(a: Vector3, b: Vector3) : Acceleration</text><ellipse cx="1373.5" cy="2696.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="1382.5" y="2699.3276">distanceTo(v: Vector3) : number</text><ellipse cx="1373.5" cy="2708.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="242" x="1382.5" y="2712.1323">distanceToManhattan(v: Vector3) : number</text><ellipse cx="1373.5" cy="2721.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="1382.5" y="2724.937">distanceToSquared(v: Vector3) : number</text><ellipse cx="1373.5" cy="2734.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="1382.5" y="2737.7417">divide(v: Vector3) : Acceleration</text><ellipse cx="1373.5" cy="2747.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="1382.5" y="2750.5464">divideScalar(s: number) : Acceleration</text><ellipse cx="1373.5" cy="2760.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="1382.5" y="2763.3511">dot(v: Vector3) : number</text><ellipse cx="1373.5" cy="2772.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="160" x="1382.5" y="2776.1558">equals(v: Vector3) : boolean</text><ellipse cx="1373.5" cy="2785.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="115" x="1382.5" y="2788.9604">floor() : Acceleration</text><ellipse cx="1373.5" cy="2798.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="455" x="1382.5" y="2801.7651">fromArray(array: number[] | ArrayLike&lt;number&gt;, offset: number) : Acceleration</text><ellipse cx="1373.5" cy="2811.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="1382.5" y="2814.5698">fromArray(array: number[]) : Vector3</text><ellipse cx="1373.5" cy="2824.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="586" x="1382.5" y="2827.3745">fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : Acceleration</text><ellipse cx="1373.5" cy="2836.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="229" x="1382.5" y="2840.1792">getComponent(index: number) : number</text><ellipse cx="1373.5" cy="2849.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="1382.5" y="2852.9839">length() : number</text><ellipse cx="1373.5" cy="2862.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="1382.5" y="2865.7886">lengthManhattan() : number</text><ellipse cx="1373.5" cy="2875.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="1382.5" y="2878.5933">lengthSq() : number</text><ellipse cx="1373.5" cy="2888.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="1382.5" y="2891.3979">lerp(v: Vector3, alpha: number) : Acceleration</text><ellipse cx="1373.5" cy="2900.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="381" x="1382.5" y="2904.2026">lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : Acceleration</text><ellipse cx="1373.5" cy="2913.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="1382.5" y="2917.0073">manhattanDistanceTo(v: Vector3) : number</text><ellipse cx="1373.5" cy="2926.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="1382.5" y="2929.812">manhattanLength() : number</text><ellipse cx="1373.5" cy="2939.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="170" x="1382.5" y="2942.6167">max(v: Vector3) : Acceleration</text><ellipse cx="1373.5" cy="2952.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="167" x="1382.5" y="2955.4214">min(v: Vector3) : Acceleration</text><ellipse cx="1373.5" cy="2965.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="1382.5" y="2968.2261">multiply(v: Vector3) : Acceleration</text><ellipse cx="1373.5" cy="2977.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="228" x="1382.5" y="2981.0308">multiplyScalar(s: number) : Acceleration</text><ellipse cx="1373.5" cy="2990.625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="1382.5" y="2993.8354">multiplyVectors(a: Vector3, b: Vector3) : Acceleration</text><ellipse cx="1373.5" cy="3003.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="128" x="1382.5" y="3006.6401">negate() : Acceleration</text><ellipse cx="1373.5" cy="3016.2344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="144" x="1382.5" y="3019.4448">normalize() : Acceleration</text><ellipse cx="1373.5" cy="3029.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="224" x="1382.5" y="3032.2495">project(camera: Camera) : Acceleration</text><ellipse cx="1373.5" cy="3041.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="1382.5" y="3045.0542">projectOnPlane(planeNormal: Vector3) : Acceleration</text><ellipse cx="1373.5" cy="3054.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="237" x="1382.5" y="3057.8589">projectOnVector(v: Vector3) : Acceleration</text><ellipse cx="1373.5" cy="3067.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="133" x="1382.5" y="3070.6636">random() : Acceleration</text><ellipse cx="1373.5" cy="3080.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="1382.5" y="3083.4683">randomDirection() : Acceleration</text><ellipse cx="1373.5" cy="3093.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="211" x="1382.5" y="3096.2729">reflect(vector: Vector3) : Acceleration</text><ellipse cx="1373.5" cy="3105.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="122" x="1382.5" y="3109.0776">round() : Acceleration</text><ellipse cx="1373.5" cy="3118.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="1382.5" y="3121.8823">roundToZero() : Acceleration</text><ellipse cx="1373.5" cy="3131.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="1382.5" y="3134.687">set(x: number, y: number, z: number) : Acceleration</text><ellipse cx="1373.5" cy="3144.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="468" x="1382.5" y="3147.4917">setAccuracy(accuracy: number | Accuracy&lt;Unit, number | Vector3&gt;) : Acceleration</text><ellipse cx="1373.5" cy="3157.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="344" x="1382.5" y="3160.2964">setComponent(index: number, value: number) : Acceleration</text><ellipse cx="1373.5" cy="3169.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="267" x="1382.5" y="3173.1011">setFromCylindrical(s: Cylindrical) : Acceleration</text><ellipse cx="1373.5" cy="3182.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="478" x="1382.5" y="3185.9058">setFromCylindricalCoords(radius: number, theta: number, y: number) : Acceleration</text><ellipse cx="1373.5" cy="3195.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="1382.5" y="3198.7104">setFromEuler(e: Euler) : Acceleration</text><ellipse cx="1373.5" cy="3208.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="395" x="1382.5" y="3211.5151">setFromMatrix3Column(matrix: Matrix3, index: number) : Acceleration</text><ellipse cx="1373.5" cy="3221.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="388" x="1382.5" y="3224.3198">setFromMatrixColumn(matrix: Matrix4, index: number) : Acceleration</text><ellipse cx="1373.5" cy="3233.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="275" x="1382.5" y="3237.1245">setFromMatrixPosition(m: Matrix4) : Acceleration</text><ellipse cx="1373.5" cy="3246.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="1382.5" y="3249.9292">setFromMatrixScale(m: Matrix4) : Acceleration</text><ellipse cx="1373.5" cy="3259.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="257" x="1382.5" y="3262.7339">setFromSpherical(s: Spherical) : Acceleration</text><ellipse cx="1373.5" cy="3272.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="453" x="1382.5" y="3275.5386">setFromSphericalCoords(r: number, phi: number, theta: number) : Acceleration</text><ellipse cx="1373.5" cy="3285.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="200" x="1382.5" y="3288.3433">setLength(l: number) : Acceleration</text><ellipse cx="1373.5" cy="3297.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="230" x="1382.5" y="3301.1479">setScalar(scalar: number) : Acceleration</text><ellipse cx="1373.5" cy="3310.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="1382.5" y="3313.9526">setX(x: number) : Vector3</text><ellipse cx="1373.5" cy="3323.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="1382.5" y="3326.7573">setY(y: number) : Vector3</text><ellipse cx="1373.5" cy="3336.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="1382.5" y="3339.562">setZ(z: number) : Vector3</text><ellipse cx="1373.5" cy="3349.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="168" x="1382.5" y="3352.3667">sub(a: Vector3) : Acceleration</text><ellipse cx="1373.5" cy="3361.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="1382.5" y="3365.1714">subScalar(s: number) : Acceleration</text><ellipse cx="1373.5" cy="3374.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="277" x="1382.5" y="3377.9761">subVectors(a: Vector3, b: Vector3) : Acceleration</text><ellipse cx="1373.5" cy="3387.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="1382.5" y="3390.7808">toArray(array: number[], offset: number) : number[]</text><ellipse cx="1373.5" cy="3400.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="1382.5" y="3403.5854">toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple</text><ellipse cx="1373.5" cy="3413.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="420" x="1382.5" y="3416.3901">toArray(array: ArrayLike&lt;number&gt;, offset: number) : ArrayLike&lt;number&gt;</text><ellipse cx="1373.5" cy="3425.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="1382.5" y="3429.1948">transformDirection(m: Matrix4) : Acceleration</text><ellipse cx="1373.5" cy="3438.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="238" x="1382.5" y="3441.9995">unproject(camera: Camera) : Acceleration</text><!--MD5=[f02933025c3ec2d278bf7cd3bbb510c9]
class Magnetism--><rect codeLine="436" fill="#FEFECE" filter="url(#f1xc51alj6n3ve)" height="1123.5938" id="Magnetism" style="stroke:#A80036;stroke-width:1.5;" width="605" x="1366" y="3484"/><ellipse cx="1630.25" cy="3500" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1633.2188,3505.6406 Q1632.6406,3505.9375 1632,3506.0781 Q1631.3594,3506.2344 1630.6563,3506.2344 Q1628.1563,3506.2344 1626.8281,3504.5938 Q1625.5156,3502.9375 1625.5156,3499.8125 Q1625.5156,3496.6875 1626.8281,3495.0313 Q1628.1563,3493.375 1630.6563,3493.375 Q1631.3594,3493.375 1632,3493.5313 Q1632.6563,3493.6875 1633.2188,3493.9844 L1633.2188,3496.7031 Q1632.5938,3496.125 1632,3495.8594 Q1631.4063,3495.5781 1630.7813,3495.5781 Q1629.4375,3495.5781 1628.75,3496.6563 Q1628.0625,3497.7188 1628.0625,3499.8125 Q1628.0625,3501.9063 1628.75,3502.9844 Q1629.4375,3504.0469 1630.7813,3504.0469 Q1631.4063,3504.0469 1632,3503.7813 Q1632.5938,3503.5 1633.2188,3502.9219 L1633.2188,3505.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="68" x="1650.75" y="3504.1543">Magnetism</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1367" x2="1970" y1="3516" y2="3516"/><ellipse cx="1377" cy="3527" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="1386" y="3530.2104">accuracy : Accuracy&lt;Unit, number | Vector3&gt;</text><ellipse cx="1377" cy="3539.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="1386" y="3543.0151">isVector3 : true</text><ellipse cx="1377" cy="3552.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="117" x="1386" y="3555.8198">timestamp : number</text><ellipse cx="1377" cy="3565.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="1386" y="3568.6245">x : number</text><ellipse cx="1377" cy="3578.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="1386" y="3581.4292">y : number</text><ellipse cx="1377" cy="3591.0234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="61" x="1386" y="3594.2339">z : number</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1367" x2="1970" y1="3600.8281" y2="3600.8281"/><ellipse cx="1377" cy="3611.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="160" x="1386" y="3615.0386">add(v: Vector3) : Magnetism</text><ellipse cx="1377" cy="3624.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="198" x="1386" y="3627.8433">addScalar(s: number) : Magnetism</text><ellipse cx="1377" cy="3637.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="1386" y="3640.6479">addScaledVector(v: Vector3, s: number) : Magnetism</text><ellipse cx="1377" cy="3650.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="270" x="1386" y="3653.4526">addVectors(a: Vector3, b: Vector3) : Magnetism</text><ellipse cx="1377" cy="3663.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="1386" y="3666.2573">angleTo(v: Vector3) : number</text><ellipse cx="1377" cy="3675.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="331" x="1386" y="3679.062">applyAxisAngle(axis: Vector3, angle: number) : Magnetism</text><ellipse cx="1377" cy="3688.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="207" x="1386" y="3691.8667">applyEuler(euler: Euler) : Magnetism</text><ellipse cx="1377" cy="3701.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="1386" y="3704.6714">applyMatrix3(m: Matrix3) : Magnetism</text><ellipse cx="1377" cy="3714.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="1386" y="3717.4761">applyMatrix4(m: Matrix4) : Magnetism</text><ellipse cx="1377" cy="3727.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="247" x="1386" y="3730.2808">applyNormalMatrix(m: Matrix3) : Magnetism</text><ellipse cx="1377" cy="3739.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="1386" y="3743.0854">applyQuaternion(q: Quaternion) : Magnetism</text><ellipse cx="1377" cy="3752.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="101" x="1386" y="3755.8901">ceil() : Magnetism</text><ellipse cx="1377" cy="3765.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="271" x="1386" y="3768.6948">clamp(min: Vector3, max: Vector3) : Magnetism</text><ellipse cx="1377" cy="3778.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="311" x="1386" y="3781.4995">clampLength(min: number, max: number) : Magnetism</text><ellipse cx="1377" cy="3791.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="309" x="1386" y="3794.3042">clampScalar(min: number, max: number) : Magnetism</text><ellipse cx="1377" cy="3803.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="112" x="1386" y="3807.1089">clone() : Magnetism</text><ellipse cx="1377" cy="3816.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="1386" y="3819.9136">copy(v: Vector3) : Magnetism</text><ellipse cx="1377" cy="3829.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="1386" y="3832.7183">cross(a: Vector3) : Magnetism</text><ellipse cx="1377" cy="3842.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="1386" y="3845.5229">crossVectors(a: Vector3, b: Vector3) : Magnetism</text><ellipse cx="1377" cy="3855.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="1386" y="3858.3276">distanceTo(v: Vector3) : number</text><ellipse cx="1377" cy="3867.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="242" x="1386" y="3871.1323">distanceToManhattan(v: Vector3) : number</text><ellipse cx="1377" cy="3880.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="1386" y="3883.937">distanceToSquared(v: Vector3) : number</text><ellipse cx="1377" cy="3893.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="1386" y="3896.7417">divide(v: Vector3) : Magnetism</text><ellipse cx="1377" cy="3906.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="1386" y="3909.5464">divideScalar(s: number) : Magnetism</text><ellipse cx="1377" cy="3919.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="1386" y="3922.3511">dot(v: Vector3) : number</text><ellipse cx="1377" cy="3931.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="160" x="1386" y="3935.1558">equals(v: Vector3) : boolean</text><ellipse cx="1377" cy="3944.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="108" x="1386" y="3947.9604">floor() : Magnetism</text><ellipse cx="1377" cy="3957.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="448" x="1386" y="3960.7651">fromArray(array: number[] | ArrayLike&lt;number&gt;, offset: number) : Magnetism</text><ellipse cx="1377" cy="3970.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="1386" y="3973.5698">fromArray(array: number[]) : Vector3</text><ellipse cx="1377" cy="3983.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="579" x="1386" y="3986.3745">fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : Magnetism</text><ellipse cx="1377" cy="3995.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="229" x="1386" y="3999.1792">getComponent(index: number) : number</text><ellipse cx="1377" cy="4008.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="1386" y="4011.9839">length() : number</text><ellipse cx="1377" cy="4021.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="1386" y="4024.7886">lengthManhattan() : number</text><ellipse cx="1377" cy="4034.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="1386" y="4037.5933">lengthSq() : number</text><ellipse cx="1377" cy="4047.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="252" x="1386" y="4050.3979">lerp(v: Vector3, alpha: number) : Magnetism</text><ellipse cx="1377" cy="4059.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="374" x="1386" y="4063.2026">lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : Magnetism</text><ellipse cx="1377" cy="4072.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="1386" y="4076.0073">manhattanDistanceTo(v: Vector3) : number</text><ellipse cx="1377" cy="4085.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="1386" y="4088.812">manhattanLength() : number</text><ellipse cx="1377" cy="4098.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="1386" y="4101.6167">max(v: Vector3) : Magnetism</text><ellipse cx="1377" cy="4111.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="160" x="1386" y="4114.4214">min(v: Vector3) : Magnetism</text><ellipse cx="1377" cy="4124.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="1386" y="4127.2261">multiply(v: Vector3) : Magnetism</text><ellipse cx="1377" cy="4136.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="221" x="1386" y="4140.0308">multiplyScalar(s: number) : Magnetism</text><ellipse cx="1377" cy="4149.625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="1386" y="4152.8354">multiplyVectors(a: Vector3, b: Vector3) : Magnetism</text><ellipse cx="1377" cy="4162.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="121" x="1386" y="4165.6401">negate() : Magnetism</text><ellipse cx="1377" cy="4175.2344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="137" x="1386" y="4178.4448">normalize() : Magnetism</text><ellipse cx="1377" cy="4188.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="1386" y="4191.2495">project(camera: Camera) : Magnetism</text><ellipse cx="1377" cy="4200.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="291" x="1386" y="4204.0542">projectOnPlane(planeNormal: Vector3) : Magnetism</text><ellipse cx="1377" cy="4213.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="230" x="1386" y="4216.8589">projectOnVector(v: Vector3) : Magnetism</text><ellipse cx="1377" cy="4226.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="126" x="1386" y="4229.6636">random() : Magnetism</text><ellipse cx="1377" cy="4239.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="176" x="1386" y="4242.4683">randomDirection() : Magnetism</text><ellipse cx="1377" cy="4252.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="204" x="1386" y="4255.2729">reflect(vector: Vector3) : Magnetism</text><ellipse cx="1377" cy="4264.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="115" x="1386" y="4268.0776">round() : Magnetism</text><ellipse cx="1377" cy="4277.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="1386" y="4280.8823">roundToZero() : Magnetism</text><ellipse cx="1377" cy="4290.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="1386" y="4293.687">set(x: number, y: number, z: number) : Magnetism</text><ellipse cx="1377" cy="4303.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="461" x="1386" y="4306.4917">setAccuracy(accuracy: number | Accuracy&lt;Unit, number | Vector3&gt;) : Magnetism</text><ellipse cx="1377" cy="4316.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="337" x="1386" y="4319.2964">setComponent(index: number, value: number) : Magnetism</text><ellipse cx="1377" cy="4328.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="260" x="1386" y="4332.1011">setFromCylindrical(s: Cylindrical) : Magnetism</text><ellipse cx="1377" cy="4341.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="471" x="1386" y="4344.9058">setFromCylindricalCoords(radius: number, theta: number, y: number) : Magnetism</text><ellipse cx="1377" cy="4354.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="202" x="1386" y="4357.7104">setFromEuler(e: Euler) : Magnetism</text><ellipse cx="1377" cy="4367.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="388" x="1386" y="4370.5151">setFromMatrix3Column(matrix: Matrix3, index: number) : Magnetism</text><ellipse cx="1377" cy="4380.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="381" x="1386" y="4383.3198">setFromMatrixColumn(matrix: Matrix4, index: number) : Magnetism</text><ellipse cx="1377" cy="4392.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="1386" y="4396.1245">setFromMatrixPosition(m: Matrix4) : Magnetism</text><ellipse cx="1377" cy="4405.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="254" x="1386" y="4408.9292">setFromMatrixScale(m: Matrix4) : Magnetism</text><ellipse cx="1377" cy="4418.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="250" x="1386" y="4421.7339">setFromSpherical(s: Spherical) : Magnetism</text><ellipse cx="1377" cy="4431.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="446" x="1386" y="4434.5386">setFromSphericalCoords(r: number, phi: number, theta: number) : Magnetism</text><ellipse cx="1377" cy="4444.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="1386" y="4447.3433">setLength(l: number) : Magnetism</text><ellipse cx="1377" cy="4456.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="223" x="1386" y="4460.1479">setScalar(scalar: number) : Magnetism</text><ellipse cx="1377" cy="4469.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="1386" y="4472.9526">setX(x: number) : Vector3</text><ellipse cx="1377" cy="4482.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="1386" y="4485.7573">setY(y: number) : Vector3</text><ellipse cx="1377" cy="4495.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="1386" y="4498.562">setZ(z: number) : Vector3</text><ellipse cx="1377" cy="4508.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="161" x="1386" y="4511.3667">sub(a: Vector3) : Magnetism</text><ellipse cx="1377" cy="4520.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="198" x="1386" y="4524.1714">subScalar(s: number) : Magnetism</text><ellipse cx="1377" cy="4533.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="270" x="1386" y="4536.9761">subVectors(a: Vector3, b: Vector3) : Magnetism</text><ellipse cx="1377" cy="4546.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="1386" y="4549.7808">toArray(array: number[], offset: number) : number[]</text><ellipse cx="1377" cy="4559.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="1386" y="4562.5854">toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple</text><ellipse cx="1377" cy="4572.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="420" x="1386" y="4575.3901">toArray(array: ArrayLike&lt;number&gt;, offset: number) : ArrayLike&lt;number&gt;</text><ellipse cx="1377" cy="4584.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="1386" y="4588.1948">transformDirection(m: Matrix4) : Magnetism</text><ellipse cx="1377" cy="4597.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="1386" y="4600.9995">unproject(camera: Camera) : Magnetism</text><!--MD5=[3c2cbbee24bda6f963becc0a442377df]
class Temperature--><rect codeLine="523" fill="#FEFECE" filter="url(#f1xc51alj6n3ve)" height="1123.5938" id="Temperature" style="stroke:#A80036;stroke-width:1.5;" width="617" x="1360" y="4643"/><ellipse cx="1623.75" cy="4659" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1626.7188,4664.6406 Q1626.1406,4664.9375 1625.5,4665.0781 Q1624.8594,4665.2344 1624.1563,4665.2344 Q1621.6563,4665.2344 1620.3281,4663.5938 Q1619.0156,4661.9375 1619.0156,4658.8125 Q1619.0156,4655.6875 1620.3281,4654.0313 Q1621.6563,4652.375 1624.1563,4652.375 Q1624.8594,4652.375 1625.5,4652.5313 Q1626.1563,4652.6875 1626.7188,4652.9844 L1626.7188,4655.7031 Q1626.0938,4655.125 1625.5,4654.8594 Q1624.9063,4654.5781 1624.2813,4654.5781 Q1622.9375,4654.5781 1622.25,4655.6563 Q1621.5625,4656.7188 1621.5625,4658.8125 Q1621.5625,4660.9063 1622.25,4661.9844 Q1622.9375,4663.0469 1624.2813,4663.0469 Q1624.9063,4663.0469 1625.5,4662.7813 Q1626.0938,4662.5 1626.7188,4661.9219 L1626.7188,4664.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="81" x="1644.25" y="4663.1543">Temperature</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1361" x2="1976" y1="4675" y2="4675"/><ellipse cx="1371" cy="4686" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="1380" y="4689.2104">accuracy : Accuracy&lt;TemperatureUnit, number | Vector3&gt;</text><ellipse cx="1371" cy="4698.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="1380" y="4702.0151">isVector3 : true</text><ellipse cx="1371" cy="4711.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="117" x="1380" y="4714.8198">timestamp : number</text><ellipse cx="1371" cy="4724.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="1380" y="4727.6245">x : number</text><ellipse cx="1371" cy="4737.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="1380" y="4740.4292">y : number</text><ellipse cx="1371" cy="4750.0234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="61" x="1380" y="4753.2339">z : number</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1361" x2="1976" y1="4759.8281" y2="4759.8281"/><ellipse cx="1371" cy="4770.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="1380" y="4774.0386">add(v: Vector3) : Temperature</text><ellipse cx="1371" cy="4783.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="1380" y="4786.8433">addScalar(s: number) : Temperature</text><ellipse cx="1371" cy="4796.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="1380" y="4799.6479">addScaledVector(v: Vector3, s: number) : Temperature</text><ellipse cx="1371" cy="4809.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="282" x="1380" y="4812.4526">addVectors(a: Vector3, b: Vector3) : Temperature</text><ellipse cx="1371" cy="4822.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="1380" y="4825.2573">angleTo(v: Vector3) : number</text><ellipse cx="1371" cy="4834.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="1380" y="4838.062">applyAxisAngle(axis: Vector3, angle: number) : Temperature</text><ellipse cx="1371" cy="4847.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="219" x="1380" y="4850.8667">applyEuler(euler: Euler) : Temperature</text><ellipse cx="1371" cy="4860.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="225" x="1380" y="4863.6714">applyMatrix3(m: Matrix3) : Temperature</text><ellipse cx="1371" cy="4873.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="225" x="1380" y="4876.4761">applyMatrix4(m: Matrix4) : Temperature</text><ellipse cx="1371" cy="4886.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="1380" y="4889.2808">applyNormalMatrix(m: Matrix3) : Temperature</text><ellipse cx="1371" cy="4898.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="265" x="1380" y="4902.0854">applyQuaternion(q: Quaternion) : Temperature</text><ellipse cx="1371" cy="4911.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="113" x="1380" y="4914.8901">ceil() : Temperature</text><ellipse cx="1371" cy="4924.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="1380" y="4927.6948">clamp(min: Vector3, max: Vector3) : Temperature</text><ellipse cx="1371" cy="4937.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="1380" y="4940.4995">clampLength(min: number, max: number) : Temperature</text><ellipse cx="1371" cy="4950.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="321" x="1380" y="4953.3042">clampScalar(min: number, max: number) : Temperature</text><ellipse cx="1371" cy="4962.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="1380" y="4966.1089">clone() : Temperature</text><ellipse cx="1371" cy="4975.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="177" x="1380" y="4978.9136">copy(v: Vector3) : Temperature</text><ellipse cx="1371" cy="4988.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="184" x="1380" y="4991.7183">cross(a: Vector3) : Temperature</text><ellipse cx="1371" cy="5001.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="1380" y="5004.5229">crossVectors(a: Vector3, b: Vector3) : Temperature</text><ellipse cx="1371" cy="5014.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="1380" y="5017.3276">distanceTo(v: Vector3) : number</text><ellipse cx="1371" cy="5026.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="242" x="1380" y="5030.1323">distanceToManhattan(v: Vector3) : number</text><ellipse cx="1371" cy="5039.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="1380" y="5042.937">distanceToSquared(v: Vector3) : number</text><ellipse cx="1371" cy="5052.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="184" x="1380" y="5055.7417">divide(v: Vector3) : Temperature</text><ellipse cx="1371" cy="5065.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="222" x="1380" y="5068.5464">divideScalar(s: number) : Temperature</text><ellipse cx="1371" cy="5078.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="1380" y="5081.3511">dot(v: Vector3) : number</text><ellipse cx="1371" cy="5090.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="160" x="1380" y="5094.1558">equals(v: Vector3) : boolean</text><ellipse cx="1371" cy="5103.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="120" x="1380" y="5106.9604">floor() : Temperature</text><ellipse cx="1371" cy="5116.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="460" x="1380" y="5119.7651">fromArray(array: number[] | ArrayLike&lt;number&gt;, offset: number) : Temperature</text><ellipse cx="1371" cy="5129.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="1380" y="5132.5698">fromArray(array: number[]) : Vector3</text><ellipse cx="1371" cy="5142.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="591" x="1380" y="5145.3745">fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : Temperature</text><ellipse cx="1371" cy="5154.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="229" x="1380" y="5158.1792">getComponent(index: number) : number</text><ellipse cx="1371" cy="5167.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="1380" y="5170.9839">length() : number</text><ellipse cx="1371" cy="5180.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="1380" y="5183.7886">lengthManhattan() : number</text><ellipse cx="1371" cy="5193.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="1380" y="5196.5933">lengthSq() : number</text><ellipse cx="1371" cy="5206.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="1380" y="5209.3979">lerp(v: Vector3, alpha: number) : Temperature</text><ellipse cx="1371" cy="5218.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="1380" y="5222.2026">lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : Temperature</text><ellipse cx="1371" cy="5231.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="1380" y="5235.0073">manhattanDistanceTo(v: Vector3) : number</text><ellipse cx="1371" cy="5244.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="1380" y="5247.812">manhattanLength() : number</text><ellipse cx="1371" cy="5257.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="175" x="1380" y="5260.6167">max(v: Vector3) : Temperature</text><ellipse cx="1371" cy="5270.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="1380" y="5273.4214">min(v: Vector3) : Temperature</text><ellipse cx="1371" cy="5283.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="195" x="1380" y="5286.2261">multiply(v: Vector3) : Temperature</text><ellipse cx="1371" cy="5295.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="1380" y="5299.0308">multiplyScalar(s: number) : Temperature</text><ellipse cx="1371" cy="5308.625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="305" x="1380" y="5311.8354">multiplyVectors(a: Vector3, b: Vector3) : Temperature</text><ellipse cx="1371" cy="5321.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="133" x="1380" y="5324.6401">negate() : Temperature</text><ellipse cx="1371" cy="5334.2344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="149" x="1380" y="5337.4448">normalize() : Temperature</text><ellipse cx="1371" cy="5347.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="229" x="1380" y="5350.2495">project(camera: Camera) : Temperature</text><ellipse cx="1371" cy="5359.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="1380" y="5363.0542">projectOnPlane(planeNormal: Vector3) : Temperature</text><ellipse cx="1371" cy="5372.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="242" x="1380" y="5375.8589">projectOnVector(v: Vector3) : Temperature</text><ellipse cx="1371" cy="5385.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="138" x="1380" y="5388.6636">random() : Temperature</text><ellipse cx="1371" cy="5398.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="188" x="1380" y="5401.4683">randomDirection() : Temperature</text><ellipse cx="1371" cy="5411.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="216" x="1380" y="5414.2729">reflect(vector: Vector3) : Temperature</text><ellipse cx="1371" cy="5423.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="1380" y="5427.0776">round() : Temperature</text><ellipse cx="1371" cy="5436.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="1380" y="5439.8823">roundToZero() : Temperature</text><ellipse cx="1371" cy="5449.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="1380" y="5452.687">set(x: number, y: number, z: number) : Temperature</text><ellipse cx="1371" cy="5462.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="547" x="1380" y="5465.4917">setAccuracy(accuracy: number | Accuracy&lt;TemperatureUnit, number | Vector3&gt;) : Temperature</text><ellipse cx="1371" cy="5475.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="349" x="1380" y="5478.2964">setComponent(index: number, value: number) : Temperature</text><ellipse cx="1371" cy="5487.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="272" x="1380" y="5491.1011">setFromCylindrical(s: Cylindrical) : Temperature</text><ellipse cx="1371" cy="5500.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="483" x="1380" y="5503.9058">setFromCylindricalCoords(radius: number, theta: number, y: number) : Temperature</text><ellipse cx="1371" cy="5513.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="214" x="1380" y="5516.7104">setFromEuler(e: Euler) : Temperature</text><ellipse cx="1371" cy="5526.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="400" x="1380" y="5529.5151">setFromMatrix3Column(matrix: Matrix3, index: number) : Temperature</text><ellipse cx="1371" cy="5539.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="393" x="1380" y="5542.3198">setFromMatrixColumn(matrix: Matrix4, index: number) : Temperature</text><ellipse cx="1371" cy="5551.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="1380" y="5555.1245">setFromMatrixPosition(m: Matrix4) : Temperature</text><ellipse cx="1371" cy="5564.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="266" x="1380" y="5567.9292">setFromMatrixScale(m: Matrix4) : Temperature</text><ellipse cx="1371" cy="5577.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="1380" y="5580.7339">setFromSpherical(s: Spherical) : Temperature</text><ellipse cx="1371" cy="5590.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="458" x="1380" y="5593.5386">setFromSphericalCoords(r: number, phi: number, theta: number) : Temperature</text><ellipse cx="1371" cy="5603.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="1380" y="5606.3433">setLength(l: number) : Temperature</text><ellipse cx="1371" cy="5615.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="235" x="1380" y="5619.1479">setScalar(scalar: number) : Temperature</text><ellipse cx="1371" cy="5628.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="1380" y="5631.9526">setX(x: number) : Vector3</text><ellipse cx="1371" cy="5641.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="1380" y="5644.7573">setY(y: number) : Vector3</text><ellipse cx="1371" cy="5654.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="1380" y="5657.562">setZ(z: number) : Vector3</text><ellipse cx="1371" cy="5667.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="173" x="1380" y="5670.3667">sub(a: Vector3) : Temperature</text><ellipse cx="1371" cy="5679.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="1380" y="5683.1714">subScalar(s: number) : Temperature</text><ellipse cx="1371" cy="5692.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="282" x="1380" y="5695.9761">subVectors(a: Vector3, b: Vector3) : Temperature</text><ellipse cx="1371" cy="5705.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="1380" y="5708.7808">toArray(array: number[], offset: number) : number[]</text><ellipse cx="1371" cy="5718.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="1380" y="5721.5854">toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple</text><ellipse cx="1371" cy="5731.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="420" x="1380" y="5734.3901">toArray(array: ArrayLike&lt;number&gt;, offset: number) : ArrayLike&lt;number&gt;</text><ellipse cx="1371" cy="5743.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="1380" y="5747.1948">transformDirection(m: Matrix4) : Temperature</text><ellipse cx="1371" cy="5756.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="1380" y="5759.9995">unproject(camera: Camera) : Temperature</text><!--MD5=[1ad99a7a567e6a4f8e1b7cd137b6c72a]
class Humidity--><rect codeLine="610" fill="#FEFECE" filter="url(#f1xc51alj6n3ve)" height="1123.5938" id="Humidity" style="stroke:#A80036;stroke-width:1.5;" width="592" x="1372.5" y="5802"/><ellipse cx="1637.75" cy="5818" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1640.7188,5823.6406 Q1640.1406,5823.9375 1639.5,5824.0781 Q1638.8594,5824.2344 1638.1563,5824.2344 Q1635.6563,5824.2344 1634.3281,5822.5938 Q1633.0156,5820.9375 1633.0156,5817.8125 Q1633.0156,5814.6875 1634.3281,5813.0313 Q1635.6563,5811.375 1638.1563,5811.375 Q1638.8594,5811.375 1639.5,5811.5313 Q1640.1563,5811.6875 1640.7188,5811.9844 L1640.7188,5814.7031 Q1640.0938,5814.125 1639.5,5813.8594 Q1638.9063,5813.5781 1638.2813,5813.5781 Q1636.9375,5813.5781 1636.25,5814.6563 Q1635.5625,5815.7188 1635.5625,5817.8125 Q1635.5625,5819.9063 1636.25,5820.9844 Q1636.9375,5822.0469 1638.2813,5822.0469 Q1638.9063,5822.0469 1639.5,5821.7813 Q1640.0938,5821.5 1640.7188,5820.9219 L1640.7188,5823.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="53" x="1658.25" y="5822.1543">Humidity</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1373.5" x2="1963.5" y1="5834" y2="5834"/><ellipse cx="1383.5" cy="5845" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="1392.5" y="5848.2104">accuracy : Accuracy&lt;Unit, number | Vector3&gt;</text><ellipse cx="1383.5" cy="5857.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="1392.5" y="5861.0151">isVector3 : true</text><ellipse cx="1383.5" cy="5870.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="117" x="1392.5" y="5873.8198">timestamp : number</text><ellipse cx="1383.5" cy="5883.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="1392.5" y="5886.6245">x : number</text><ellipse cx="1383.5" cy="5896.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="1392.5" y="5899.4292">y : number</text><ellipse cx="1383.5" cy="5909.0234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="61" x="1392.5" y="5912.2339">z : number</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1373.5" x2="1963.5" y1="5918.8281" y2="5918.8281"/><ellipse cx="1383.5" cy="5929.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="1392.5" y="5933.0386">add(v: Vector3) : Humidity</text><ellipse cx="1383.5" cy="5942.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="185" x="1392.5" y="5945.8433">addScalar(s: number) : Humidity</text><ellipse cx="1383.5" cy="5955.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="1392.5" y="5958.6479">addScaledVector(v: Vector3, s: number) : Humidity</text><ellipse cx="1383.5" cy="5968.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="257" x="1392.5" y="5971.4526">addVectors(a: Vector3, b: Vector3) : Humidity</text><ellipse cx="1383.5" cy="5981.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="1392.5" y="5984.2573">angleTo(v: Vector3) : number</text><ellipse cx="1383.5" cy="5993.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="1392.5" y="5997.062">applyAxisAngle(axis: Vector3, angle: number) : Humidity</text><ellipse cx="1383.5" cy="6006.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="1392.5" y="6009.8667">applyEuler(euler: Euler) : Humidity</text><ellipse cx="1383.5" cy="6019.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="200" x="1392.5" y="6022.6714">applyMatrix3(m: Matrix3) : Humidity</text><ellipse cx="1383.5" cy="6032.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="200" x="1392.5" y="6035.4761">applyMatrix4(m: Matrix4) : Humidity</text><ellipse cx="1383.5" cy="6045.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="234" x="1392.5" y="6048.2808">applyNormalMatrix(m: Matrix3) : Humidity</text><ellipse cx="1383.5" cy="6057.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="240" x="1392.5" y="6061.0854">applyQuaternion(q: Quaternion) : Humidity</text><ellipse cx="1383.5" cy="6070.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="1392.5" y="6073.8901">ceil() : Humidity</text><ellipse cx="1383.5" cy="6083.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="258" x="1392.5" y="6086.6948">clamp(min: Vector3, max: Vector3) : Humidity</text><ellipse cx="1383.5" cy="6096.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="1392.5" y="6099.4995">clampLength(min: number, max: number) : Humidity</text><ellipse cx="1383.5" cy="6109.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="1392.5" y="6112.3042">clampScalar(min: number, max: number) : Humidity</text><ellipse cx="1383.5" cy="6121.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="1392.5" y="6125.1089">clone() : Humidity</text><ellipse cx="1383.5" cy="6134.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="152" x="1392.5" y="6137.9136">copy(v: Vector3) : Humidity</text><ellipse cx="1383.5" cy="6147.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="159" x="1392.5" y="6150.7183">cross(a: Vector3) : Humidity</text><ellipse cx="1383.5" cy="6160.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="268" x="1392.5" y="6163.5229">crossVectors(a: Vector3, b: Vector3) : Humidity</text><ellipse cx="1383.5" cy="6173.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="1392.5" y="6176.3276">distanceTo(v: Vector3) : number</text><ellipse cx="1383.5" cy="6185.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="242" x="1392.5" y="6189.1323">distanceToManhattan(v: Vector3) : number</text><ellipse cx="1383.5" cy="6198.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="1392.5" y="6201.937">distanceToSquared(v: Vector3) : number</text><ellipse cx="1383.5" cy="6211.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="159" x="1392.5" y="6214.7417">divide(v: Vector3) : Humidity</text><ellipse cx="1383.5" cy="6224.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="1392.5" y="6227.5464">divideScalar(s: number) : Humidity</text><ellipse cx="1383.5" cy="6237.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="1392.5" y="6240.3511">dot(v: Vector3) : number</text><ellipse cx="1383.5" cy="6249.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="160" x="1392.5" y="6253.1558">equals(v: Vector3) : boolean</text><ellipse cx="1383.5" cy="6262.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="1392.5" y="6265.9604">floor() : Humidity</text><ellipse cx="1383.5" cy="6275.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="435" x="1392.5" y="6278.7651">fromArray(array: number[] | ArrayLike&lt;number&gt;, offset: number) : Humidity</text><ellipse cx="1383.5" cy="6288.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="1392.5" y="6291.5698">fromArray(array: number[]) : Vector3</text><ellipse cx="1383.5" cy="6301.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="566" x="1392.5" y="6304.3745">fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : Humidity</text><ellipse cx="1383.5" cy="6313.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="229" x="1392.5" y="6317.1792">getComponent(index: number) : number</text><ellipse cx="1383.5" cy="6326.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="1392.5" y="6329.9839">length() : number</text><ellipse cx="1383.5" cy="6339.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="1392.5" y="6342.7886">lengthManhattan() : number</text><ellipse cx="1383.5" cy="6352.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="1392.5" y="6355.5933">lengthSq() : number</text><ellipse cx="1383.5" cy="6365.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="1392.5" y="6368.3979">lerp(v: Vector3, alpha: number) : Humidity</text><ellipse cx="1383.5" cy="6377.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="361" x="1392.5" y="6381.2026">lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : Humidity</text><ellipse cx="1383.5" cy="6390.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="1392.5" y="6394.0073">manhattanDistanceTo(v: Vector3) : number</text><ellipse cx="1383.5" cy="6403.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="1392.5" y="6406.812">manhattanLength() : number</text><ellipse cx="1383.5" cy="6416.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="150" x="1392.5" y="6419.6167">max(v: Vector3) : Humidity</text><ellipse cx="1383.5" cy="6429.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="1392.5" y="6432.4214">min(v: Vector3) : Humidity</text><ellipse cx="1383.5" cy="6442.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="170" x="1392.5" y="6445.2261">multiply(v: Vector3) : Humidity</text><ellipse cx="1383.5" cy="6454.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="208" x="1392.5" y="6458.0308">multiplyScalar(s: number) : Humidity</text><ellipse cx="1383.5" cy="6467.625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="1392.5" y="6470.8354">multiplyVectors(a: Vector3, b: Vector3) : Humidity</text><ellipse cx="1383.5" cy="6480.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="108" x="1392.5" y="6483.6401">negate() : Humidity</text><ellipse cx="1383.5" cy="6493.2344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="124" x="1392.5" y="6496.4448">normalize() : Humidity</text><ellipse cx="1383.5" cy="6506.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="204" x="1392.5" y="6509.2495">project(camera: Camera) : Humidity</text><ellipse cx="1383.5" cy="6518.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="1392.5" y="6522.0542">projectOnPlane(planeNormal: Vector3) : Humidity</text><ellipse cx="1383.5" cy="6531.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="1392.5" y="6534.8589">projectOnVector(v: Vector3) : Humidity</text><ellipse cx="1383.5" cy="6544.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="113" x="1392.5" y="6547.6636">random() : Humidity</text><ellipse cx="1383.5" cy="6557.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="1392.5" y="6560.4683">randomDirection() : Humidity</text><ellipse cx="1383.5" cy="6570.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="191" x="1392.5" y="6573.2729">reflect(vector: Vector3) : Humidity</text><ellipse cx="1383.5" cy="6582.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="1392.5" y="6586.0776">round() : Humidity</text><ellipse cx="1383.5" cy="6595.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="144" x="1392.5" y="6598.8823">roundToZero() : Humidity</text><ellipse cx="1383.5" cy="6608.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="276" x="1392.5" y="6611.687">set(x: number, y: number, z: number) : Humidity</text><ellipse cx="1383.5" cy="6621.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="448" x="1392.5" y="6624.4917">setAccuracy(accuracy: number | Accuracy&lt;Unit, number | Vector3&gt;) : Humidity</text><ellipse cx="1383.5" cy="6634.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="324" x="1392.5" y="6637.2964">setComponent(index: number, value: number) : Humidity</text><ellipse cx="1383.5" cy="6646.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="247" x="1392.5" y="6650.1011">setFromCylindrical(s: Cylindrical) : Humidity</text><ellipse cx="1383.5" cy="6659.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="458" x="1392.5" y="6662.9058">setFromCylindricalCoords(radius: number, theta: number, y: number) : Humidity</text><ellipse cx="1383.5" cy="6672.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="189" x="1392.5" y="6675.7104">setFromEuler(e: Euler) : Humidity</text><ellipse cx="1383.5" cy="6685.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="375" x="1392.5" y="6688.5151">setFromMatrix3Column(matrix: Matrix3, index: number) : Humidity</text><ellipse cx="1383.5" cy="6698.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="368" x="1392.5" y="6701.3198">setFromMatrixColumn(matrix: Matrix4, index: number) : Humidity</text><ellipse cx="1383.5" cy="6710.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="255" x="1392.5" y="6714.1245">setFromMatrixPosition(m: Matrix4) : Humidity</text><ellipse cx="1383.5" cy="6723.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="241" x="1392.5" y="6726.9292">setFromMatrixScale(m: Matrix4) : Humidity</text><ellipse cx="1383.5" cy="6736.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="237" x="1392.5" y="6739.7339">setFromSpherical(s: Spherical) : Humidity</text><ellipse cx="1383.5" cy="6749.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="433" x="1392.5" y="6752.5386">setFromSphericalCoords(r: number, phi: number, theta: number) : Humidity</text><ellipse cx="1383.5" cy="6762.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="180" x="1392.5" y="6765.3433">setLength(l: number) : Humidity</text><ellipse cx="1383.5" cy="6774.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="1392.5" y="6778.1479">setScalar(scalar: number) : Humidity</text><ellipse cx="1383.5" cy="6787.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="1392.5" y="6790.9526">setX(x: number) : Vector3</text><ellipse cx="1383.5" cy="6800.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="1392.5" y="6803.7573">setY(y: number) : Vector3</text><ellipse cx="1383.5" cy="6813.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="1392.5" y="6816.562">setZ(z: number) : Vector3</text><ellipse cx="1383.5" cy="6826.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="148" x="1392.5" y="6829.3667">sub(a: Vector3) : Humidity</text><ellipse cx="1383.5" cy="6838.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="185" x="1392.5" y="6842.1714">subScalar(s: number) : Humidity</text><ellipse cx="1383.5" cy="6851.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="257" x="1392.5" y="6854.9761">subVectors(a: Vector3, b: Vector3) : Humidity</text><ellipse cx="1383.5" cy="6864.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="1392.5" y="6867.7808">toArray(array: number[], offset: number) : number[]</text><ellipse cx="1383.5" cy="6877.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="1392.5" y="6880.5854">toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple</text><ellipse cx="1383.5" cy="6890.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="420" x="1392.5" y="6893.3901">toArray(array: ArrayLike&lt;number&gt;, offset: number) : ArrayLike&lt;number&gt;</text><ellipse cx="1383.5" cy="6902.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="236" x="1392.5" y="6906.1948">transformDirection(m: Matrix4) : Humidity</text><ellipse cx="1383.5" cy="6915.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="218" x="1392.5" y="6918.9995">unproject(camera: Camera) : Humidity</text><!--MD5=[3d8084c486044b16cd1ef3d96c28010c]
class Pressure--><rect codeLine="697" fill="#FEFECE" filter="url(#f1xc51alj6n3ve)" height="1123.5938" id="Pressure" style="stroke:#A80036;stroke-width:1.5;" width="595" x="1371" y="6961"/><ellipse cx="1636.25" cy="6977" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1639.2188,6982.6406 Q1638.6406,6982.9375 1638,6983.0781 Q1637.3594,6983.2344 1636.6563,6983.2344 Q1634.1563,6983.2344 1632.8281,6981.5938 Q1631.5156,6979.9375 1631.5156,6976.8125 Q1631.5156,6973.6875 1632.8281,6972.0313 Q1634.1563,6970.375 1636.6563,6970.375 Q1637.3594,6970.375 1638,6970.5313 Q1638.6563,6970.6875 1639.2188,6970.9844 L1639.2188,6973.7031 Q1638.5938,6973.125 1638,6972.8594 Q1637.4063,6972.5781 1636.7813,6972.5781 Q1635.4375,6972.5781 1634.75,6973.6563 Q1634.0625,6974.7188 1634.0625,6976.8125 Q1634.0625,6978.9063 1634.75,6979.9844 Q1635.4375,6981.0469 1636.7813,6981.0469 Q1637.4063,6981.0469 1638,6980.7813 Q1638.5938,6980.5 1639.2188,6979.9219 L1639.2188,6982.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="56" x="1656.75" y="6981.1543">Pressure</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1372" x2="1965" y1="6993" y2="6993"/><ellipse cx="1382" cy="7004" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="311" x="1391" y="7007.2104">accuracy : Accuracy&lt;PressureUnit, number | Vector3&gt;</text><ellipse cx="1382" cy="7016.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="1391" y="7020.0151">isVector3 : true</text><ellipse cx="1382" cy="7029.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="117" x="1391" y="7032.8198">timestamp : number</text><ellipse cx="1382" cy="7042.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="1391" y="7045.6245">x : number</text><ellipse cx="1382" cy="7055.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="1391" y="7058.4292">y : number</text><ellipse cx="1382" cy="7068.0234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="61" x="1391" y="7071.2339">z : number</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1372" x2="1965" y1="7077.8281" y2="7077.8281"/><ellipse cx="1382" cy="7088.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="150" x="1391" y="7092.0386">add(v: Vector3) : Pressure</text><ellipse cx="1382" cy="7101.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="188" x="1391" y="7104.8433">addScalar(s: number) : Pressure</text><ellipse cx="1382" cy="7114.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="291" x="1391" y="7117.6479">addScaledVector(v: Vector3, s: number) : Pressure</text><ellipse cx="1382" cy="7127.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="260" x="1391" y="7130.4526">addVectors(a: Vector3, b: Vector3) : Pressure</text><ellipse cx="1382" cy="7140.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="1391" y="7143.2573">angleTo(v: Vector3) : number</text><ellipse cx="1382" cy="7152.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="321" x="1391" y="7156.062">applyAxisAngle(axis: Vector3, angle: number) : Pressure</text><ellipse cx="1382" cy="7165.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="1391" y="7168.8667">applyEuler(euler: Euler) : Pressure</text><ellipse cx="1382" cy="7178.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="203" x="1391" y="7181.6714">applyMatrix3(m: Matrix3) : Pressure</text><ellipse cx="1382" cy="7191.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="203" x="1391" y="7194.4761">applyMatrix4(m: Matrix4) : Pressure</text><ellipse cx="1382" cy="7204.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="237" x="1391" y="7207.2808">applyNormalMatrix(m: Matrix3) : Pressure</text><ellipse cx="1382" cy="7216.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="1391" y="7220.0854">applyQuaternion(q: Quaternion) : Pressure</text><ellipse cx="1382" cy="7229.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="91" x="1391" y="7232.8901">ceil() : Pressure</text><ellipse cx="1382" cy="7242.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="1391" y="7245.6948">clamp(min: Vector3, max: Vector3) : Pressure</text><ellipse cx="1382" cy="7255.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="1391" y="7258.4995">clampLength(min: number, max: number) : Pressure</text><ellipse cx="1382" cy="7268.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="299" x="1391" y="7271.3042">clampScalar(min: number, max: number) : Pressure</text><ellipse cx="1382" cy="7280.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="1391" y="7284.1089">clone() : Pressure</text><ellipse cx="1382" cy="7293.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="1391" y="7296.9136">copy(v: Vector3) : Pressure</text><ellipse cx="1382" cy="7306.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="1391" y="7309.7183">cross(a: Vector3) : Pressure</text><ellipse cx="1382" cy="7319.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="271" x="1391" y="7322.5229">crossVectors(a: Vector3, b: Vector3) : Pressure</text><ellipse cx="1382" cy="7332.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="1391" y="7335.3276">distanceTo(v: Vector3) : number</text><ellipse cx="1382" cy="7344.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="242" x="1391" y="7348.1323">distanceToManhattan(v: Vector3) : number</text><ellipse cx="1382" cy="7357.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="1391" y="7360.937">distanceToSquared(v: Vector3) : number</text><ellipse cx="1382" cy="7370.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="1391" y="7373.7417">divide(v: Vector3) : Pressure</text><ellipse cx="1382" cy="7383.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="200" x="1391" y="7386.5464">divideScalar(s: number) : Pressure</text><ellipse cx="1382" cy="7396.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="1391" y="7399.3511">dot(v: Vector3) : number</text><ellipse cx="1382" cy="7408.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="160" x="1391" y="7412.1558">equals(v: Vector3) : boolean</text><ellipse cx="1382" cy="7421.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="98" x="1391" y="7424.9604">floor() : Pressure</text><ellipse cx="1382" cy="7434.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="438" x="1391" y="7437.7651">fromArray(array: number[] | ArrayLike&lt;number&gt;, offset: number) : Pressure</text><ellipse cx="1382" cy="7447.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="1391" y="7450.5698">fromArray(array: number[]) : Vector3</text><ellipse cx="1382" cy="7460.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="569" x="1391" y="7463.3745">fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : Pressure</text><ellipse cx="1382" cy="7472.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="229" x="1391" y="7476.1792">getComponent(index: number) : number</text><ellipse cx="1382" cy="7485.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="1391" y="7488.9839">length() : number</text><ellipse cx="1382" cy="7498.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="1391" y="7501.7886">lengthManhattan() : number</text><ellipse cx="1382" cy="7511.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="1391" y="7514.5933">lengthSq() : number</text><ellipse cx="1382" cy="7524.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="242" x="1391" y="7527.3979">lerp(v: Vector3, alpha: number) : Pressure</text><ellipse cx="1382" cy="7536.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="364" x="1391" y="7540.2026">lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : Pressure</text><ellipse cx="1382" cy="7549.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="1391" y="7553.0073">manhattanDistanceTo(v: Vector3) : number</text><ellipse cx="1382" cy="7562.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="1391" y="7565.812">manhattanLength() : number</text><ellipse cx="1382" cy="7575.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="153" x="1391" y="7578.6167">max(v: Vector3) : Pressure</text><ellipse cx="1382" cy="7588.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="150" x="1391" y="7591.4214">min(v: Vector3) : Pressure</text><ellipse cx="1382" cy="7601.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="173" x="1391" y="7604.2261">multiply(v: Vector3) : Pressure</text><ellipse cx="1382" cy="7613.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="211" x="1391" y="7617.0308">multiplyScalar(s: number) : Pressure</text><ellipse cx="1382" cy="7626.625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="1391" y="7629.8354">multiplyVectors(a: Vector3, b: Vector3) : Pressure</text><ellipse cx="1382" cy="7639.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="1391" y="7642.6401">negate() : Pressure</text><ellipse cx="1382" cy="7652.2344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="1391" y="7655.4448">normalize() : Pressure</text><ellipse cx="1382" cy="7665.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="207" x="1391" y="7668.2495">project(camera: Camera) : Pressure</text><ellipse cx="1382" cy="7677.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="1391" y="7681.0542">projectOnPlane(planeNormal: Vector3) : Pressure</text><ellipse cx="1382" cy="7690.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="220" x="1391" y="7693.8589">projectOnVector(v: Vector3) : Pressure</text><ellipse cx="1382" cy="7703.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="116" x="1391" y="7706.6636">random() : Pressure</text><ellipse cx="1382" cy="7716.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="1391" y="7719.4683">randomDirection() : Pressure</text><ellipse cx="1382" cy="7729.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="1391" y="7732.2729">reflect(vector: Vector3) : Pressure</text><ellipse cx="1382" cy="7741.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="105" x="1391" y="7745.0776">round() : Pressure</text><ellipse cx="1382" cy="7754.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="1391" y="7757.8823">roundToZero() : Pressure</text><ellipse cx="1382" cy="7767.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="279" x="1391" y="7770.687">set(x: number, y: number, z: number) : Pressure</text><ellipse cx="1382" cy="7780.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="503" x="1391" y="7783.4917">setAccuracy(accuracy: number | Accuracy&lt;PressureUnit, number | Vector3&gt;) : Pressure</text><ellipse cx="1382" cy="7793.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="1391" y="7796.2964">setComponent(index: number, value: number) : Pressure</text><ellipse cx="1382" cy="7805.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="250" x="1391" y="7809.1011">setFromCylindrical(s: Cylindrical) : Pressure</text><ellipse cx="1382" cy="7818.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="461" x="1391" y="7821.9058">setFromCylindricalCoords(radius: number, theta: number, y: number) : Pressure</text><ellipse cx="1382" cy="7831.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="192" x="1391" y="7834.7104">setFromEuler(e: Euler) : Pressure</text><ellipse cx="1382" cy="7844.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="378" x="1391" y="7847.5151">setFromMatrix3Column(matrix: Matrix3, index: number) : Pressure</text><ellipse cx="1382" cy="7857.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="371" x="1391" y="7860.3198">setFromMatrixColumn(matrix: Matrix4, index: number) : Pressure</text><ellipse cx="1382" cy="7869.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="258" x="1391" y="7873.1245">setFromMatrixPosition(m: Matrix4) : Pressure</text><ellipse cx="1382" cy="7882.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="1391" y="7885.9292">setFromMatrixScale(m: Matrix4) : Pressure</text><ellipse cx="1382" cy="7895.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="240" x="1391" y="7898.7339">setFromSpherical(s: Spherical) : Pressure</text><ellipse cx="1382" cy="7908.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="436" x="1391" y="7911.5386">setFromSphericalCoords(r: number, phi: number, theta: number) : Pressure</text><ellipse cx="1382" cy="7921.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="1391" y="7924.3433">setLength(l: number) : Pressure</text><ellipse cx="1382" cy="7933.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="1391" y="7937.1479">setScalar(scalar: number) : Pressure</text><ellipse cx="1382" cy="7946.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="1391" y="7949.9526">setX(x: number) : Vector3</text><ellipse cx="1382" cy="7959.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="1391" y="7962.7573">setY(y: number) : Vector3</text><ellipse cx="1382" cy="7972.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="1391" y="7975.562">setZ(z: number) : Vector3</text><ellipse cx="1382" cy="7985.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="151" x="1391" y="7988.3667">sub(a: Vector3) : Pressure</text><ellipse cx="1382" cy="7997.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="188" x="1391" y="8001.1714">subScalar(s: number) : Pressure</text><ellipse cx="1382" cy="8010.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="260" x="1391" y="8013.9761">subVectors(a: Vector3, b: Vector3) : Pressure</text><ellipse cx="1382" cy="8023.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="1391" y="8026.7808">toArray(array: number[], offset: number) : number[]</text><ellipse cx="1382" cy="8036.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="1391" y="8039.5854">toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple</text><ellipse cx="1382" cy="8049.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="420" x="1391" y="8052.3901">toArray(array: ArrayLike&lt;number&gt;, offset: number) : ArrayLike&lt;number&gt;</text><ellipse cx="1382" cy="8061.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="1391" y="8065.1948">transformDirection(m: Matrix4) : Pressure</text><ellipse cx="1382" cy="8074.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="221" x="1391" y="8077.9995">unproject(camera: Camera) : Pressure</text><!--MD5=[1cafbe24978ea8390c218e1f9c355cf1]
reverse link Vector3 to SensorValue<U>--><path codeLine="174" d="M613.11,4046 C626.33,4046 639.6,4046 652.84,4046 " fill="none" id="Vector3-backto-SensorValue&lt;U&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="613.09,4053,593.09,4046,613.09,4039,613.09,4053" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[5885aa7f98b8b97e7cb531b41cc7c1d7]
reverse link SensorValue<U> to AngularVelocity--><path codeLine="261" d="M988.61,3463.79 C1017.28,2868.69 1102.58,1924.22 1354,1148 C1355.81,1142.43 1357.66,1136.84 1359.57,1131.26 " fill="none" id="SensorValue&lt;U&gt;-backto-AngularVelocity" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="995.59,3464.29,987.65,3483.93,981.61,3463.62,995.59,3464.29" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[483fae7d46a158f579edcbe30a852bdb]
reverse link SensorValue<U> to LinearVelocity--><path codeLine="348" d="M1059.32,3464.03 C1119.69,3120.57 1215.04,2681.22 1354,2307 C1356.09,2301.37 1358.22,2295.74 1360.4,2290.09 " fill="none" id="SensorValue&lt;U&gt;-backto-LinearVelocity" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1066.18,3465.43,1055.84,3483.93,1052.39,3463.02,1066.18,3465.43" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[d66b1f55b9e7e14e10e2589d4f2acfa7]
reverse link SensorValue<U> to Acceleration--><path codeLine="435" d="M1304.51,3494.07 C1323.8,3461.81 1343.16,3429.44 1362.34,3397.36 " fill="none" id="SensorValue&lt;U&gt;-backto-Acceleration" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1310.39,3497.88,1294.12,3511.45,1298.38,3490.69,1310.39,3497.88" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[246e51c37c66b11bba7435235febf294]
reverse link SensorValue<U> to Magnetism--><path codeLine="522" d="M1314.29,4046 C1331.49,4046 1348.71,4046 1365.79,4046 " fill="none" id="SensorValue&lt;U&gt;-backto-Magnetism" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1314.12,4053,1294.12,4046,1314.12,4039,1314.12,4053" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[35c56c313d7b793aeca1f68fd448d02d]
reverse link SensorValue<U> to Temperature--><path codeLine="609" d="M1304.41,4597.75 C1322.93,4628.73 1341.52,4659.81 1359.95,4690.65 " fill="none" id="SensorValue&lt;U&gt;-backto-Temperature" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1298.38,4601.31,1294.12,4580.55,1310.39,4594.12,1298.38,4601.31" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[9c6e00fe38e835cfafbe02cff5ef3c4c]
reverse link SensorValue<U> to Humidity--><path codeLine="696" d="M1059.32,4627.97 C1119.69,4971.43 1215.04,5410.78 1354,5785 C1359.82,5800.67 1366,5816.44 1372.47,5832.25 " fill="none" id="SensorValue&lt;U&gt;-backto-Humidity" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1052.39,4628.98,1055.84,4608.07,1066.18,4626.57,1052.39,4628.98" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[4a7113191e57884116893403825a6091]
reverse link SensorValue<U> to Pressure--><path codeLine="783" d="M988.61,4628.21 C1017.28,5223.31 1102.58,6167.78 1354,6944 C1359.24,6960.18 1364.93,6976.43 1371,6992.69 " fill="none" id="SensorValue&lt;U&gt;-backto-Pressure" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="981.61,4628.38,987.65,4608.07,995.59,4627.71,981.61,4628.38" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[52be729792d95a3235c2b179bce6a362]
@startuml
skinparam BackgroundColor transparent
left to right direction
hide empty methods
hide empty fields
class "SensorValue<U>" {
    +accuracy : Accuracy<U, number | Vector3>
    +isVector3 : true
    +timestamp : number
    +x : number
    +y : number
    +z : number
    +add(v: Vector3) : SensorValue<U>
    +addScalar(s: number) : SensorValue<U>
    +addScaledVector(v: Vector3, s: number) : SensorValue<U>
    +addVectors(a: Vector3, b: Vector3) : SensorValue<U>
    +angleTo(v: Vector3) : number
    +applyAxisAngle(axis: Vector3, angle: number) : SensorValue<U>
    +applyEuler(euler: Euler) : SensorValue<U>
    +applyMatrix3(m: Matrix3) : SensorValue<U>
    +applyMatrix4(m: Matrix4) : SensorValue<U>
    +applyNormalMatrix(m: Matrix3) : SensorValue<U>
    +applyQuaternion(q: Quaternion) : SensorValue<U>
    +ceil() : SensorValue<U>
    +clamp(min: Vector3, max: Vector3) : SensorValue<U>
    +clampLength(min: number, max: number) : SensorValue<U>
    +clampScalar(min: number, max: number) : SensorValue<U>
    +clone() : SensorValue<U>
    +copy(v: Vector3) : SensorValue<U>
    +cross(a: Vector3) : SensorValue<U>
    +crossVectors(a: Vector3, b: Vector3) : SensorValue<U>
    +distanceTo(v: Vector3) : number
    +distanceToManhattan(v: Vector3) : number
    +distanceToSquared(v: Vector3) : number
    +divide(v: Vector3) : SensorValue<U>
    +divideScalar(s: number) : SensorValue<U>
    +dot(v: Vector3) : number
    +equals(v: Vector3) : boolean
    +floor() : SensorValue<U>
    +fromArray(array: number[] | ArrayLike<number>, offset: number) : SensorValue<U>
    {static} +fromArray(array: number[]) : Vector3
    +fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : SensorValue<U>
    +getComponent(index: number) : number
    +length() : number
    +lengthManhattan() : number
    +lengthSq() : number
    +lerp(v: Vector3, alpha: number) : SensorValue<U>
    +lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : SensorValue<U>
    +manhattanDistanceTo(v: Vector3) : number
    +manhattanLength() : number
    +max(v: Vector3) : SensorValue<U>
    +min(v: Vector3) : SensorValue<U>
    +multiply(v: Vector3) : SensorValue<U>
    +multiplyScalar(s: number) : SensorValue<U>
    +multiplyVectors(a: Vector3, b: Vector3) : SensorValue<U>
    +negate() : SensorValue<U>
    +normalize() : SensorValue<U>
    +project(camera: Camera) : SensorValue<U>
    +projectOnPlane(planeNormal: Vector3) : SensorValue<U>
    +projectOnVector(v: Vector3) : SensorValue<U>
    +random() : SensorValue<U>
    +randomDirection() : SensorValue<U>
    +reflect(vector: Vector3) : SensorValue<U>
    +round() : SensorValue<U>
    +roundToZero() : SensorValue<U>
    +set(x: number, y: number, z: number) : SensorValue<U>
    +setAccuracy(accuracy: number | Accuracy<U, number | Vector3>) : SensorValue<U>
    +setComponent(index: number, value: number) : SensorValue<U>
    +setFromCylindrical(s: Cylindrical) : SensorValue<U>
    +setFromCylindricalCoords(radius: number, theta: number, y: number) : SensorValue<U>
    +setFromEuler(e: Euler) : SensorValue<U>
    +setFromMatrix3Column(matrix: Matrix3, index: number) : SensorValue<U>
    +setFromMatrixColumn(matrix: Matrix4, index: number) : SensorValue<U>
    +setFromMatrixPosition(m: Matrix4) : SensorValue<U>
    +setFromMatrixScale(m: Matrix4) : SensorValue<U>
    +setFromSpherical(s: Spherical) : SensorValue<U>
    +setFromSphericalCoords(r: number, phi: number, theta: number) : SensorValue<U>
    +setLength(l: number) : SensorValue<U>
    +setScalar(scalar: number) : SensorValue<U>
    +setX(x: number) : Vector3
    +setY(y: number) : Vector3
    +setZ(z: number) : Vector3
    +sub(a: Vector3) : SensorValue<U>
    +subScalar(s: number) : SensorValue<U>
    +subVectors(a: Vector3, b: Vector3) : SensorValue<U>
    +toArray(array: number[], offset: number) : number[]
    +toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple
    +toArray(array: ArrayLike<number>, offset: number) : ArrayLike<number>
    +transformDirection(m: Matrix4) : SensorValue<U>
    +unproject(camera: Camera) : SensorValue<U>
}
class "Vector3" {
    +isVector3 : true
    +x : number
    +y : number
    +z : number
    +add(v: Vector3) : Vector3
    +addScalar(s: number) : Vector3
    +addScaledVector(v: Vector3, s: number) : Vector3
    +addVectors(a: Vector3, b: Vector3) : Vector3
    +angleTo(v: Vector3) : number
    +applyAxisAngle(axis: Vector3, angle: number) : Vector3
    +applyEuler(euler: Euler) : Vector3
    +applyMatrix3(m: Matrix3) : Vector3
    +applyMatrix4(m: Matrix4) : Vector3
    +applyNormalMatrix(m: Matrix3) : Vector3
    +applyQuaternion(q: Quaternion) : Vector3
    +ceil() : Vector3
    +clamp(min: Vector3, max: Vector3) : Vector3
    +clampLength(min: number, max: number) : Vector3
    +clampScalar(min: number, max: number) : Vector3
    +clone() : Vector3
    +copy(v: Vector3) : Vector3
    +cross(a: Vector3) : Vector3
    +crossVectors(a: Vector3, b: Vector3) : Vector3
    +distanceTo(v: Vector3) : number
    +distanceToManhattan(v: Vector3) : number
    +distanceToSquared(v: Vector3) : number
    +divide(v: Vector3) : Vector3
    +divideScalar(s: number) : Vector3
    +dot(v: Vector3) : number
    +equals(v: Vector3) : boolean
    +floor() : Vector3
    +fromArray(array: number[] | ArrayLike<number>, offset: number) : Vector3
    {static} +fromArray(array: number[]) : Vector3
    +fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : Vector3
    +getComponent(index: number) : number
    +length() : number
    +lengthManhattan() : number
    +lengthSq() : number
    +lerp(v: Vector3, alpha: number) : Vector3
    +lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : Vector3
    +manhattanDistanceTo(v: Vector3) : number
    +manhattanLength() : number
    +max(v: Vector3) : Vector3
    +min(v: Vector3) : Vector3
    +multiply(v: Vector3) : Vector3
    +multiplyScalar(s: number) : Vector3
    +multiplyVectors(a: Vector3, b: Vector3) : Vector3
    +negate() : Vector3
    +normalize() : Vector3
    +project(camera: Camera) : Vector3
    +projectOnPlane(planeNormal: Vector3) : Vector3
    +projectOnVector(v: Vector3) : Vector3
    +random() : Vector3
    +randomDirection() : Vector3
    +reflect(vector: Vector3) : Vector3
    +round() : Vector3
    +roundToZero() : Vector3
    +set(x: number, y: number, z: number) : Vector3
    +setComponent(index: number, value: number) : Vector3
    +setFromCylindrical(s: Cylindrical) : Vector3
    +setFromCylindricalCoords(radius: number, theta: number, y: number) : Vector3
    +setFromEuler(e: Euler) : Vector3
    +setFromMatrix3Column(matrix: Matrix3, index: number) : Vector3
    +setFromMatrixColumn(matrix: Matrix4, index: number) : Vector3
    +setFromMatrixPosition(m: Matrix4) : Vector3
    +setFromMatrixScale(m: Matrix4) : Vector3
    +setFromSpherical(s: Spherical) : Vector3
    +setFromSphericalCoords(r: number, phi: number, theta: number) : Vector3
    +setLength(l: number) : Vector3
    +setScalar(scalar: number) : Vector3
    +setX(x: number) : Vector3
    +setY(y: number) : Vector3
    +setZ(z: number) : Vector3
    +sub(a: Vector3) : Vector3
    +subScalar(s: number) : Vector3
    +subVectors(a: Vector3, b: Vector3) : Vector3
    +toArray(array: number[], offset: number) : number[]
    +toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple
    +toArray(array: ArrayLike<number>, offset: number) : ArrayLike<number>
    +transformDirection(m: Matrix4) : Vector3
    +unproject(camera: Camera) : Vector3
}
"Vector3" <|- - "SensorValue<U>"
class "AngularVelocity" {
    +accuracy : Accuracy<AngularVelocityUnit, number | Vector3>
    +isVector3 : true
    +timestamp : number
    +x : number
    +y : number
    +z : number
    +add(v: Vector3) : AngularVelocity
    +addScalar(s: number) : AngularVelocity
    +addScaledVector(v: Vector3, s: number) : AngularVelocity
    +addVectors(a: Vector3, b: Vector3) : AngularVelocity
    +angleTo(v: Vector3) : number
    +applyAxisAngle(axis: Vector3, angle: number) : AngularVelocity
    +applyEuler(euler: Euler) : AngularVelocity
    +applyMatrix3(m: Matrix3) : AngularVelocity
    +applyMatrix4(m: Matrix4) : AngularVelocity
    +applyNormalMatrix(m: Matrix3) : AngularVelocity
    +applyQuaternion(q: Quaternion) : AngularVelocity
    +ceil() : AngularVelocity
    +clamp(min: Vector3, max: Vector3) : AngularVelocity
    +clampLength(min: number, max: number) : AngularVelocity
    +clampScalar(min: number, max: number) : AngularVelocity
    +clone() : AngularVelocity
    +copy(v: Vector3) : AngularVelocity
    +cross(a: Vector3) : AngularVelocity
    +crossVectors(a: Vector3, b: Vector3) : AngularVelocity
    +distanceTo(v: Vector3) : number
    +distanceToManhattan(v: Vector3) : number
    +distanceToSquared(v: Vector3) : number
    +divide(v: Vector3) : AngularVelocity
    +divideScalar(s: number) : AngularVelocity
    +dot(v: Vector3) : number
    +equals(v: Vector3) : boolean
    +floor() : AngularVelocity
    +fromArray(array: number[] | ArrayLike<number>, offset: number) : AngularVelocity
    {static} +fromArray(array: number[], unit: AngularVelocityUnit) : AngularVelocity
    +fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : AngularVelocity
    +getComponent(index: number) : number
    +length() : number
    +lengthManhattan() : number
    +lengthSq() : number
    +lerp(v: Vector3, alpha: number) : AngularVelocity
    +lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : AngularVelocity
    +manhattanDistanceTo(v: Vector3) : number
    +manhattanLength() : number
    +max(v: Vector3) : AngularVelocity
    +min(v: Vector3) : AngularVelocity
    +multiply(v: Vector3) : AngularVelocity
    +multiplyScalar(s: number) : AngularVelocity
    +multiplyVectors(a: Vector3, b: Vector3) : AngularVelocity
    +negate() : AngularVelocity
    +normalize() : AngularVelocity
    +project(camera: Camera) : AngularVelocity
    +projectOnPlane(planeNormal: Vector3) : AngularVelocity
    +projectOnVector(v: Vector3) : AngularVelocity
    +random() : AngularVelocity
    +randomDirection() : AngularVelocity
    +reflect(vector: Vector3) : AngularVelocity
    +round() : AngularVelocity
    +roundToZero() : AngularVelocity
    +set(x: number, y: number, z: number) : AngularVelocity
    +setAccuracy(accuracy: number | Accuracy<AngularVelocityUnit, number | Vector3>) : AngularVelocity
    +setComponent(index: number, value: number) : AngularVelocity
    +setFromCylindrical(s: Cylindrical) : AngularVelocity
    +setFromCylindricalCoords(radius: number, theta: number, y: number) : AngularVelocity
    +setFromEuler(e: Euler) : AngularVelocity
    +setFromMatrix3Column(matrix: Matrix3, index: number) : AngularVelocity
    +setFromMatrixColumn(matrix: Matrix4, index: number) : AngularVelocity
    +setFromMatrixPosition(m: Matrix4) : AngularVelocity
    +setFromMatrixScale(m: Matrix4) : AngularVelocity
    +setFromSpherical(s: Spherical) : AngularVelocity
    +setFromSphericalCoords(r: number, phi: number, theta: number) : AngularVelocity
    +setLength(l: number) : AngularVelocity
    +setScalar(scalar: number) : AngularVelocity
    +setX(x: number) : Vector3
    +setY(y: number) : Vector3
    +setZ(z: number) : Vector3
    +sub(a: Vector3) : AngularVelocity
    +subScalar(s: number) : AngularVelocity
    +subVectors(a: Vector3, b: Vector3) : AngularVelocity
    +toArray(array: number[], offset: number) : number[]
    +toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple
    +toArray(array: ArrayLike<number>, offset: number) : ArrayLike<number>
    +transformDirection(m: Matrix4) : AngularVelocity
    +unproject(camera: Camera) : AngularVelocity
}
"SensorValue<U>" <|- - "AngularVelocity"
class "LinearVelocity" {
    +accuracy : Accuracy<LinearVelocityUnit, number | Vector3>
    +isVector3 : true
    +timestamp : number
    +x : number
    +y : number
    +z : number
    +add(v: Vector3) : LinearVelocity
    +addScalar(s: number) : LinearVelocity
    +addScaledVector(v: Vector3, s: number) : LinearVelocity
    +addVectors(a: Vector3, b: Vector3) : LinearVelocity
    +angleTo(v: Vector3) : number
    +applyAxisAngle(axis: Vector3, angle: number) : LinearVelocity
    +applyEuler(euler: Euler) : LinearVelocity
    +applyMatrix3(m: Matrix3) : LinearVelocity
    +applyMatrix4(m: Matrix4) : LinearVelocity
    +applyNormalMatrix(m: Matrix3) : LinearVelocity
    +applyQuaternion(q: Quaternion) : LinearVelocity
    +ceil() : LinearVelocity
    +clamp(min: Vector3, max: Vector3) : LinearVelocity
    +clampLength(min: number, max: number) : LinearVelocity
    +clampScalar(min: number, max: number) : LinearVelocity
    +clone() : LinearVelocity
    +copy(v: Vector3) : LinearVelocity
    +cross(a: Vector3) : LinearVelocity
    +crossVectors(a: Vector3, b: Vector3) : LinearVelocity
    +distanceTo(v: Vector3) : number
    +distanceToManhattan(v: Vector3) : number
    +distanceToSquared(v: Vector3) : number
    +divide(v: Vector3) : LinearVelocity
    +divideScalar(s: number) : LinearVelocity
    +dot(v: Vector3) : number
    +equals(v: Vector3) : boolean
    +floor() : LinearVelocity
    +fromArray(array: number[] | ArrayLike<number>, offset: number) : LinearVelocity
    {static} +fromArray(array: number[], unit: LinearVelocityUnit) : LinearVelocity
    +fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : LinearVelocity
    +getComponent(index: number) : number
    +length() : number
    +lengthManhattan() : number
    +lengthSq() : number
    +lerp(v: Vector3, alpha: number) : LinearVelocity
    +lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : LinearVelocity
    +manhattanDistanceTo(v: Vector3) : number
    +manhattanLength() : number
    +max(v: Vector3) : LinearVelocity
    +min(v: Vector3) : LinearVelocity
    +multiply(v: Vector3) : LinearVelocity
    +multiplyScalar(s: number) : LinearVelocity
    +multiplyVectors(a: Vector3, b: Vector3) : LinearVelocity
    +negate() : LinearVelocity
    +normalize() : LinearVelocity
    +project(camera: Camera) : LinearVelocity
    +projectOnPlane(planeNormal: Vector3) : LinearVelocity
    +projectOnVector(v: Vector3) : LinearVelocity
    +random() : LinearVelocity
    +randomDirection() : LinearVelocity
    +reflect(vector: Vector3) : LinearVelocity
    +round() : LinearVelocity
    +roundToZero() : LinearVelocity
    +set(x: number, y: number, z: number) : LinearVelocity
    +setAccuracy(accuracy: number | Accuracy<LinearVelocityUnit, number | Vector3>) : LinearVelocity
    +setComponent(index: number, value: number) : LinearVelocity
    +setFromCylindrical(s: Cylindrical) : LinearVelocity
    +setFromCylindricalCoords(radius: number, theta: number, y: number) : LinearVelocity
    +setFromEuler(e: Euler) : LinearVelocity
    +setFromMatrix3Column(matrix: Matrix3, index: number) : LinearVelocity
    +setFromMatrixColumn(matrix: Matrix4, index: number) : LinearVelocity
    +setFromMatrixPosition(m: Matrix4) : LinearVelocity
    +setFromMatrixScale(m: Matrix4) : LinearVelocity
    +setFromSpherical(s: Spherical) : LinearVelocity
    +setFromSphericalCoords(r: number, phi: number, theta: number) : LinearVelocity
    +setLength(l: number) : LinearVelocity
    +setScalar(scalar: number) : LinearVelocity
    +setX(x: number) : Vector3
    +setY(y: number) : Vector3
    +setZ(z: number) : Vector3
    +sub(a: Vector3) : LinearVelocity
    +subScalar(s: number) : LinearVelocity
    +subVectors(a: Vector3, b: Vector3) : LinearVelocity
    +toArray(array: number[], offset: number) : number[]
    +toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple
    +toArray(array: ArrayLike<number>, offset: number) : ArrayLike<number>
    +transformDirection(m: Matrix4) : LinearVelocity
    +unproject(camera: Camera) : LinearVelocity
}
"SensorValue<U>" <|- - "LinearVelocity"
class "Acceleration" {
    +accuracy : Accuracy<Unit, number | Vector3>
    +isVector3 : true
    +timestamp : number
    +x : number
    +y : number
    +z : number
    +add(v: Vector3) : Acceleration
    +addScalar(s: number) : Acceleration
    +addScaledVector(v: Vector3, s: number) : Acceleration
    +addVectors(a: Vector3, b: Vector3) : Acceleration
    +angleTo(v: Vector3) : number
    +applyAxisAngle(axis: Vector3, angle: number) : Acceleration
    +applyEuler(euler: Euler) : Acceleration
    +applyMatrix3(m: Matrix3) : Acceleration
    +applyMatrix4(m: Matrix4) : Acceleration
    +applyNormalMatrix(m: Matrix3) : Acceleration
    +applyQuaternion(q: Quaternion) : Acceleration
    +ceil() : Acceleration
    +clamp(min: Vector3, max: Vector3) : Acceleration
    +clampLength(min: number, max: number) : Acceleration
    +clampScalar(min: number, max: number) : Acceleration
    +clone() : Acceleration
    +copy(v: Vector3) : Acceleration
    +cross(a: Vector3) : Acceleration
    +crossVectors(a: Vector3, b: Vector3) : Acceleration
    +distanceTo(v: Vector3) : number
    +distanceToManhattan(v: Vector3) : number
    +distanceToSquared(v: Vector3) : number
    +divide(v: Vector3) : Acceleration
    +divideScalar(s: number) : Acceleration
    +dot(v: Vector3) : number
    +equals(v: Vector3) : boolean
    +floor() : Acceleration
    +fromArray(array: number[] | ArrayLike<number>, offset: number) : Acceleration
    {static} +fromArray(array: number[]) : Vector3
    +fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : Acceleration
    +getComponent(index: number) : number
    +length() : number
    +lengthManhattan() : number
    +lengthSq() : number
    +lerp(v: Vector3, alpha: number) : Acceleration
    +lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : Acceleration
    +manhattanDistanceTo(v: Vector3) : number
    +manhattanLength() : number
    +max(v: Vector3) : Acceleration
    +min(v: Vector3) : Acceleration
    +multiply(v: Vector3) : Acceleration
    +multiplyScalar(s: number) : Acceleration
    +multiplyVectors(a: Vector3, b: Vector3) : Acceleration
    +negate() : Acceleration
    +normalize() : Acceleration
    +project(camera: Camera) : Acceleration
    +projectOnPlane(planeNormal: Vector3) : Acceleration
    +projectOnVector(v: Vector3) : Acceleration
    +random() : Acceleration
    +randomDirection() : Acceleration
    +reflect(vector: Vector3) : Acceleration
    +round() : Acceleration
    +roundToZero() : Acceleration
    +set(x: number, y: number, z: number) : Acceleration
    +setAccuracy(accuracy: number | Accuracy<Unit, number | Vector3>) : Acceleration
    +setComponent(index: number, value: number) : Acceleration
    +setFromCylindrical(s: Cylindrical) : Acceleration
    +setFromCylindricalCoords(radius: number, theta: number, y: number) : Acceleration
    +setFromEuler(e: Euler) : Acceleration
    +setFromMatrix3Column(matrix: Matrix3, index: number) : Acceleration
    +setFromMatrixColumn(matrix: Matrix4, index: number) : Acceleration
    +setFromMatrixPosition(m: Matrix4) : Acceleration
    +setFromMatrixScale(m: Matrix4) : Acceleration
    +setFromSpherical(s: Spherical) : Acceleration
    +setFromSphericalCoords(r: number, phi: number, theta: number) : Acceleration
    +setLength(l: number) : Acceleration
    +setScalar(scalar: number) : Acceleration
    +setX(x: number) : Vector3
    +setY(y: number) : Vector3
    +setZ(z: number) : Vector3
    +sub(a: Vector3) : Acceleration
    +subScalar(s: number) : Acceleration
    +subVectors(a: Vector3, b: Vector3) : Acceleration
    +toArray(array: number[], offset: number) : number[]
    +toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple
    +toArray(array: ArrayLike<number>, offset: number) : ArrayLike<number>
    +transformDirection(m: Matrix4) : Acceleration
    +unproject(camera: Camera) : Acceleration
}
"SensorValue<U>" <|- - "Acceleration"
class "Magnetism" {
    +accuracy : Accuracy<Unit, number | Vector3>
    +isVector3 : true
    +timestamp : number
    +x : number
    +y : number
    +z : number
    +add(v: Vector3) : Magnetism
    +addScalar(s: number) : Magnetism
    +addScaledVector(v: Vector3, s: number) : Magnetism
    +addVectors(a: Vector3, b: Vector3) : Magnetism
    +angleTo(v: Vector3) : number
    +applyAxisAngle(axis: Vector3, angle: number) : Magnetism
    +applyEuler(euler: Euler) : Magnetism
    +applyMatrix3(m: Matrix3) : Magnetism
    +applyMatrix4(m: Matrix4) : Magnetism
    +applyNormalMatrix(m: Matrix3) : Magnetism
    +applyQuaternion(q: Quaternion) : Magnetism
    +ceil() : Magnetism
    +clamp(min: Vector3, max: Vector3) : Magnetism
    +clampLength(min: number, max: number) : Magnetism
    +clampScalar(min: number, max: number) : Magnetism
    +clone() : Magnetism
    +copy(v: Vector3) : Magnetism
    +cross(a: Vector3) : Magnetism
    +crossVectors(a: Vector3, b: Vector3) : Magnetism
    +distanceTo(v: Vector3) : number
    +distanceToManhattan(v: Vector3) : number
    +distanceToSquared(v: Vector3) : number
    +divide(v: Vector3) : Magnetism
    +divideScalar(s: number) : Magnetism
    +dot(v: Vector3) : number
    +equals(v: Vector3) : boolean
    +floor() : Magnetism
    +fromArray(array: number[] | ArrayLike<number>, offset: number) : Magnetism
    {static} +fromArray(array: number[]) : Vector3
    +fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : Magnetism
    +getComponent(index: number) : number
    +length() : number
    +lengthManhattan() : number
    +lengthSq() : number
    +lerp(v: Vector3, alpha: number) : Magnetism
    +lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : Magnetism
    +manhattanDistanceTo(v: Vector3) : number
    +manhattanLength() : number
    +max(v: Vector3) : Magnetism
    +min(v: Vector3) : Magnetism
    +multiply(v: Vector3) : Magnetism
    +multiplyScalar(s: number) : Magnetism
    +multiplyVectors(a: Vector3, b: Vector3) : Magnetism
    +negate() : Magnetism
    +normalize() : Magnetism
    +project(camera: Camera) : Magnetism
    +projectOnPlane(planeNormal: Vector3) : Magnetism
    +projectOnVector(v: Vector3) : Magnetism
    +random() : Magnetism
    +randomDirection() : Magnetism
    +reflect(vector: Vector3) : Magnetism
    +round() : Magnetism
    +roundToZero() : Magnetism
    +set(x: number, y: number, z: number) : Magnetism
    +setAccuracy(accuracy: number | Accuracy<Unit, number | Vector3>) : Magnetism
    +setComponent(index: number, value: number) : Magnetism
    +setFromCylindrical(s: Cylindrical) : Magnetism
    +setFromCylindricalCoords(radius: number, theta: number, y: number) : Magnetism
    +setFromEuler(e: Euler) : Magnetism
    +setFromMatrix3Column(matrix: Matrix3, index: number) : Magnetism
    +setFromMatrixColumn(matrix: Matrix4, index: number) : Magnetism
    +setFromMatrixPosition(m: Matrix4) : Magnetism
    +setFromMatrixScale(m: Matrix4) : Magnetism
    +setFromSpherical(s: Spherical) : Magnetism
    +setFromSphericalCoords(r: number, phi: number, theta: number) : Magnetism
    +setLength(l: number) : Magnetism
    +setScalar(scalar: number) : Magnetism
    +setX(x: number) : Vector3
    +setY(y: number) : Vector3
    +setZ(z: number) : Vector3
    +sub(a: Vector3) : Magnetism
    +subScalar(s: number) : Magnetism
    +subVectors(a: Vector3, b: Vector3) : Magnetism
    +toArray(array: number[], offset: number) : number[]
    +toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple
    +toArray(array: ArrayLike<number>, offset: number) : ArrayLike<number>
    +transformDirection(m: Matrix4) : Magnetism
    +unproject(camera: Camera) : Magnetism
}
"SensorValue<U>" <|- - "Magnetism"
class "Temperature" {
    +accuracy : Accuracy<TemperatureUnit, number | Vector3>
    +isVector3 : true
    +timestamp : number
    +x : number
    +y : number
    +z : number
    +add(v: Vector3) : Temperature
    +addScalar(s: number) : Temperature
    +addScaledVector(v: Vector3, s: number) : Temperature
    +addVectors(a: Vector3, b: Vector3) : Temperature
    +angleTo(v: Vector3) : number
    +applyAxisAngle(axis: Vector3, angle: number) : Temperature
    +applyEuler(euler: Euler) : Temperature
    +applyMatrix3(m: Matrix3) : Temperature
    +applyMatrix4(m: Matrix4) : Temperature
    +applyNormalMatrix(m: Matrix3) : Temperature
    +applyQuaternion(q: Quaternion) : Temperature
    +ceil() : Temperature
    +clamp(min: Vector3, max: Vector3) : Temperature
    +clampLength(min: number, max: number) : Temperature
    +clampScalar(min: number, max: number) : Temperature
    +clone() : Temperature
    +copy(v: Vector3) : Temperature
    +cross(a: Vector3) : Temperature
    +crossVectors(a: Vector3, b: Vector3) : Temperature
    +distanceTo(v: Vector3) : number
    +distanceToManhattan(v: Vector3) : number
    +distanceToSquared(v: Vector3) : number
    +divide(v: Vector3) : Temperature
    +divideScalar(s: number) : Temperature
    +dot(v: Vector3) : number
    +equals(v: Vector3) : boolean
    +floor() : Temperature
    +fromArray(array: number[] | ArrayLike<number>, offset: number) : Temperature
    {static} +fromArray(array: number[]) : Vector3
    +fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : Temperature
    +getComponent(index: number) : number
    +length() : number
    +lengthManhattan() : number
    +lengthSq() : number
    +lerp(v: Vector3, alpha: number) : Temperature
    +lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : Temperature
    +manhattanDistanceTo(v: Vector3) : number
    +manhattanLength() : number
    +max(v: Vector3) : Temperature
    +min(v: Vector3) : Temperature
    +multiply(v: Vector3) : Temperature
    +multiplyScalar(s: number) : Temperature
    +multiplyVectors(a: Vector3, b: Vector3) : Temperature
    +negate() : Temperature
    +normalize() : Temperature
    +project(camera: Camera) : Temperature
    +projectOnPlane(planeNormal: Vector3) : Temperature
    +projectOnVector(v: Vector3) : Temperature
    +random() : Temperature
    +randomDirection() : Temperature
    +reflect(vector: Vector3) : Temperature
    +round() : Temperature
    +roundToZero() : Temperature
    +set(x: number, y: number, z: number) : Temperature
    +setAccuracy(accuracy: number | Accuracy<TemperatureUnit, number | Vector3>) : Temperature
    +setComponent(index: number, value: number) : Temperature
    +setFromCylindrical(s: Cylindrical) : Temperature
    +setFromCylindricalCoords(radius: number, theta: number, y: number) : Temperature
    +setFromEuler(e: Euler) : Temperature
    +setFromMatrix3Column(matrix: Matrix3, index: number) : Temperature
    +setFromMatrixColumn(matrix: Matrix4, index: number) : Temperature
    +setFromMatrixPosition(m: Matrix4) : Temperature
    +setFromMatrixScale(m: Matrix4) : Temperature
    +setFromSpherical(s: Spherical) : Temperature
    +setFromSphericalCoords(r: number, phi: number, theta: number) : Temperature
    +setLength(l: number) : Temperature
    +setScalar(scalar: number) : Temperature
    +setX(x: number) : Vector3
    +setY(y: number) : Vector3
    +setZ(z: number) : Vector3
    +sub(a: Vector3) : Temperature
    +subScalar(s: number) : Temperature
    +subVectors(a: Vector3, b: Vector3) : Temperature
    +toArray(array: number[], offset: number) : number[]
    +toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple
    +toArray(array: ArrayLike<number>, offset: number) : ArrayLike<number>
    +transformDirection(m: Matrix4) : Temperature
    +unproject(camera: Camera) : Temperature
}
"SensorValue<U>" <|- - "Temperature"
class "Humidity" {
    +accuracy : Accuracy<Unit, number | Vector3>
    +isVector3 : true
    +timestamp : number
    +x : number
    +y : number
    +z : number
    +add(v: Vector3) : Humidity
    +addScalar(s: number) : Humidity
    +addScaledVector(v: Vector3, s: number) : Humidity
    +addVectors(a: Vector3, b: Vector3) : Humidity
    +angleTo(v: Vector3) : number
    +applyAxisAngle(axis: Vector3, angle: number) : Humidity
    +applyEuler(euler: Euler) : Humidity
    +applyMatrix3(m: Matrix3) : Humidity
    +applyMatrix4(m: Matrix4) : Humidity
    +applyNormalMatrix(m: Matrix3) : Humidity
    +applyQuaternion(q: Quaternion) : Humidity
    +ceil() : Humidity
    +clamp(min: Vector3, max: Vector3) : Humidity
    +clampLength(min: number, max: number) : Humidity
    +clampScalar(min: number, max: number) : Humidity
    +clone() : Humidity
    +copy(v: Vector3) : Humidity
    +cross(a: Vector3) : Humidity
    +crossVectors(a: Vector3, b: Vector3) : Humidity
    +distanceTo(v: Vector3) : number
    +distanceToManhattan(v: Vector3) : number
    +distanceToSquared(v: Vector3) : number
    +divide(v: Vector3) : Humidity
    +divideScalar(s: number) : Humidity
    +dot(v: Vector3) : number
    +equals(v: Vector3) : boolean
    +floor() : Humidity
    +fromArray(array: number[] | ArrayLike<number>, offset: number) : Humidity
    {static} +fromArray(array: number[]) : Vector3
    +fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : Humidity
    +getComponent(index: number) : number
    +length() : number
    +lengthManhattan() : number
    +lengthSq() : number
    +lerp(v: Vector3, alpha: number) : Humidity
    +lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : Humidity
    +manhattanDistanceTo(v: Vector3) : number
    +manhattanLength() : number
    +max(v: Vector3) : Humidity
    +min(v: Vector3) : Humidity
    +multiply(v: Vector3) : Humidity
    +multiplyScalar(s: number) : Humidity
    +multiplyVectors(a: Vector3, b: Vector3) : Humidity
    +negate() : Humidity
    +normalize() : Humidity
    +project(camera: Camera) : Humidity
    +projectOnPlane(planeNormal: Vector3) : Humidity
    +projectOnVector(v: Vector3) : Humidity
    +random() : Humidity
    +randomDirection() : Humidity
    +reflect(vector: Vector3) : Humidity
    +round() : Humidity
    +roundToZero() : Humidity
    +set(x: number, y: number, z: number) : Humidity
    +setAccuracy(accuracy: number | Accuracy<Unit, number | Vector3>) : Humidity
    +setComponent(index: number, value: number) : Humidity
    +setFromCylindrical(s: Cylindrical) : Humidity
    +setFromCylindricalCoords(radius: number, theta: number, y: number) : Humidity
    +setFromEuler(e: Euler) : Humidity
    +setFromMatrix3Column(matrix: Matrix3, index: number) : Humidity
    +setFromMatrixColumn(matrix: Matrix4, index: number) : Humidity
    +setFromMatrixPosition(m: Matrix4) : Humidity
    +setFromMatrixScale(m: Matrix4) : Humidity
    +setFromSpherical(s: Spherical) : Humidity
    +setFromSphericalCoords(r: number, phi: number, theta: number) : Humidity
    +setLength(l: number) : Humidity
    +setScalar(scalar: number) : Humidity
    +setX(x: number) : Vector3
    +setY(y: number) : Vector3
    +setZ(z: number) : Vector3
    +sub(a: Vector3) : Humidity
    +subScalar(s: number) : Humidity
    +subVectors(a: Vector3, b: Vector3) : Humidity
    +toArray(array: number[], offset: number) : number[]
    +toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple
    +toArray(array: ArrayLike<number>, offset: number) : ArrayLike<number>
    +transformDirection(m: Matrix4) : Humidity
    +unproject(camera: Camera) : Humidity
}
"SensorValue<U>" <|- - "Humidity"
class "Pressure" {
    +accuracy : Accuracy<PressureUnit, number | Vector3>
    +isVector3 : true
    +timestamp : number
    +x : number
    +y : number
    +z : number
    +add(v: Vector3) : Pressure
    +addScalar(s: number) : Pressure
    +addScaledVector(v: Vector3, s: number) : Pressure
    +addVectors(a: Vector3, b: Vector3) : Pressure
    +angleTo(v: Vector3) : number
    +applyAxisAngle(axis: Vector3, angle: number) : Pressure
    +applyEuler(euler: Euler) : Pressure
    +applyMatrix3(m: Matrix3) : Pressure
    +applyMatrix4(m: Matrix4) : Pressure
    +applyNormalMatrix(m: Matrix3) : Pressure
    +applyQuaternion(q: Quaternion) : Pressure
    +ceil() : Pressure
    +clamp(min: Vector3, max: Vector3) : Pressure
    +clampLength(min: number, max: number) : Pressure
    +clampScalar(min: number, max: number) : Pressure
    +clone() : Pressure
    +copy(v: Vector3) : Pressure
    +cross(a: Vector3) : Pressure
    +crossVectors(a: Vector3, b: Vector3) : Pressure
    +distanceTo(v: Vector3) : number
    +distanceToManhattan(v: Vector3) : number
    +distanceToSquared(v: Vector3) : number
    +divide(v: Vector3) : Pressure
    +divideScalar(s: number) : Pressure
    +dot(v: Vector3) : number
    +equals(v: Vector3) : boolean
    +floor() : Pressure
    +fromArray(array: number[] | ArrayLike<number>, offset: number) : Pressure
    {static} +fromArray(array: number[]) : Vector3
    +fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : Pressure
    +getComponent(index: number) : number
    +length() : number
    +lengthManhattan() : number
    +lengthSq() : number
    +lerp(v: Vector3, alpha: number) : Pressure
    +lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : Pressure
    +manhattanDistanceTo(v: Vector3) : number
    +manhattanLength() : number
    +max(v: Vector3) : Pressure
    +min(v: Vector3) : Pressure
    +multiply(v: Vector3) : Pressure
    +multiplyScalar(s: number) : Pressure
    +multiplyVectors(a: Vector3, b: Vector3) : Pressure
    +negate() : Pressure
    +normalize() : Pressure
    +project(camera: Camera) : Pressure
    +projectOnPlane(planeNormal: Vector3) : Pressure
    +projectOnVector(v: Vector3) : Pressure
    +random() : Pressure
    +randomDirection() : Pressure
    +reflect(vector: Vector3) : Pressure
    +round() : Pressure
    +roundToZero() : Pressure
    +set(x: number, y: number, z: number) : Pressure
    +setAccuracy(accuracy: number | Accuracy<PressureUnit, number | Vector3>) : Pressure
    +setComponent(index: number, value: number) : Pressure
    +setFromCylindrical(s: Cylindrical) : Pressure
    +setFromCylindricalCoords(radius: number, theta: number, y: number) : Pressure
    +setFromEuler(e: Euler) : Pressure
    +setFromMatrix3Column(matrix: Matrix3, index: number) : Pressure
    +setFromMatrixColumn(matrix: Matrix4, index: number) : Pressure
    +setFromMatrixPosition(m: Matrix4) : Pressure
    +setFromMatrixScale(m: Matrix4) : Pressure
    +setFromSpherical(s: Spherical) : Pressure
    +setFromSphericalCoords(r: number, phi: number, theta: number) : Pressure
    +setLength(l: number) : Pressure
    +setScalar(scalar: number) : Pressure
    +setX(x: number) : Vector3
    +setY(y: number) : Vector3
    +setZ(z: number) : Vector3
    +sub(a: Vector3) : Pressure
    +subScalar(s: number) : Pressure
    +subVectors(a: Vector3, b: Vector3) : Pressure
    +toArray(array: number[], offset: number) : number[]
    +toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple
    +toArray(array: ArrayLike<number>, offset: number) : ArrayLike<number>
    +transformDirection(m: Matrix4) : Pressure
    +unproject(camera: Camera) : Pressure
}
"SensorValue<U>" <|- - "Pressure"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 16:46:50 UTC 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>