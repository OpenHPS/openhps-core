<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="957px" preserveAspectRatio="none" style="width:707px;height:957px;background:#00000000;" version="1.1" viewBox="0 0 707 957" width="707px" zoomAndPan="magnify"><defs><filter height="300%" id="f1g7884e406fsl" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[fa8c5d5c8201bf7c8c2892d0149b49db]
class TimeSyncNode<InOut>--><rect codeLine="4" fill="#FEFECE" filter="url(#f1g7884e406fsl)" height="444.9453" id="TimeSyncNode&lt;InOut&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="9" y="499"/><ellipse cx="274.75" cy="515" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M277.7188,520.6406 Q277.1406,520.9375 276.5,521.0781 Q275.8594,521.2344 275.1563,521.2344 Q272.6563,521.2344 271.3281,519.5938 Q270.0156,517.9375 270.0156,514.8125 Q270.0156,511.6875 271.3281,510.0313 Q272.6563,508.375 275.1563,508.375 Q275.8594,508.375 276.5,508.5313 Q277.1563,508.6875 277.7188,508.9844 L277.7188,511.7031 Q277.0938,511.125 276.5,510.8594 Q275.9063,510.5781 275.2813,510.5781 Q273.9375,510.5781 273.25,511.6563 Q272.5625,512.7188 272.5625,514.8125 Q272.5625,516.9063 273.25,517.9844 Q273.9375,519.0469 275.2813,519.0469 Q275.9063,519.0469 276.5,518.7813 Q277.0938,518.5 277.7188,517.9219 L277.7188,520.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="144" x="295.25" y="519.1543">TimeSyncNode&lt;InOut&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="531" y2="531"/><ellipse cx="20" cy="542" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="29" y="545.2104">captureRejections : boolean</text><ellipse cx="20" cy="554.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="29" y="558.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="20" cy="567.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="29" y="570.8198">defaultMaxListeners : number</text><ellipse cx="20" cy="580.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="29" y="583.6245">errorMonitor : typeof errorMonitor</text><polygon fill="none" points="20,588.2188,24,592.2188,20,596.2188,16,592.2188" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="153" x="29" y="596.4292">options : TimeSyncOptions</text><polygon fill="none" points="20,601.0234,24,605.0234,20,609.0234,16,605.0234" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="29" y="609.2339">service : DataFrameService&lt;InOut&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="615.8281" y2="615.8281"/><ellipse cx="20" cy="626.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="483" x="29" y="630.0386">addListener(eventName: string | symbol, listener: Function) : TimeSyncNode&lt;InOut&gt;</text><ellipse cx="20" cy="639.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="29" y="642.8433">eventNames() : (string | symbol)[]</text><ellipse cx="20" cy="652.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="29" y="655.6479">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="20" cy="665.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="29" y="668.4526">getMaxListeners() : number</text><ellipse cx="20" cy="678.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="29" y="681.2573">getOptions() : NodeOptions</text><ellipse cx="20" cy="690.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="29" y="694.062">listenerCount(eventName: string | symbol) : number</text><ellipse cx="20" cy="703.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="29" y="706.8667">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="20" cy="716.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="29" y="719.6714">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="729.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="431" x="29" y="732.4761">off(eventName: string | symbol, listener: Function) : TimeSyncNode&lt;InOut&gt;</text><ellipse cx="20" cy="742.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="29" y="745.2808">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="20" cy="754.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="29" y="758.0854">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="767.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="29" y="770.8901">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="780.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="29" y="783.6948">onPull(options: PullOptions) : Promise&lt;void&gt;</text><ellipse cx="20" cy="793.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="352" x="29" y="796.4995">onPush(frame: InOut, options: PushOptions) : Promise&lt;void&gt;</text><ellipse cx="20" cy="806.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="509" x="29" y="809.3042">prependListener(eventName: string | symbol, listener: Function) : TimeSyncNode&lt;InOut&gt;</text><ellipse cx="20" cy="818.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="538" x="29" y="822.1089">prependOnceListener(eventName: string | symbol, listener: Function) : TimeSyncNode&lt;InOut&gt;</text><ellipse cx="20" cy="831.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="29" y="834.9136">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="844.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="29" y="847.7183">removeAllListeners(event: string | symbol) : TimeSyncNode&lt;InOut&gt;</text><ellipse cx="20" cy="857.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="505" x="29" y="860.5229">removeListener(eventName: string | symbol, listener: Function) : TimeSyncNode&lt;InOut&gt;</text><ellipse cx="20" cy="870.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="304" x="29" y="873.3276">setMaxListeners(n: number) : TimeSyncNode&lt;InOut&gt;</text><ellipse cx="20" cy="882.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="29" y="886.1323">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="20" cy="895.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="337" x="29" y="898.937">setOptions(options: NodeOptions) : TimeSyncNode&lt;InOut&gt;</text><polygon fill="#FFFF44" points="20,903.5313,24,907.5313,20,911.5313,16,907.5313" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="29" y="911.7417">next() : Promise&lt;InOut&gt;</text><polygon fill="#FFFF44" points="20,916.3359,24,920.3359,20,924.3359,16,920.3359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="140" x="29" y="924.5464">shift() : Promise&lt;InOut&gt;</text><polygon fill="#FFFF44" points="20,929.1406,24,933.1406,20,937.1406,16,933.1406" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="186" x="29" y="937.3511">triggerUpdate() : Promise&lt;void&gt;</text><!--MD5=[cbfe4adf4cb417016e13f6623ce80221]
class MemoryBufferNode<InOut>--><rect codeLine="37" fill="#FEFECE" filter="url(#f1g7884e406fsl)" height="432.1406" id="MemoryBufferNode&lt;InOut&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="9" y="7"/><ellipse cx="261.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M264.2188,28.6406 Q263.6406,28.9375 263,29.0781 Q262.3594,29.2344 261.6563,29.2344 Q259.1563,29.2344 257.8281,27.5938 Q256.5156,25.9375 256.5156,22.8125 Q256.5156,19.6875 257.8281,18.0313 Q259.1563,16.375 261.6563,16.375 Q262.3594,16.375 263,16.5313 Q263.6563,16.6875 264.2188,16.9844 L264.2188,19.7031 Q263.5938,19.125 263,18.8594 Q262.4063,18.5781 261.7813,18.5781 Q260.4375,18.5781 259.75,19.6563 Q259.0625,20.7188 259.0625,22.8125 Q259.0625,24.9063 259.75,25.9844 Q260.4375,27.0469 261.7813,27.0469 Q262.4063,27.0469 263,26.7813 Q263.5938,26.5 264.2188,25.9219 L264.2188,28.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="171" x="281.75" y="27.1543">MemoryBufferNode&lt;InOut&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="39" y2="39"/><ellipse cx="20" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="29" y="53.2104">captureRejections : boolean</text><ellipse cx="20" cy="62.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="29" y="66.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="20" cy="75.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="29" y="78.8198">defaultMaxListeners : number</text><ellipse cx="20" cy="88.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="29" y="91.6245">errorMonitor : typeof errorMonitor</text><polygon fill="none" points="20,96.2188,24,100.2188,20,104.2188,16,100.2188" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="133" x="29" y="104.4292">options : BufferOptions</text><polygon fill="none" points="20,109.0234,24,113.0234,20,117.0234,16,113.0234" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="29" y="117.2339">service : DataFrameService&lt;InOut&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="123.8281" y2="123.8281"/><ellipse cx="20" cy="134.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="508" x="29" y="138.0386">addListener(eventName: string | symbol, listener: Function) : MemoryBufferNode&lt;InOut&gt;</text><ellipse cx="20" cy="147.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="29" y="150.8433">eventNames() : (string | symbol)[]</text><ellipse cx="20" cy="160.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="29" y="163.6479">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="20" cy="173.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="29" y="176.4526">getMaxListeners() : number</text><ellipse cx="20" cy="186.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="29" y="189.2573">getOptions() : NodeOptions</text><ellipse cx="20" cy="198.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="29" y="202.062">listenerCount(eventName: string | symbol) : number</text><ellipse cx="20" cy="211.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="29" y="214.8667">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="20" cy="224.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="29" y="227.6714">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="237.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="456" x="29" y="240.4761">off(eventName: string | symbol, listener: Function) : MemoryBufferNode&lt;InOut&gt;</text><ellipse cx="20" cy="250.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="29" y="253.2808">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="20" cy="262.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="29" y="266.0854">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="275.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="29" y="278.8901">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="288.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="256" x="29" y="291.6948">onPull(options: PullOptions) : Promise&lt;void&gt;</text><ellipse cx="20" cy="301.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="222" x="29" y="304.4995">onPush(frame: InOut) : Promise&lt;void&gt;</text><ellipse cx="20" cy="314.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="534" x="29" y="317.3042">prependListener(eventName: string | symbol, listener: Function) : MemoryBufferNode&lt;InOut&gt;</text><ellipse cx="20" cy="326.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="563" x="29" y="330.1089">prependOnceListener(eventName: string | symbol, listener: Function) : MemoryBufferNode&lt;InOut&gt;</text><ellipse cx="20" cy="339.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="29" y="342.9136">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="352.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="411" x="29" y="355.7183">removeAllListeners(event: string | symbol) : MemoryBufferNode&lt;InOut&gt;</text><ellipse cx="20" cy="365.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="530" x="29" y="368.5229">removeListener(eventName: string | symbol, listener: Function) : MemoryBufferNode&lt;InOut&gt;</text><ellipse cx="20" cy="378.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="329" x="29" y="381.3276">setMaxListeners(n: number) : MemoryBufferNode&lt;InOut&gt;</text><ellipse cx="20" cy="390.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="29" y="394.1323">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="20" cy="403.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="29" y="406.937">setOptions(options: NodeOptions) : MemoryBufferNode&lt;InOut&gt;</text><polygon fill="#FFFF44" points="20,411.5313,24,415.5313,20,419.5313,16,415.5313" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="29" y="419.7417">next() : Promise&lt;InOut&gt;</text><polygon fill="#FFFF44" points="20,424.3359,24,428.3359,20,432.3359,16,428.3359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="140" x="29" y="432.5464">shift() : Promise&lt;InOut&gt;</text><!--MD5=[dc4b89fa804d938fa578ab134fd86d77]
reverse link MemoryBufferNode<InOut> to TimeSyncNode<InOut>--><path codeLine="69" d="M351,459.25 C351,472.47 351,485.74 351,498.9 " fill="none" id="MemoryBufferNode&lt;InOut&gt;-backto-TimeSyncNode&lt;InOut&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="344,459.25,351,439.25,358,459.25,344,459.25" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[b30ddf4eee7e7c41933974d64064b7ab]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "TimeSyncNode<InOut>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    #options : TimeSyncOptions
    #service : DataFrameService<InOut>
    +addListener(eventName: string | symbol, listener: Function) : TimeSyncNode<InOut>
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +getOptions() : NodeOptions
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : TimeSyncNode<InOut>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +onPull(options: PullOptions) : Promise<void>
    +onPush(frame: InOut, options: PushOptions) : Promise<void>
    +prependListener(eventName: string | symbol, listener: Function) : TimeSyncNode<InOut>
    +prependOnceListener(eventName: string | symbol, listener: Function) : TimeSyncNode<InOut>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : TimeSyncNode<InOut>
    +removeListener(eventName: string | symbol, listener: Function) : TimeSyncNode<InOut>
    +setMaxListeners(n: number) : TimeSyncNode<InOut>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setOptions(options: NodeOptions) : TimeSyncNode<InOut>
    #next() : Promise<InOut>
    #shift() : Promise<InOut>
    #triggerUpdate() : Promise<void>
}
class "MemoryBufferNode<InOut>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    #options : BufferOptions
    #service : DataFrameService<InOut>
    +addListener(eventName: string | symbol, listener: Function) : MemoryBufferNode<InOut>
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +getOptions() : NodeOptions
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : MemoryBufferNode<InOut>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +onPull(options: PullOptions) : Promise<void>
    +onPush(frame: InOut) : Promise<void>
    +prependListener(eventName: string | symbol, listener: Function) : MemoryBufferNode<InOut>
    +prependOnceListener(eventName: string | symbol, listener: Function) : MemoryBufferNode<InOut>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : MemoryBufferNode<InOut>
    +removeListener(eventName: string | symbol, listener: Function) : MemoryBufferNode<InOut>
    +setMaxListeners(n: number) : MemoryBufferNode<InOut>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setOptions(options: NodeOptions) : MemoryBufferNode<InOut>
    #next() : Promise<InOut>
    #shift() : Promise<InOut>
}
"MemoryBufferNode<InOut>" <|- - "TimeSyncNode<InOut>"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 16:46:50 UTC 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>