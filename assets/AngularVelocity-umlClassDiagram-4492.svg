<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2328px" preserveAspectRatio="none" style="width:762px;height:2328px;background:#00000000;" version="1.1" viewBox="0 0 762 2328" width="762px" zoomAndPan="magnify"><defs><filter height="300%" id="f8143pcj4is87" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[d6c64b1f0b9a0da25bf9cd9e67310d9c]
class AngularVelocity--><rect codeLine="4" fill="#FEFECE" filter="url(#f8143pcj4is87)" height="1123.5938" id="AngularVelocity" style="stroke:#A80036;stroke-width:1.5;" width="629" x="63" y="1191"/><ellipse cx="325.25" cy="1207" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M328.2188,1212.6406 Q327.6406,1212.9375 327,1213.0781 Q326.3594,1213.2344 325.6563,1213.2344 Q323.1563,1213.2344 321.8281,1211.5938 Q320.5156,1209.9375 320.5156,1206.8125 Q320.5156,1203.6875 321.8281,1202.0313 Q323.1563,1200.375 325.6563,1200.375 Q326.3594,1200.375 327,1200.5313 Q327.6563,1200.6875 328.2188,1200.9844 L328.2188,1203.7031 Q327.5938,1203.125 327,1202.8594 Q326.4063,1202.5781 325.7813,1202.5781 Q324.4375,1202.5781 323.75,1203.6563 Q323.0625,1204.7188 323.0625,1206.8125 Q323.0625,1208.9063 323.75,1209.9844 Q324.4375,1211.0469 325.7813,1211.0469 Q326.4063,1211.0469 327,1210.7813 Q327.5938,1210.5 328.2188,1209.9219 L328.2188,1212.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="96" x="345.75" y="1211.1543">AngularVelocity</text><line style="stroke:#A80036;stroke-width:1.5;" x1="64" x2="691" y1="1223" y2="1223"/><ellipse cx="74" cy="1234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="345" x="83" y="1237.2104">accuracy : Accuracy&lt;AngularVelocityUnit, number | Vector3&gt;</text><ellipse cx="74" cy="1246.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="83" y="1250.0151">isVector3 : true</text><ellipse cx="74" cy="1259.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="117" x="83" y="1262.8198">timestamp : number</text><ellipse cx="74" cy="1272.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="83" y="1275.6245">x : number</text><ellipse cx="74" cy="1285.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="83" y="1288.4292">y : number</text><ellipse cx="74" cy="1298.0234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="61" x="83" y="1301.2339">z : number</text><line style="stroke:#A80036;stroke-width:1.5;" x1="64" x2="691" y1="1307.8281" y2="1307.8281"/><ellipse cx="74" cy="1318.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="184" x="83" y="1322.0386">add(v: Vector3) : AngularVelocity</text><ellipse cx="74" cy="1331.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="222" x="83" y="1334.8433">addScalar(s: number) : AngularVelocity</text><ellipse cx="74" cy="1344.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="83" y="1347.6479">addScaledVector(v: Vector3, s: number) : AngularVelocity</text><ellipse cx="74" cy="1357.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="294" x="83" y="1360.4526">addVectors(a: Vector3, b: Vector3) : AngularVelocity</text><ellipse cx="74" cy="1370.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="83" y="1373.2573">angleTo(v: Vector3) : number</text><ellipse cx="74" cy="1382.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="83" y="1386.062">applyAxisAngle(axis: Vector3, angle: number) : AngularVelocity</text><ellipse cx="74" cy="1395.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="83" y="1398.8667">applyEuler(euler: Euler) : AngularVelocity</text><ellipse cx="74" cy="1408.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="237" x="83" y="1411.6714">applyMatrix3(m: Matrix3) : AngularVelocity</text><ellipse cx="74" cy="1421.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="237" x="83" y="1424.4761">applyMatrix4(m: Matrix4) : AngularVelocity</text><ellipse cx="74" cy="1434.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="271" x="83" y="1437.2808">applyNormalMatrix(m: Matrix3) : AngularVelocity</text><ellipse cx="74" cy="1446.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="277" x="83" y="1450.0854">applyQuaternion(q: Quaternion) : AngularVelocity</text><ellipse cx="74" cy="1459.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="125" x="83" y="1462.8901">ceil() : AngularVelocity</text><ellipse cx="74" cy="1472.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="295" x="83" y="1475.6948">clamp(min: Vector3, max: Vector3) : AngularVelocity</text><ellipse cx="74" cy="1485.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="335" x="83" y="1488.4995">clampLength(min: number, max: number) : AngularVelocity</text><ellipse cx="74" cy="1498.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="83" y="1501.3042">clampScalar(min: number, max: number) : AngularVelocity</text><ellipse cx="74" cy="1510.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="136" x="83" y="1514.1089">clone() : AngularVelocity</text><ellipse cx="74" cy="1523.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="189" x="83" y="1526.9136">copy(v: Vector3) : AngularVelocity</text><ellipse cx="74" cy="1536.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="83" y="1539.7183">cross(a: Vector3) : AngularVelocity</text><ellipse cx="74" cy="1549.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="305" x="83" y="1552.5229">crossVectors(a: Vector3, b: Vector3) : AngularVelocity</text><ellipse cx="74" cy="1562.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="83" y="1565.3276">distanceTo(v: Vector3) : number</text><ellipse cx="74" cy="1574.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="242" x="83" y="1578.1323">distanceToManhattan(v: Vector3) : number</text><ellipse cx="74" cy="1587.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="83" y="1590.937">distanceToSquared(v: Vector3) : number</text><ellipse cx="74" cy="1600.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="83" y="1603.7417">divide(v: Vector3) : AngularVelocity</text><ellipse cx="74" cy="1613.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="234" x="83" y="1616.5464">divideScalar(s: number) : AngularVelocity</text><ellipse cx="74" cy="1626.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="83" y="1629.3511">dot(v: Vector3) : number</text><ellipse cx="74" cy="1638.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="160" x="83" y="1642.1558">equals(v: Vector3) : boolean</text><ellipse cx="74" cy="1651.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="132" x="83" y="1654.9604">floor() : AngularVelocity</text><ellipse cx="74" cy="1664.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="472" x="83" y="1667.7651">fromArray(array: number[] | ArrayLike&lt;number&gt;, offset: number) : AngularVelocity</text><ellipse cx="74" cy="1677.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="398" x="83" y="1680.5698">fromArray(array: number[], unit: AngularVelocityUnit) : AngularVelocity</text><ellipse cx="74" cy="1690.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="603" x="83" y="1693.3745">fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : AngularVelocity</text><ellipse cx="74" cy="1702.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="229" x="83" y="1706.1792">getComponent(index: number) : number</text><ellipse cx="74" cy="1715.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="83" y="1718.9839">length() : number</text><ellipse cx="74" cy="1728.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="83" y="1731.7886">lengthManhattan() : number</text><ellipse cx="74" cy="1741.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="83" y="1744.5933">lengthSq() : number</text><ellipse cx="74" cy="1754.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="276" x="83" y="1757.3979">lerp(v: Vector3, alpha: number) : AngularVelocity</text><ellipse cx="74" cy="1766.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="398" x="83" y="1770.2026">lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : AngularVelocity</text><ellipse cx="74" cy="1779.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="83" y="1783.0073">manhattanDistanceTo(v: Vector3) : number</text><ellipse cx="74" cy="1792.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="83" y="1795.812">manhattanLength() : number</text><ellipse cx="74" cy="1805.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="187" x="83" y="1808.6167">max(v: Vector3) : AngularVelocity</text><ellipse cx="74" cy="1818.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="184" x="83" y="1821.4214">min(v: Vector3) : AngularVelocity</text><ellipse cx="74" cy="1831.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="207" x="83" y="1834.2261">multiply(v: Vector3) : AngularVelocity</text><ellipse cx="74" cy="1843.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="83" y="1847.0308">multiplyScalar(s: number) : AngularVelocity</text><ellipse cx="74" cy="1856.625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="317" x="83" y="1859.8354">multiplyVectors(a: Vector3, b: Vector3) : AngularVelocity</text><ellipse cx="74" cy="1869.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="145" x="83" y="1872.6401">negate() : AngularVelocity</text><ellipse cx="74" cy="1882.2344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="161" x="83" y="1885.4448">normalize() : AngularVelocity</text><ellipse cx="74" cy="1895.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="241" x="83" y="1898.2495">project(camera: Camera) : AngularVelocity</text><ellipse cx="74" cy="1907.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="315" x="83" y="1911.0542">projectOnPlane(planeNormal: Vector3) : AngularVelocity</text><ellipse cx="74" cy="1920.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="254" x="83" y="1923.8589">projectOnVector(v: Vector3) : AngularVelocity</text><ellipse cx="74" cy="1933.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="150" x="83" y="1936.6636">random() : AngularVelocity</text><ellipse cx="74" cy="1946.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="200" x="83" y="1949.4683">randomDirection() : AngularVelocity</text><ellipse cx="74" cy="1959.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="228" x="83" y="1962.2729">reflect(vector: Vector3) : AngularVelocity</text><ellipse cx="74" cy="1971.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="83" y="1975.0776">round() : AngularVelocity</text><ellipse cx="74" cy="1984.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="181" x="83" y="1987.8823">roundToZero() : AngularVelocity</text><ellipse cx="74" cy="1997.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="313" x="83" y="2000.687">set(x: number, y: number, z: number) : AngularVelocity</text><ellipse cx="74" cy="2010.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="571" x="83" y="2013.4917">setAccuracy(accuracy: number | Accuracy&lt;AngularVelocityUnit, number | Vector3&gt;) : AngularVelocity</text><ellipse cx="74" cy="2023.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="361" x="83" y="2026.2964">setComponent(index: number, value: number) : AngularVelocity</text><ellipse cx="74" cy="2035.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="284" x="83" y="2039.1011">setFromCylindrical(s: Cylindrical) : AngularVelocity</text><ellipse cx="74" cy="2048.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="495" x="83" y="2051.9058">setFromCylindricalCoords(radius: number, theta: number, y: number) : AngularVelocity</text><ellipse cx="74" cy="2061.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="83" y="2064.7104">setFromEuler(e: Euler) : AngularVelocity</text><ellipse cx="74" cy="2074.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="412" x="83" y="2077.5151">setFromMatrix3Column(matrix: Matrix3, index: number) : AngularVelocity</text><ellipse cx="74" cy="2087.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="405" x="83" y="2090.3198">setFromMatrixColumn(matrix: Matrix4, index: number) : AngularVelocity</text><ellipse cx="74" cy="2099.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="83" y="2103.1245">setFromMatrixPosition(m: Matrix4) : AngularVelocity</text><ellipse cx="74" cy="2112.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="278" x="83" y="2115.9292">setFromMatrixScale(m: Matrix4) : AngularVelocity</text><ellipse cx="74" cy="2125.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="274" x="83" y="2128.7339">setFromSpherical(s: Spherical) : AngularVelocity</text><ellipse cx="74" cy="2138.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="470" x="83" y="2141.5386">setFromSphericalCoords(r: number, phi: number, theta: number) : AngularVelocity</text><ellipse cx="74" cy="2151.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="83" y="2154.3433">setLength(l: number) : AngularVelocity</text><ellipse cx="74" cy="2163.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="247" x="83" y="2167.1479">setScalar(scalar: number) : AngularVelocity</text><ellipse cx="74" cy="2176.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="83" y="2179.9526">setX(x: number) : Vector3</text><ellipse cx="74" cy="2189.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="83" y="2192.7573">setY(y: number) : Vector3</text><ellipse cx="74" cy="2202.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="83" y="2205.562">setZ(z: number) : Vector3</text><ellipse cx="74" cy="2215.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="185" x="83" y="2218.3667">sub(a: Vector3) : AngularVelocity</text><ellipse cx="74" cy="2227.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="222" x="83" y="2231.1714">subScalar(s: number) : AngularVelocity</text><ellipse cx="74" cy="2240.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="294" x="83" y="2243.9761">subVectors(a: Vector3, b: Vector3) : AngularVelocity</text><ellipse cx="74" cy="2253.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="83" y="2256.7808">toArray(array: number[], offset: number) : number[]</text><ellipse cx="74" cy="2266.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="83" y="2269.5854">toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple</text><ellipse cx="74" cy="2279.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="420" x="83" y="2282.3901">toArray(array: ArrayLike&lt;number&gt;, offset: number) : ArrayLike&lt;number&gt;</text><ellipse cx="74" cy="2291.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="83" y="2295.1948">transformDirection(m: Matrix4) : AngularVelocity</text><ellipse cx="74" cy="2304.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="255" x="83" y="2307.9995">unproject(camera: Camera) : AngularVelocity</text><!--MD5=[f9b9bacf56743bcece27d96d6aa817da]
class SensorValue<AngularVelocityUnit>--><rect codeLine="90" fill="#FEFECE" filter="url(#f8143pcj4is87)" height="1123.5938" id="SensorValue&lt;AngularVelocityUnit&gt;" style="stroke:#A80036;stroke-width:1.5;" width="741" x="7" y="7"/><ellipse cx="263.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M266.2188,28.6406 Q265.6406,28.9375 265,29.0781 Q264.3594,29.2344 263.6563,29.2344 Q261.1563,29.2344 259.8281,27.5938 Q258.5156,25.9375 258.5156,22.8125 Q258.5156,19.6875 259.8281,18.0313 Q261.1563,16.375 263.6563,16.375 Q264.3594,16.375 265,16.5313 Q265.6563,16.6875 266.2188,16.9844 L266.2188,19.7031 Q265.5938,19.125 265,18.8594 Q264.4063,18.5781 263.7813,18.5781 Q262.4375,18.5781 261.75,19.6563 Q261.0625,20.7188 261.0625,22.8125 Q261.0625,24.9063 261.75,25.9844 Q262.4375,27.0469 263.7813,27.0469 Q264.4063,27.0469 265,26.7813 Q265.5938,26.5 266.2188,25.9219 L266.2188,28.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="220" x="283.75" y="27.1543">SensorValue&lt;AngularVelocityUnit&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="747" y1="39" y2="39"/><ellipse cx="18" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="345" x="27" y="53.2104">accuracy : Accuracy&lt;AngularVelocityUnit, number | Vector3&gt;</text><ellipse cx="18" cy="62.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="27" y="66.0151">isVector3 : true</text><ellipse cx="18" cy="75.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="117" x="27" y="78.8198">timestamp : number</text><ellipse cx="18" cy="88.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="27" y="91.6245">x : number</text><ellipse cx="18" cy="101.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="27" y="104.4292">y : number</text><ellipse cx="18" cy="114.0234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="61" x="27" y="117.2339">z : number</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="747" y1="123.8281" y2="123.8281"/><ellipse cx="18" cy="134.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="27" y="138.0386">add(v: Vector3) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="147.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="334" x="27" y="150.8433">addScalar(s: number) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="160.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="437" x="27" y="163.6479">addScaledVector(v: Vector3, s: number) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="173.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="406" x="27" y="176.4526">addVectors(a: Vector3, b: Vector3) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="186.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="27" y="189.2573">angleTo(v: Vector3) : number</text><ellipse cx="18" cy="198.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="467" x="27" y="202.062">applyAxisAngle(axis: Vector3, angle: number) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="211.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="27" y="214.8667">applyEuler(euler: Euler) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="224.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="349" x="27" y="227.6714">applyMatrix3(m: Matrix3) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="237.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="349" x="27" y="240.4761">applyMatrix4(m: Matrix4) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="250.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="383" x="27" y="253.2808">applyNormalMatrix(m: Matrix3) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="262.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="389" x="27" y="266.0854">applyQuaternion(q: Quaternion) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="275.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="237" x="27" y="278.8901">ceil() : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="288.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="407" x="27" y="291.6948">clamp(min: Vector3, max: Vector3) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="301.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="447" x="27" y="304.4995">clampLength(min: number, max: number) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="314.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="445" x="27" y="317.3042">clampScalar(min: number, max: number) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="326.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="248" x="27" y="330.1089">clone() : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="339.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="27" y="342.9136">copy(v: Vector3) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="352.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="27" y="355.7183">cross(a: Vector3) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="365.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="417" x="27" y="368.5229">crossVectors(a: Vector3, b: Vector3) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="378.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="27" y="381.3276">distanceTo(v: Vector3) : number</text><ellipse cx="18" cy="390.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="242" x="27" y="394.1323">distanceToManhattan(v: Vector3) : number</text><ellipse cx="18" cy="403.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="27" y="406.937">distanceToSquared(v: Vector3) : number</text><ellipse cx="18" cy="416.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="27" y="419.7417">divide(v: Vector3) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="429.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="27" y="432.5464">divideScalar(s: number) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="442.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="445.3511">dot(v: Vector3) : number</text><ellipse cx="18" cy="454.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="160" x="27" y="458.1558">equals(v: Vector3) : boolean</text><ellipse cx="18" cy="467.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="27" y="470.9604">floor() : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="480.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="584" x="27" y="483.7651">fromArray(array: number[] | ArrayLike&lt;number&gt;, offset: number) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="493.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="27" y="496.5698">fromArray(array: number[]) : Vector3</text><ellipse cx="18" cy="506.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="715" x="27" y="509.3745">fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="518.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="229" x="27" y="522.1792">getComponent(index: number) : number</text><ellipse cx="18" cy="531.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="27" y="534.9839">length() : number</text><ellipse cx="18" cy="544.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="27" y="547.7886">lengthManhattan() : number</text><ellipse cx="18" cy="557.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="27" y="560.5933">lengthSq() : number</text><ellipse cx="18" cy="570.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="388" x="27" y="573.3979">lerp(v: Vector3, alpha: number) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="582.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="510" x="27" y="586.2026">lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="595.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="27" y="599.0073">manhattanDistanceTo(v: Vector3) : number</text><ellipse cx="18" cy="608.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="27" y="611.812">manhattanLength() : number</text><ellipse cx="18" cy="621.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="299" x="27" y="624.6167">max(v: Vector3) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="634.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="27" y="637.4214">min(v: Vector3) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="647.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="319" x="27" y="650.2261">multiply(v: Vector3) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="659.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="357" x="27" y="663.0308">multiplyScalar(s: number) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="672.625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="429" x="27" y="675.8354">multiplyVectors(a: Vector3, b: Vector3) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="685.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="257" x="27" y="688.6401">negate() : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="698.2344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="27" y="701.4448">normalize() : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="711.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="27" y="714.2495">project(camera: Camera) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="723.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="427" x="27" y="727.0542">projectOnPlane(planeNormal: Vector3) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="736.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="366" x="27" y="739.8589">projectOnVector(v: Vector3) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="749.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="27" y="752.6636">random() : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="762.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="312" x="27" y="765.4683">randomDirection() : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="775.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="340" x="27" y="778.2729">reflect(vector: Vector3) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="787.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="27" y="791.0776">round() : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="800.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="27" y="803.8823">roundToZero() : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="813.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="425" x="27" y="816.687">set(x: number, y: number, z: number) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="826.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="683" x="27" y="829.4917">setAccuracy(accuracy: number | Accuracy&lt;AngularVelocityUnit, number | Vector3&gt;) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="839.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="473" x="27" y="842.2964">setComponent(index: number, value: number) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="851.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="396" x="27" y="855.1011">setFromCylindrical(s: Cylindrical) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="864.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="607" x="27" y="867.9058">setFromCylindricalCoords(radius: number, theta: number, y: number) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="877.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="27" y="880.7104">setFromEuler(e: Euler) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="890.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="524" x="27" y="893.5151">setFromMatrix3Column(matrix: Matrix3, index: number) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="903.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="517" x="27" y="906.3198">setFromMatrixColumn(matrix: Matrix4, index: number) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="915.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="404" x="27" y="919.1245">setFromMatrixPosition(m: Matrix4) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="928.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="390" x="27" y="931.9292">setFromMatrixScale(m: Matrix4) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="941.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="27" y="944.7339">setFromSpherical(s: Spherical) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="954.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="582" x="27" y="957.5386">setFromSphericalCoords(r: number, phi: number, theta: number) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="967.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="329" x="27" y="970.3433">setLength(l: number) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="979.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="359" x="27" y="983.1479">setScalar(scalar: number) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="992.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="27" y="995.9526">setX(x: number) : Vector3</text><ellipse cx="18" cy="1005.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="27" y="1008.7573">setY(y: number) : Vector3</text><ellipse cx="18" cy="1018.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="1021.562">setZ(z: number) : Vector3</text><ellipse cx="18" cy="1031.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="297" x="27" y="1034.3667">sub(a: Vector3) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="1043.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="334" x="27" y="1047.1714">subScalar(s: number) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="1056.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="406" x="27" y="1059.9761">subVectors(a: Vector3, b: Vector3) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="1069.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="27" y="1072.7808">toArray(array: number[], offset: number) : number[]</text><ellipse cx="18" cy="1082.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="27" y="1085.5854">toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple</text><ellipse cx="18" cy="1095.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="420" x="27" y="1098.3901">toArray(array: ArrayLike&lt;number&gt;, offset: number) : ArrayLike&lt;number&gt;</text><ellipse cx="18" cy="1107.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="385" x="27" y="1111.1948">transformDirection(m: Matrix4) : SensorValue&lt;AngularVelocityUnit&gt;</text><ellipse cx="18" cy="1120.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="367" x="27" y="1123.9995">unproject(camera: Camera) : SensorValue&lt;AngularVelocityUnit&gt;</text><!--MD5=[3aaee00e73c69b633adca7bdcfb7ba31]
reverse link SensorValue<AngularVelocityUnit> to AngularVelocity--><path codeLine="176" d="M377.5,1151.59 C377.5,1164.61 377.5,1177.63 377.5,1190.63 " fill="none" id="SensorValue&lt;AngularVelocityUnit&gt;-backto-AngularVelocity" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="370.5,1151.14,377.5,1131.14,384.5,1151.14,370.5,1151.14" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[4e7c3604fbef42fc44258ccd85c7f124]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "AngularVelocity" {
    +accuracy : Accuracy<AngularVelocityUnit, number | Vector3>
    +isVector3 : true
    +timestamp : number
    +x : number
    +y : number
    +z : number
    +add(v: Vector3) : AngularVelocity
    +addScalar(s: number) : AngularVelocity
    +addScaledVector(v: Vector3, s: number) : AngularVelocity
    +addVectors(a: Vector3, b: Vector3) : AngularVelocity
    +angleTo(v: Vector3) : number
    +applyAxisAngle(axis: Vector3, angle: number) : AngularVelocity
    +applyEuler(euler: Euler) : AngularVelocity
    +applyMatrix3(m: Matrix3) : AngularVelocity
    +applyMatrix4(m: Matrix4) : AngularVelocity
    +applyNormalMatrix(m: Matrix3) : AngularVelocity
    +applyQuaternion(q: Quaternion) : AngularVelocity
    +ceil() : AngularVelocity
    +clamp(min: Vector3, max: Vector3) : AngularVelocity
    +clampLength(min: number, max: number) : AngularVelocity
    +clampScalar(min: number, max: number) : AngularVelocity
    +clone() : AngularVelocity
    +copy(v: Vector3) : AngularVelocity
    +cross(a: Vector3) : AngularVelocity
    +crossVectors(a: Vector3, b: Vector3) : AngularVelocity
    +distanceTo(v: Vector3) : number
    +distanceToManhattan(v: Vector3) : number
    +distanceToSquared(v: Vector3) : number
    +divide(v: Vector3) : AngularVelocity
    +divideScalar(s: number) : AngularVelocity
    +dot(v: Vector3) : number
    +equals(v: Vector3) : boolean
    +floor() : AngularVelocity
    +fromArray(array: number[] | ArrayLike<number>, offset: number) : AngularVelocity
    {static} +fromArray(array: number[], unit: AngularVelocityUnit) : AngularVelocity
    +fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : AngularVelocity
    +getComponent(index: number) : number
    +length() : number
    +lengthManhattan() : number
    +lengthSq() : number
    +lerp(v: Vector3, alpha: number) : AngularVelocity
    +lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : AngularVelocity
    +manhattanDistanceTo(v: Vector3) : number
    +manhattanLength() : number
    +max(v: Vector3) : AngularVelocity
    +min(v: Vector3) : AngularVelocity
    +multiply(v: Vector3) : AngularVelocity
    +multiplyScalar(s: number) : AngularVelocity
    +multiplyVectors(a: Vector3, b: Vector3) : AngularVelocity
    +negate() : AngularVelocity
    +normalize() : AngularVelocity
    +project(camera: Camera) : AngularVelocity
    +projectOnPlane(planeNormal: Vector3) : AngularVelocity
    +projectOnVector(v: Vector3) : AngularVelocity
    +random() : AngularVelocity
    +randomDirection() : AngularVelocity
    +reflect(vector: Vector3) : AngularVelocity
    +round() : AngularVelocity
    +roundToZero() : AngularVelocity
    +set(x: number, y: number, z: number) : AngularVelocity
    +setAccuracy(accuracy: number | Accuracy<AngularVelocityUnit, number | Vector3>) : AngularVelocity
    +setComponent(index: number, value: number) : AngularVelocity
    +setFromCylindrical(s: Cylindrical) : AngularVelocity
    +setFromCylindricalCoords(radius: number, theta: number, y: number) : AngularVelocity
    +setFromEuler(e: Euler) : AngularVelocity
    +setFromMatrix3Column(matrix: Matrix3, index: number) : AngularVelocity
    +setFromMatrixColumn(matrix: Matrix4, index: number) : AngularVelocity
    +setFromMatrixPosition(m: Matrix4) : AngularVelocity
    +setFromMatrixScale(m: Matrix4) : AngularVelocity
    +setFromSpherical(s: Spherical) : AngularVelocity
    +setFromSphericalCoords(r: number, phi: number, theta: number) : AngularVelocity
    +setLength(l: number) : AngularVelocity
    +setScalar(scalar: number) : AngularVelocity
    +setX(x: number) : Vector3
    +setY(y: number) : Vector3
    +setZ(z: number) : Vector3
    +sub(a: Vector3) : AngularVelocity
    +subScalar(s: number) : AngularVelocity
    +subVectors(a: Vector3, b: Vector3) : AngularVelocity
    +toArray(array: number[], offset: number) : number[]
    +toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple
    +toArray(array: ArrayLike<number>, offset: number) : ArrayLike<number>
    +transformDirection(m: Matrix4) : AngularVelocity
    +unproject(camera: Camera) : AngularVelocity
}
class "SensorValue<AngularVelocityUnit>" {
    +accuracy : Accuracy<AngularVelocityUnit, number | Vector3>
    +isVector3 : true
    +timestamp : number
    +x : number
    +y : number
    +z : number
    +add(v: Vector3) : SensorValue<AngularVelocityUnit>
    +addScalar(s: number) : SensorValue<AngularVelocityUnit>
    +addScaledVector(v: Vector3, s: number) : SensorValue<AngularVelocityUnit>
    +addVectors(a: Vector3, b: Vector3) : SensorValue<AngularVelocityUnit>
    +angleTo(v: Vector3) : number
    +applyAxisAngle(axis: Vector3, angle: number) : SensorValue<AngularVelocityUnit>
    +applyEuler(euler: Euler) : SensorValue<AngularVelocityUnit>
    +applyMatrix3(m: Matrix3) : SensorValue<AngularVelocityUnit>
    +applyMatrix4(m: Matrix4) : SensorValue<AngularVelocityUnit>
    +applyNormalMatrix(m: Matrix3) : SensorValue<AngularVelocityUnit>
    +applyQuaternion(q: Quaternion) : SensorValue<AngularVelocityUnit>
    +ceil() : SensorValue<AngularVelocityUnit>
    +clamp(min: Vector3, max: Vector3) : SensorValue<AngularVelocityUnit>
    +clampLength(min: number, max: number) : SensorValue<AngularVelocityUnit>
    +clampScalar(min: number, max: number) : SensorValue<AngularVelocityUnit>
    +clone() : SensorValue<AngularVelocityUnit>
    +copy(v: Vector3) : SensorValue<AngularVelocityUnit>
    +cross(a: Vector3) : SensorValue<AngularVelocityUnit>
    +crossVectors(a: Vector3, b: Vector3) : SensorValue<AngularVelocityUnit>
    +distanceTo(v: Vector3) : number
    +distanceToManhattan(v: Vector3) : number
    +distanceToSquared(v: Vector3) : number
    +divide(v: Vector3) : SensorValue<AngularVelocityUnit>
    +divideScalar(s: number) : SensorValue<AngularVelocityUnit>
    +dot(v: Vector3) : number
    +equals(v: Vector3) : boolean
    +floor() : SensorValue<AngularVelocityUnit>
    +fromArray(array: number[] | ArrayLike<number>, offset: number) : SensorValue<AngularVelocityUnit>
    {static} +fromArray(array: number[]) : Vector3
    +fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : SensorValue<AngularVelocityUnit>
    +getComponent(index: number) : number
    +length() : number
    +lengthManhattan() : number
    +lengthSq() : number
    +lerp(v: Vector3, alpha: number) : SensorValue<AngularVelocityUnit>
    +lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : SensorValue<AngularVelocityUnit>
    +manhattanDistanceTo(v: Vector3) : number
    +manhattanLength() : number
    +max(v: Vector3) : SensorValue<AngularVelocityUnit>
    +min(v: Vector3) : SensorValue<AngularVelocityUnit>
    +multiply(v: Vector3) : SensorValue<AngularVelocityUnit>
    +multiplyScalar(s: number) : SensorValue<AngularVelocityUnit>
    +multiplyVectors(a: Vector3, b: Vector3) : SensorValue<AngularVelocityUnit>
    +negate() : SensorValue<AngularVelocityUnit>
    +normalize() : SensorValue<AngularVelocityUnit>
    +project(camera: Camera) : SensorValue<AngularVelocityUnit>
    +projectOnPlane(planeNormal: Vector3) : SensorValue<AngularVelocityUnit>
    +projectOnVector(v: Vector3) : SensorValue<AngularVelocityUnit>
    +random() : SensorValue<AngularVelocityUnit>
    +randomDirection() : SensorValue<AngularVelocityUnit>
    +reflect(vector: Vector3) : SensorValue<AngularVelocityUnit>
    +round() : SensorValue<AngularVelocityUnit>
    +roundToZero() : SensorValue<AngularVelocityUnit>
    +set(x: number, y: number, z: number) : SensorValue<AngularVelocityUnit>
    +setAccuracy(accuracy: number | Accuracy<AngularVelocityUnit, number | Vector3>) : SensorValue<AngularVelocityUnit>
    +setComponent(index: number, value: number) : SensorValue<AngularVelocityUnit>
    +setFromCylindrical(s: Cylindrical) : SensorValue<AngularVelocityUnit>
    +setFromCylindricalCoords(radius: number, theta: number, y: number) : SensorValue<AngularVelocityUnit>
    +setFromEuler(e: Euler) : SensorValue<AngularVelocityUnit>
    +setFromMatrix3Column(matrix: Matrix3, index: number) : SensorValue<AngularVelocityUnit>
    +setFromMatrixColumn(matrix: Matrix4, index: number) : SensorValue<AngularVelocityUnit>
    +setFromMatrixPosition(m: Matrix4) : SensorValue<AngularVelocityUnit>
    +setFromMatrixScale(m: Matrix4) : SensorValue<AngularVelocityUnit>
    +setFromSpherical(s: Spherical) : SensorValue<AngularVelocityUnit>
    +setFromSphericalCoords(r: number, phi: number, theta: number) : SensorValue<AngularVelocityUnit>
    +setLength(l: number) : SensorValue<AngularVelocityUnit>
    +setScalar(scalar: number) : SensorValue<AngularVelocityUnit>
    +setX(x: number) : Vector3
    +setY(y: number) : Vector3
    +setZ(z: number) : Vector3
    +sub(a: Vector3) : SensorValue<AngularVelocityUnit>
    +subScalar(s: number) : SensorValue<AngularVelocityUnit>
    +subVectors(a: Vector3, b: Vector3) : SensorValue<AngularVelocityUnit>
    +toArray(array: number[], offset: number) : number[]
    +toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple
    +toArray(array: ArrayLike<number>, offset: number) : ArrayLike<number>
    +transformDirection(m: Matrix4) : SensorValue<AngularVelocityUnit>
    +unproject(camera: Camera) : SensorValue<AngularVelocityUnit>
}
"SensorValue<AngularVelocityUnit>" <|- - "AngularVelocity"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 16:46:50 UTC 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>