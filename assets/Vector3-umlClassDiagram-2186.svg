<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2281px" preserveAspectRatio="none" style="width:1308px;height:2281px;background:#00000000;" version="1.1" viewBox="0 0 1308 2281" width="1308px" zoomAndPan="magnify"><defs><filter height="300%" id="fjep3a7wby2xi" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[65d619c042c23702cef2ca07d67b1cf6]
class Vector3--><rect codeLine="87" fill="#FEFECE" filter="url(#fjep3a7wby2xi)" height="1077.1484" id="Vector3" style="stroke:#A80036;stroke-width:1.5;" width="586" x="342.5" y="7"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="49" x="611" y="23.1387">Vector3</text><line style="stroke:#A80036;stroke-width:1.5;" x1="343.5" x2="927.5" y1="30.9688" y2="30.9688"/><ellipse cx="353.5" cy="41.9688" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="362.5" y="45.1792">isVector3 : true</text><ellipse cx="353.5" cy="54.7734" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="362.5" y="57.9839">x : number</text><ellipse cx="353.5" cy="67.5781" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="362.5" y="70.7886">y : number</text><ellipse cx="353.5" cy="80.3828" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="61" x="362.5" y="83.5933">z : number</text><line style="stroke:#A80036;stroke-width:1.5;" x1="343.5" x2="927.5" y1="90.1875" y2="90.1875"/><ellipse cx="353.5" cy="101.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="141" x="362.5" y="104.3979">add(v: Vector3) : Vector3</text><ellipse cx="353.5" cy="113.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="362.5" y="117.2026">addScalar(s: number) : Vector3</text><ellipse cx="353.5" cy="126.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="282" x="362.5" y="130.0073">addScaledVector(v: Vector3, s: number) : Vector3</text><ellipse cx="353.5" cy="139.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="362.5" y="142.812">addVectors(a: Vector3, b: Vector3) : Vector3</text><ellipse cx="353.5" cy="152.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="362.5" y="155.6167">angleTo(v: Vector3) : number</text><ellipse cx="353.5" cy="165.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="312" x="362.5" y="168.4214">applyAxisAngle(axis: Vector3, angle: number) : Vector3</text><ellipse cx="353.5" cy="178.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="188" x="362.5" y="181.2261">applyEuler(euler: Euler) : Vector3</text><ellipse cx="353.5" cy="190.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="362.5" y="194.0308">applyMatrix3(m: Matrix3) : Vector3</text><ellipse cx="353.5" cy="203.625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="362.5" y="206.8354">applyMatrix4(m: Matrix4) : Vector3</text><ellipse cx="353.5" cy="216.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="228" x="362.5" y="219.6401">applyNormalMatrix(m: Matrix3) : Vector3</text><ellipse cx="353.5" cy="229.2344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="234" x="362.5" y="232.4448">applyQuaternion(q: Quaternion) : Vector3</text><ellipse cx="353.5" cy="242.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="82" x="362.5" y="245.2495">ceil() : Vector3</text><ellipse cx="353.5" cy="254.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="252" x="362.5" y="258.0542">clamp(min: Vector3, max: Vector3) : Vector3</text><ellipse cx="353.5" cy="267.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="362.5" y="270.8589">clampLength(min: number, max: number) : Vector3</text><ellipse cx="353.5" cy="280.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="290" x="362.5" y="283.6636">clampScalar(min: number, max: number) : Vector3</text><ellipse cx="353.5" cy="293.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="93" x="362.5" y="296.4683">clone() : Vector3</text><ellipse cx="353.5" cy="306.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="362.5" y="309.2729">copy(v: Vector3) : Vector3</text><ellipse cx="353.5" cy="318.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="153" x="362.5" y="322.0776">cross(a: Vector3) : Vector3</text><ellipse cx="353.5" cy="331.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="362.5" y="334.8823">crossVectors(a: Vector3, b: Vector3) : Vector3</text><ellipse cx="353.5" cy="344.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="362.5" y="347.687">distanceTo(v: Vector3) : number</text><ellipse cx="353.5" cy="357.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="242" x="362.5" y="360.4917">distanceToManhattan(v: Vector3) : number</text><ellipse cx="353.5" cy="370.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="362.5" y="373.2964">distanceToSquared(v: Vector3) : number</text><ellipse cx="353.5" cy="382.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="153" x="362.5" y="386.1011">divide(v: Vector3) : Vector3</text><ellipse cx="353.5" cy="395.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="191" x="362.5" y="398.9058">divideScalar(s: number) : Vector3</text><ellipse cx="353.5" cy="408.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="362.5" y="411.7104">dot(v: Vector3) : number</text><ellipse cx="353.5" cy="421.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="160" x="362.5" y="424.5151">equals(v: Vector3) : boolean</text><ellipse cx="353.5" cy="434.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="89" x="362.5" y="437.3198">floor() : Vector3</text><ellipse cx="353.5" cy="446.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="429" x="362.5" y="450.1245">fromArray(array: number[] | ArrayLike&lt;number&gt;, offset: number) : Vector3</text><ellipse cx="353.5" cy="459.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="362.5" y="462.9292">fromArray(array: number[]) : Vector3</text><ellipse cx="353.5" cy="472.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="560" x="362.5" y="475.7339">fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : Vector3</text><ellipse cx="353.5" cy="485.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="229" x="362.5" y="488.5386">getComponent(index: number) : number</text><ellipse cx="353.5" cy="498.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="362.5" y="501.3433">length() : number</text><ellipse cx="353.5" cy="510.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="362.5" y="514.1479">lengthManhattan() : number</text><ellipse cx="353.5" cy="523.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="362.5" y="526.9526">lengthSq() : number</text><ellipse cx="353.5" cy="536.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="362.5" y="539.7573">lerp(v: Vector3, alpha: number) : Vector3</text><ellipse cx="353.5" cy="549.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="362.5" y="552.562">lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : Vector3</text><ellipse cx="353.5" cy="562.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="362.5" y="565.3667">manhattanDistanceTo(v: Vector3) : number</text><ellipse cx="353.5" cy="574.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="362.5" y="578.1714">manhattanLength() : number</text><ellipse cx="353.5" cy="587.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="144" x="362.5" y="590.9761">max(v: Vector3) : Vector3</text><ellipse cx="353.5" cy="600.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="141" x="362.5" y="603.7808">min(v: Vector3) : Vector3</text><ellipse cx="353.5" cy="613.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="362.5" y="616.5854">multiply(v: Vector3) : Vector3</text><ellipse cx="353.5" cy="626.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="202" x="362.5" y="629.3901">multiplyScalar(s: number) : Vector3</text><ellipse cx="353.5" cy="638.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="274" x="362.5" y="642.1948">multiplyVectors(a: Vector3, b: Vector3) : Vector3</text><ellipse cx="353.5" cy="651.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="362.5" y="654.9995">negate() : Vector3</text><ellipse cx="353.5" cy="664.5938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="362.5" y="667.8042">normalize() : Vector3</text><ellipse cx="353.5" cy="677.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="198" x="362.5" y="680.6089">project(camera: Camera) : Vector3</text><ellipse cx="353.5" cy="690.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="272" x="362.5" y="693.4136">projectOnPlane(planeNormal: Vector3) : Vector3</text><ellipse cx="353.5" cy="703.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="211" x="362.5" y="706.2183">projectOnVector(v: Vector3) : Vector3</text><ellipse cx="353.5" cy="715.8125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="362.5" y="719.0229">random() : Vector3</text><ellipse cx="353.5" cy="728.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="362.5" y="731.8276">randomDirection() : Vector3</text><ellipse cx="353.5" cy="741.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="185" x="362.5" y="744.6323">reflect(vector: Vector3) : Vector3</text><ellipse cx="353.5" cy="754.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="362.5" y="757.437">round() : Vector3</text><ellipse cx="353.5" cy="767.0313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="138" x="362.5" y="770.2417">roundToZero() : Vector3</text><ellipse cx="353.5" cy="779.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="270" x="362.5" y="783.0464">set(x: number, y: number, z: number) : Vector3</text><ellipse cx="353.5" cy="792.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="362.5" y="795.8511">setComponent(index: number, value: number) : Vector3</text><ellipse cx="353.5" cy="805.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="241" x="362.5" y="808.6558">setFromCylindrical(s: Cylindrical) : Vector3</text><ellipse cx="353.5" cy="818.25" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="452" x="362.5" y="821.4604">setFromCylindricalCoords(radius: number, theta: number, y: number) : Vector3</text><ellipse cx="353.5" cy="831.0547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="362.5" y="834.2651">setFromEuler(e: Euler) : Vector3</text><ellipse cx="353.5" cy="843.8594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="369" x="362.5" y="847.0698">setFromMatrix3Column(matrix: Matrix3, index: number) : Vector3</text><ellipse cx="353.5" cy="856.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="362.5" y="859.8745">setFromMatrixColumn(matrix: Matrix4, index: number) : Vector3</text><ellipse cx="353.5" cy="869.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="362.5" y="872.6792">setFromMatrixPosition(m: Matrix4) : Vector3</text><ellipse cx="353.5" cy="882.2734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="235" x="362.5" y="885.4839">setFromMatrixScale(m: Matrix4) : Vector3</text><ellipse cx="353.5" cy="895.0781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="362.5" y="898.2886">setFromSpherical(s: Spherical) : Vector3</text><ellipse cx="353.5" cy="907.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="427" x="362.5" y="911.0933">setFromSphericalCoords(r: number, phi: number, theta: number) : Vector3</text><ellipse cx="353.5" cy="920.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="362.5" y="923.8979">setLength(l: number) : Vector3</text><ellipse cx="353.5" cy="933.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="204" x="362.5" y="936.7026">setScalar(scalar: number) : Vector3</text><ellipse cx="353.5" cy="946.2969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="362.5" y="949.5073">setX(x: number) : Vector3</text><ellipse cx="353.5" cy="959.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="362.5" y="962.312">setY(y: number) : Vector3</text><ellipse cx="353.5" cy="971.9063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="362.5" y="975.1167">setZ(z: number) : Vector3</text><ellipse cx="353.5" cy="984.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="362.5" y="987.9214">sub(a: Vector3) : Vector3</text><ellipse cx="353.5" cy="997.5156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="362.5" y="1000.7261">subScalar(s: number) : Vector3</text><ellipse cx="353.5" cy="1010.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="362.5" y="1013.5308">subVectors(a: Vector3, b: Vector3) : Vector3</text><ellipse cx="353.5" cy="1023.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="362.5" y="1026.3354">toArray(array: number[], offset: number) : number[]</text><ellipse cx="353.5" cy="1035.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="362.5" y="1039.1401">toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple</text><ellipse cx="353.5" cy="1048.7344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="420" x="362.5" y="1051.9448">toArray(array: ArrayLike&lt;number&gt;, offset: number) : ArrayLike&lt;number&gt;</text><ellipse cx="353.5" cy="1061.5391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="230" x="362.5" y="1064.7495">transformDirection(m: Matrix4) : Vector3</text><ellipse cx="353.5" cy="1074.3438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="212" x="362.5" y="1077.5542">unproject(camera: Camera) : Vector3</text><!--MD5=[711dce01fb2039d6d69a4789d3536fbd]
class AxisAngle--><rect codeLine="90" fill="#FEFECE" filter="url(#fjep3a7wby2xi)" height="1123.5938" id="AxisAngle" style="stroke:#A80036;stroke-width:1.5;" width="597" x="7" y="1144"/><ellipse cx="271.75" cy="1160" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M274.7188,1165.6406 Q274.1406,1165.9375 273.5,1166.0781 Q272.8594,1166.2344 272.1563,1166.2344 Q269.6563,1166.2344 268.3281,1164.5938 Q267.0156,1162.9375 267.0156,1159.8125 Q267.0156,1156.6875 268.3281,1155.0313 Q269.6563,1153.375 272.1563,1153.375 Q272.8594,1153.375 273.5,1153.5313 Q274.1563,1153.6875 274.7188,1153.9844 L274.7188,1156.7031 Q274.0938,1156.125 273.5,1155.8594 Q272.9063,1155.5781 272.2813,1155.5781 Q270.9375,1155.5781 270.25,1156.6563 Q269.5625,1157.7188 269.5625,1159.8125 Q269.5625,1161.9063 270.25,1162.9844 Q270.9375,1164.0469 272.2813,1164.0469 Q272.9063,1164.0469 273.5,1163.7813 Q274.0938,1163.5 274.7188,1162.9219 L274.7188,1165.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="59" x="292.25" y="1164.1543">AxisAngle</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="603" y1="1176" y2="1176"/><ellipse cx="18" cy="1187" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="27" y="1190.2104">angle : number</text><ellipse cx="18" cy="1199.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="27" y="1203.0151">isVector3 : true</text><ellipse cx="18" cy="1212.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="27" y="1215.8198">x : number</text><ellipse cx="18" cy="1225.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="27" y="1228.6245">y : number</text><ellipse cx="18" cy="1238.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="61" x="27" y="1241.4292">z : number</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="603" y1="1248.0234" y2="1248.0234"/><ellipse cx="18" cy="1259.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="152" x="27" y="1262.2339">add(v: Vector3) : AxisAngle</text><ellipse cx="18" cy="1271.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="27" y="1275.0386">addScalar(s: number) : AxisAngle</text><ellipse cx="18" cy="1284.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="27" y="1287.8433">addScaledVector(v: Vector3, s: number) : AxisAngle</text><ellipse cx="18" cy="1297.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="27" y="1300.6479">addVectors(a: Vector3, b: Vector3) : AxisAngle</text><ellipse cx="18" cy="1310.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="27" y="1313.4526">angleTo(v: Vector3) : number</text><ellipse cx="18" cy="1323.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="27" y="1326.2573">applyAxisAngle(axis: Vector3, angle: number) : AxisAngle</text><ellipse cx="18" cy="1335.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="199" x="27" y="1339.062">applyEuler(euler: Euler) : AxisAngle</text><ellipse cx="18" cy="1348.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="27" y="1351.8667">applyMatrix3(m: Matrix3) : AxisAngle</text><ellipse cx="18" cy="1361.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="27" y="1364.6714">applyMatrix4(m: Matrix4) : AxisAngle</text><ellipse cx="18" cy="1374.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="27" y="1377.4761">applyNormalMatrix(m: Matrix3) : AxisAngle</text><ellipse cx="18" cy="1387.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="27" y="1390.2808">applyQuaternion(q: Quaternion) : AxisAngle</text><ellipse cx="18" cy="1399.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="93" x="27" y="1403.0854">ceil() : AxisAngle</text><ellipse cx="18" cy="1412.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="27" y="1415.8901">clamp(min: Vector3, max: Vector3) : AxisAngle</text><ellipse cx="18" cy="1425.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="27" y="1428.6948">clampLength(min: number, max: number) : AxisAngle</text><ellipse cx="18" cy="1438.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="27" y="1441.4995">clampScalar(min: number, max: number) : AxisAngle</text><ellipse cx="18" cy="1451.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="27" y="1454.3042">clone() : AxisAngle</text><ellipse cx="18" cy="1463.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="27" y="1467.1089">copy(v: Vector3) : AxisAngle</text><ellipse cx="18" cy="1476.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="27" y="1479.9136">cross(a: Vector3) : AxisAngle</text><ellipse cx="18" cy="1489.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="27" y="1492.7183">crossVectors(a: Vector3, b: Vector3) : AxisAngle</text><ellipse cx="18" cy="1502.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="27" y="1505.5229">distanceTo(v: Vector3) : number</text><ellipse cx="18" cy="1515.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="242" x="27" y="1518.3276">distanceToManhattan(v: Vector3) : number</text><ellipse cx="18" cy="1527.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="27" y="1531.1323">distanceToSquared(v: Vector3) : number</text><ellipse cx="18" cy="1540.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="27" y="1543.937">divide(v: Vector3) : AxisAngle</text><ellipse cx="18" cy="1553.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="202" x="27" y="1556.7417">divideScalar(s: number) : AxisAngle</text><ellipse cx="18" cy="1566.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="1569.5464">dot(v: Vector3) : number</text><ellipse cx="18" cy="1579.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="160" x="27" y="1582.3511">equals(v: Vector3) : boolean</text><ellipse cx="18" cy="1591.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="100" x="27" y="1595.1558">floor() : AxisAngle</text><ellipse cx="18" cy="1604.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="440" x="27" y="1607.9604">fromArray(array: number[] | ArrayLike&lt;number&gt;, offset: number) : AxisAngle</text><ellipse cx="18" cy="1617.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="27" y="1620.7651">fromArray(array: number[]) : Vector3</text><ellipse cx="18" cy="1630.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="571" x="27" y="1633.5698">fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : AxisAngle</text><ellipse cx="18" cy="1643.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="260" x="27" y="1646.3745">fromQuaternion(quat: Quaternion) : AxisAngle</text><ellipse cx="18" cy="1655.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="229" x="27" y="1659.1792">getComponent(index: number) : number</text><ellipse cx="18" cy="1668.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="27" y="1671.9839">length() : number</text><ellipse cx="18" cy="1681.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="27" y="1684.7886">lengthManhattan() : number</text><ellipse cx="18" cy="1694.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="27" y="1697.5933">lengthSq() : number</text><ellipse cx="18" cy="1707.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="27" y="1710.3979">lerp(v: Vector3, alpha: number) : AxisAngle</text><ellipse cx="18" cy="1719.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="366" x="27" y="1723.2026">lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : AxisAngle</text><ellipse cx="18" cy="1732.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="27" y="1736.0073">manhattanDistanceTo(v: Vector3) : number</text><ellipse cx="18" cy="1745.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="27" y="1748.812">manhattanLength() : number</text><ellipse cx="18" cy="1758.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="27" y="1761.6167">max(v: Vector3) : AxisAngle</text><ellipse cx="18" cy="1771.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="152" x="27" y="1774.4214">min(v: Vector3) : AxisAngle</text><ellipse cx="18" cy="1784.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="175" x="27" y="1787.2261">multiply(v: Vector3) : AxisAngle</text><ellipse cx="18" cy="1796.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="27" y="1800.0308">multiplyScalar(s: number) : AxisAngle</text><ellipse cx="18" cy="1809.625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="285" x="27" y="1812.8354">multiplyVectors(a: Vector3, b: Vector3) : AxisAngle</text><ellipse cx="18" cy="1822.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="113" x="27" y="1825.6401">negate() : AxisAngle</text><ellipse cx="18" cy="1835.2344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="27" y="1838.4448">normalize() : AxisAngle</text><ellipse cx="18" cy="1848.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="27" y="1851.2495">project(camera: Camera) : AxisAngle</text><ellipse cx="18" cy="1860.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="27" y="1864.0542">projectOnPlane(planeNormal: Vector3) : AxisAngle</text><ellipse cx="18" cy="1873.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="222" x="27" y="1876.8589">projectOnVector(v: Vector3) : AxisAngle</text><ellipse cx="18" cy="1886.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="27" y="1889.6636">random() : AxisAngle</text><ellipse cx="18" cy="1899.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="168" x="27" y="1902.4683">randomDirection() : AxisAngle</text><ellipse cx="18" cy="1912.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="27" y="1915.2729">reflect(vector: Vector3) : AxisAngle</text><ellipse cx="18" cy="1924.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="27" y="1928.0776">round() : AxisAngle</text><ellipse cx="18" cy="1937.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="149" x="27" y="1940.8823">roundToZero() : AxisAngle</text><ellipse cx="18" cy="1950.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="27" y="1953.687">set(x: number, y: number, z: number) : AxisAngle</text><ellipse cx="18" cy="1963.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="329" x="27" y="1966.4917">setComponent(index: number, value: number) : AxisAngle</text><ellipse cx="18" cy="1976.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="252" x="27" y="1979.2964">setFromCylindrical(s: Cylindrical) : AxisAngle</text><ellipse cx="18" cy="1988.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="463" x="27" y="1992.1011">setFromCylindricalCoords(radius: number, theta: number, y: number) : AxisAngle</text><ellipse cx="18" cy="2001.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="27" y="2004.9058">setFromEuler(e: Euler) : AxisAngle</text><ellipse cx="18" cy="2014.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="380" x="27" y="2017.7104">setFromMatrix3Column(matrix: Matrix3, index: number) : AxisAngle</text><ellipse cx="18" cy="2027.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="373" x="27" y="2030.5151">setFromMatrixColumn(matrix: Matrix4, index: number) : AxisAngle</text><ellipse cx="18" cy="2040.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="260" x="27" y="2043.3198">setFromMatrixPosition(m: Matrix4) : AxisAngle</text><ellipse cx="18" cy="2052.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="27" y="2056.1245">setFromMatrixScale(m: Matrix4) : AxisAngle</text><ellipse cx="18" cy="2065.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="242" x="27" y="2068.9292">setFromSpherical(s: Spherical) : AxisAngle</text><ellipse cx="18" cy="2078.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="438" x="27" y="2081.7339">setFromSphericalCoords(r: number, phi: number, theta: number) : AxisAngle</text><ellipse cx="18" cy="2091.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="185" x="27" y="2094.5386">setLength(l: number) : AxisAngle</text><ellipse cx="18" cy="2104.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="215" x="27" y="2107.3433">setScalar(scalar: number) : AxisAngle</text><ellipse cx="18" cy="2116.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="27" y="2120.1479">setX(x: number) : Vector3</text><ellipse cx="18" cy="2129.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="27" y="2132.9526">setY(y: number) : Vector3</text><ellipse cx="18" cy="2142.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="2145.7573">setZ(z: number) : Vector3</text><ellipse cx="18" cy="2155.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="153" x="27" y="2158.562">sub(a: Vector3) : AxisAngle</text><ellipse cx="18" cy="2168.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="27" y="2171.3667">subScalar(s: number) : AxisAngle</text><ellipse cx="18" cy="2180.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="27" y="2184.1714">subVectors(a: Vector3, b: Vector3) : AxisAngle</text><ellipse cx="18" cy="2193.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="27" y="2196.9761">toArray(array: number[], offset: number) : number[]</text><ellipse cx="18" cy="2206.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="27" y="2209.7808">toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple</text><ellipse cx="18" cy="2219.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="420" x="27" y="2222.5854">toArray(array: ArrayLike&lt;number&gt;, offset: number) : ArrayLike&lt;number&gt;</text><ellipse cx="18" cy="2232.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="152" x="27" y="2235.3901">toRotationMatrix() : Matrix4</text><ellipse cx="18" cy="2244.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="241" x="27" y="2248.1948">transformDirection(m: Matrix4) : AxisAngle</text><ellipse cx="18" cy="2257.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="223" x="27" y="2260.9995">unproject(camera: Camera) : AxisAngle</text><!--MD5=[c52eebc31f4e4bfeaf6fbeeb01c7dc6a]
class SensorValue<Unit>--><rect codeLine="177" fill="#FEFECE" filter="url(#fjep3a7wby2xi)" height="1123.5938" id="SensorValue&lt;Unit&gt;" style="stroke:#A80036;stroke-width:1.5;" width="655" x="639" y="1144"/><ellipse cx="900.25" cy="1160" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M903.2188,1165.6406 Q902.6406,1165.9375 902,1166.0781 Q901.3594,1166.2344 900.6563,1166.2344 Q898.1563,1166.2344 896.8281,1164.5938 Q895.5156,1162.9375 895.5156,1159.8125 Q895.5156,1156.6875 896.8281,1155.0313 Q898.1563,1153.375 900.6563,1153.375 Q901.3594,1153.375 902,1153.5313 Q902.6563,1153.6875 903.2188,1153.9844 L903.2188,1156.7031 Q902.5938,1156.125 902,1155.8594 Q901.4063,1155.5781 900.7813,1155.5781 Q899.4375,1155.5781 898.75,1156.6563 Q898.0625,1157.7188 898.0625,1159.8125 Q898.0625,1161.9063 898.75,1162.9844 Q899.4375,1164.0469 900.7813,1164.0469 Q901.4063,1164.0469 902,1163.7813 Q902.5938,1163.5 903.2188,1162.9219 L903.2188,1165.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="124" x="920.75" y="1164.1543">SensorValue&lt;Unit&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="640" x2="1293" y1="1176" y2="1176"/><ellipse cx="650" cy="1187" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="659" y="1190.2104">accuracy : Accuracy&lt;Unit, number | Vector3&gt;</text><ellipse cx="650" cy="1199.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="659" y="1203.0151">isVector3 : true</text><ellipse cx="650" cy="1212.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="117" x="659" y="1215.8198">timestamp : number</text><ellipse cx="650" cy="1225.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="659" y="1228.6245">x : number</text><ellipse cx="650" cy="1238.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="659" y="1241.4292">y : number</text><ellipse cx="650" cy="1251.0234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="61" x="659" y="1254.2339">z : number</text><line style="stroke:#A80036;stroke-width:1.5;" x1="640" x2="1293" y1="1260.8281" y2="1260.8281"/><ellipse cx="650" cy="1271.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="659" y="1275.0386">add(v: Vector3) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1284.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="248" x="659" y="1287.8433">addScalar(s: number) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1297.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="351" x="659" y="1300.6479">addScaledVector(v: Vector3, s: number) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1310.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="659" y="1313.4526">addVectors(a: Vector3, b: Vector3) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1323.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="659" y="1326.2573">angleTo(v: Vector3) : number</text><ellipse cx="650" cy="1335.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="381" x="659" y="1339.062">applyAxisAngle(axis: Vector3, angle: number) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1348.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="257" x="659" y="1351.8667">applyEuler(euler: Euler) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1361.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="659" y="1364.6714">applyMatrix3(m: Matrix3) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1374.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="659" y="1377.4761">applyMatrix4(m: Matrix4) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1387.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="297" x="659" y="1390.2808">applyNormalMatrix(m: Matrix3) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1399.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="659" y="1403.0854">applyQuaternion(q: Quaternion) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1412.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="151" x="659" y="1415.8901">ceil() : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1425.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="321" x="659" y="1428.6948">clamp(min: Vector3, max: Vector3) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1438.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="361" x="659" y="1441.4995">clampLength(min: number, max: number) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1451.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="359" x="659" y="1454.3042">clampScalar(min: number, max: number) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1463.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="162" x="659" y="1467.1089">clone() : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1476.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="215" x="659" y="1479.9136">copy(v: Vector3) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1489.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="222" x="659" y="1492.7183">cross(a: Vector3) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1502.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="331" x="659" y="1505.5229">crossVectors(a: Vector3, b: Vector3) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1515.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="659" y="1518.3276">distanceTo(v: Vector3) : number</text><ellipse cx="650" cy="1527.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="242" x="659" y="1531.1323">distanceToManhattan(v: Vector3) : number</text><ellipse cx="650" cy="1540.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="659" y="1543.937">distanceToSquared(v: Vector3) : number</text><ellipse cx="650" cy="1553.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="222" x="659" y="1556.7417">divide(v: Vector3) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1566.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="260" x="659" y="1569.5464">divideScalar(s: number) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1579.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="659" y="1582.3511">dot(v: Vector3) : number</text><ellipse cx="650" cy="1591.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="160" x="659" y="1595.1558">equals(v: Vector3) : boolean</text><ellipse cx="650" cy="1604.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="659" y="1607.9604">floor() : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1617.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="498" x="659" y="1620.7651">fromArray(array: number[] | ArrayLike&lt;number&gt;, offset: number) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1630.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="659" y="1633.5698">fromArray(array: number[]) : Vector3</text><ellipse cx="650" cy="1643.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="629" x="659" y="1646.3745">fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1655.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="229" x="659" y="1659.1792">getComponent(index: number) : number</text><ellipse cx="650" cy="1668.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="659" y="1671.9839">length() : number</text><ellipse cx="650" cy="1681.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="659" y="1684.7886">lengthManhattan() : number</text><ellipse cx="650" cy="1694.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="659" y="1697.5933">lengthSq() : number</text><ellipse cx="650" cy="1707.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="302" x="659" y="1710.3979">lerp(v: Vector3, alpha: number) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1719.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="424" x="659" y="1723.2026">lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1732.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="659" y="1736.0073">manhattanDistanceTo(v: Vector3) : number</text><ellipse cx="650" cy="1745.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="659" y="1748.812">manhattanLength() : number</text><ellipse cx="650" cy="1758.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="659" y="1761.6167">max(v: Vector3) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1771.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="659" y="1774.4214">min(v: Vector3) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1784.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="659" y="1787.2261">multiply(v: Vector3) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1796.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="271" x="659" y="1800.0308">multiplyScalar(s: number) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1809.625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="343" x="659" y="1812.8354">multiplyVectors(a: Vector3, b: Vector3) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1822.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="171" x="659" y="1825.6401">negate() : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1835.2344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="187" x="659" y="1838.4448">normalize() : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1848.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="267" x="659" y="1851.2495">project(camera: Camera) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1860.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="659" y="1864.0542">projectOnPlane(planeNormal: Vector3) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1873.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="280" x="659" y="1876.8589">projectOnVector(v: Vector3) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1886.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="176" x="659" y="1889.6636">random() : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1899.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="659" y="1902.4683">randomDirection() : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1912.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="254" x="659" y="1915.2729">reflect(vector: Vector3) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1924.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="165" x="659" y="1928.0776">round() : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1937.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="207" x="659" y="1940.8823">roundToZero() : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1950.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="339" x="659" y="1953.687">set(x: number, y: number, z: number) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1963.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="511" x="659" y="1966.4917">setAccuracy(accuracy: number | Accuracy&lt;Unit, number | Vector3&gt;) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1976.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="387" x="659" y="1979.2964">setComponent(index: number, value: number) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="1988.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="659" y="1992.1011">setFromCylindrical(s: Cylindrical) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="2001.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="521" x="659" y="2004.9058">setFromCylindricalCoords(radius: number, theta: number, y: number) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="2014.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="252" x="659" y="2017.7104">setFromEuler(e: Euler) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="2027.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="438" x="659" y="2030.5151">setFromMatrix3Column(matrix: Matrix3, index: number) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="2040.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="431" x="659" y="2043.3198">setFromMatrixColumn(matrix: Matrix4, index: number) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="2052.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="659" y="2056.1245">setFromMatrixPosition(m: Matrix4) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="2065.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="304" x="659" y="2068.9292">setFromMatrixScale(m: Matrix4) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="2078.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="659" y="2081.7339">setFromSpherical(s: Spherical) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="2091.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="496" x="659" y="2094.5386">setFromSphericalCoords(r: number, phi: number, theta: number) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="2104.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="243" x="659" y="2107.3433">setLength(l: number) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="2116.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="659" y="2120.1479">setScalar(scalar: number) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="2129.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="659" y="2132.9526">setX(x: number) : Vector3</text><ellipse cx="650" cy="2142.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="659" y="2145.7573">setY(y: number) : Vector3</text><ellipse cx="650" cy="2155.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="659" y="2158.562">setZ(z: number) : Vector3</text><ellipse cx="650" cy="2168.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="211" x="659" y="2171.3667">sub(a: Vector3) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="2180.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="248" x="659" y="2184.1714">subScalar(s: number) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="2193.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="659" y="2196.9761">subVectors(a: Vector3, b: Vector3) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="2206.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="659" y="2209.7808">toArray(array: number[], offset: number) : number[]</text><ellipse cx="650" cy="2219.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="659" y="2222.5854">toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple</text><ellipse cx="650" cy="2232.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="420" x="659" y="2235.3901">toArray(array: ArrayLike&lt;number&gt;, offset: number) : ArrayLike&lt;number&gt;</text><ellipse cx="650" cy="2244.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="299" x="659" y="2248.1948">transformDirection(m: Matrix4) : SensorValue&lt;Unit&gt;</text><ellipse cx="650" cy="2257.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="659" y="2260.9995">unproject(camera: Camera) : SensorValue&lt;Unit&gt;</text><!--MD5=[5992ff554b17823bfcfe29740e6d83a9]
reverse link Vector3 to Vector3--><path codeLine="89" d="M937.93,401.87 C953.98,437.13 963.5,485.01 963.5,545.5 C963.5,616.87 950.26,670.67 928.66,706.91 " fill="none" id="Vector3-backto-Vector3" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="931.7,405.06,928.66,384.09,944.11,398.59,931.7,405.06" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[e77900dd4bfec049c96cade9812025c0]
reverse link Vector3 to AxisAngle--><path codeLine="176" d="M476.77,1103.72 C472.98,1117.06 469.17,1130.41 465.38,1143.74 " fill="none" id="Vector3-backto-AxisAngle" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="470.12,1101.52,482.33,1084.2,483.59,1105.36,470.12,1101.52" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[004a4d8b6611414af497692083c98b32]
reverse link Vector3 to SensorValue<Unit>--><path codeLine="263" d="M794.71,1103.72 C798.52,1117.06 802.33,1130.41 806.14,1143.74 " fill="none" id="Vector3-backto-SensorValue&lt;Unit&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="787.89,1105.36,789.13,1084.2,801.36,1101.51,787.89,1105.36" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[a29786d89f7c8e8ad5709cbc23280711]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "Vector3" {
    +isVector3 : true
    +x : number
    +y : number
    +z : number
    +add(v: Vector3) : Vector3
    +addScalar(s: number) : Vector3
    +addScaledVector(v: Vector3, s: number) : Vector3
    +addVectors(a: Vector3, b: Vector3) : Vector3
    +angleTo(v: Vector3) : number
    +applyAxisAngle(axis: Vector3, angle: number) : Vector3
    +applyEuler(euler: Euler) : Vector3
    +applyMatrix3(m: Matrix3) : Vector3
    +applyMatrix4(m: Matrix4) : Vector3
    +applyNormalMatrix(m: Matrix3) : Vector3
    +applyQuaternion(q: Quaternion) : Vector3
    +ceil() : Vector3
    +clamp(min: Vector3, max: Vector3) : Vector3
    +clampLength(min: number, max: number) : Vector3
    +clampScalar(min: number, max: number) : Vector3
    +clone() : Vector3
    +copy(v: Vector3) : Vector3
    +cross(a: Vector3) : Vector3
    +crossVectors(a: Vector3, b: Vector3) : Vector3
    +distanceTo(v: Vector3) : number
    +distanceToManhattan(v: Vector3) : number
    +distanceToSquared(v: Vector3) : number
    +divide(v: Vector3) : Vector3
    +divideScalar(s: number) : Vector3
    +dot(v: Vector3) : number
    +equals(v: Vector3) : boolean
    +floor() : Vector3
    +fromArray(array: number[] | ArrayLike<number>, offset: number) : Vector3
    {static} +fromArray(array: number[]) : Vector3
    +fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : Vector3
    +getComponent(index: number) : number
    +length() : number
    +lengthManhattan() : number
    +lengthSq() : number
    +lerp(v: Vector3, alpha: number) : Vector3
    +lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : Vector3
    +manhattanDistanceTo(v: Vector3) : number
    +manhattanLength() : number
    +max(v: Vector3) : Vector3
    +min(v: Vector3) : Vector3
    +multiply(v: Vector3) : Vector3
    +multiplyScalar(s: number) : Vector3
    +multiplyVectors(a: Vector3, b: Vector3) : Vector3
    +negate() : Vector3
    +normalize() : Vector3
    +project(camera: Camera) : Vector3
    +projectOnPlane(planeNormal: Vector3) : Vector3
    +projectOnVector(v: Vector3) : Vector3
    +random() : Vector3
    +randomDirection() : Vector3
    +reflect(vector: Vector3) : Vector3
    +round() : Vector3
    +roundToZero() : Vector3
    +set(x: number, y: number, z: number) : Vector3
    +setComponent(index: number, value: number) : Vector3
    +setFromCylindrical(s: Cylindrical) : Vector3
    +setFromCylindricalCoords(radius: number, theta: number, y: number) : Vector3
    +setFromEuler(e: Euler) : Vector3
    +setFromMatrix3Column(matrix: Matrix3, index: number) : Vector3
    +setFromMatrixColumn(matrix: Matrix4, index: number) : Vector3
    +setFromMatrixPosition(m: Matrix4) : Vector3
    +setFromMatrixScale(m: Matrix4) : Vector3
    +setFromSpherical(s: Spherical) : Vector3
    +setFromSphericalCoords(r: number, phi: number, theta: number) : Vector3
    +setLength(l: number) : Vector3
    +setScalar(scalar: number) : Vector3
    +setX(x: number) : Vector3
    +setY(y: number) : Vector3
    +setZ(z: number) : Vector3
    +sub(a: Vector3) : Vector3
    +subScalar(s: number) : Vector3
    +subVectors(a: Vector3, b: Vector3) : Vector3
    +toArray(array: number[], offset: number) : number[]
    +toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple
    +toArray(array: ArrayLike<number>, offset: number) : ArrayLike<number>
    +transformDirection(m: Matrix4) : Vector3
    +unproject(camera: Camera) : Vector3
}
class "Vector3"
hide "Vector3" circle
"Vector3" <|- - "Vector3"
class "AxisAngle" {
    +angle : number
    +isVector3 : true
    +x : number
    +y : number
    +z : number
    +add(v: Vector3) : AxisAngle
    +addScalar(s: number) : AxisAngle
    +addScaledVector(v: Vector3, s: number) : AxisAngle
    +addVectors(a: Vector3, b: Vector3) : AxisAngle
    +angleTo(v: Vector3) : number
    +applyAxisAngle(axis: Vector3, angle: number) : AxisAngle
    +applyEuler(euler: Euler) : AxisAngle
    +applyMatrix3(m: Matrix3) : AxisAngle
    +applyMatrix4(m: Matrix4) : AxisAngle
    +applyNormalMatrix(m: Matrix3) : AxisAngle
    +applyQuaternion(q: Quaternion) : AxisAngle
    +ceil() : AxisAngle
    +clamp(min: Vector3, max: Vector3) : AxisAngle
    +clampLength(min: number, max: number) : AxisAngle
    +clampScalar(min: number, max: number) : AxisAngle
    +clone() : AxisAngle
    +copy(v: Vector3) : AxisAngle
    +cross(a: Vector3) : AxisAngle
    +crossVectors(a: Vector3, b: Vector3) : AxisAngle
    +distanceTo(v: Vector3) : number
    +distanceToManhattan(v: Vector3) : number
    +distanceToSquared(v: Vector3) : number
    +divide(v: Vector3) : AxisAngle
    +divideScalar(s: number) : AxisAngle
    +dot(v: Vector3) : number
    +equals(v: Vector3) : boolean
    +floor() : AxisAngle
    +fromArray(array: number[] | ArrayLike<number>, offset: number) : AxisAngle
    {static} +fromArray(array: number[]) : Vector3
    +fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : AxisAngle
    {static} +fromQuaternion(quat: Quaternion) : AxisAngle
    +getComponent(index: number) : number
    +length() : number
    +lengthManhattan() : number
    +lengthSq() : number
    +lerp(v: Vector3, alpha: number) : AxisAngle
    +lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : AxisAngle
    +manhattanDistanceTo(v: Vector3) : number
    +manhattanLength() : number
    +max(v: Vector3) : AxisAngle
    +min(v: Vector3) : AxisAngle
    +multiply(v: Vector3) : AxisAngle
    +multiplyScalar(s: number) : AxisAngle
    +multiplyVectors(a: Vector3, b: Vector3) : AxisAngle
    +negate() : AxisAngle
    +normalize() : AxisAngle
    +project(camera: Camera) : AxisAngle
    +projectOnPlane(planeNormal: Vector3) : AxisAngle
    +projectOnVector(v: Vector3) : AxisAngle
    +random() : AxisAngle
    +randomDirection() : AxisAngle
    +reflect(vector: Vector3) : AxisAngle
    +round() : AxisAngle
    +roundToZero() : AxisAngle
    +set(x: number, y: number, z: number) : AxisAngle
    +setComponent(index: number, value: number) : AxisAngle
    +setFromCylindrical(s: Cylindrical) : AxisAngle
    +setFromCylindricalCoords(radius: number, theta: number, y: number) : AxisAngle
    +setFromEuler(e: Euler) : AxisAngle
    +setFromMatrix3Column(matrix: Matrix3, index: number) : AxisAngle
    +setFromMatrixColumn(matrix: Matrix4, index: number) : AxisAngle
    +setFromMatrixPosition(m: Matrix4) : AxisAngle
    +setFromMatrixScale(m: Matrix4) : AxisAngle
    +setFromSpherical(s: Spherical) : AxisAngle
    +setFromSphericalCoords(r: number, phi: number, theta: number) : AxisAngle
    +setLength(l: number) : AxisAngle
    +setScalar(scalar: number) : AxisAngle
    +setX(x: number) : Vector3
    +setY(y: number) : Vector3
    +setZ(z: number) : Vector3
    +sub(a: Vector3) : AxisAngle
    +subScalar(s: number) : AxisAngle
    +subVectors(a: Vector3, b: Vector3) : AxisAngle
    +toArray(array: number[], offset: number) : number[]
    +toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple
    +toArray(array: ArrayLike<number>, offset: number) : ArrayLike<number>
    +toRotationMatrix() : Matrix4
    +transformDirection(m: Matrix4) : AxisAngle
    +unproject(camera: Camera) : AxisAngle
}
"Vector3" <|- - "AxisAngle"
class "SensorValue<Unit>" {
    +accuracy : Accuracy<Unit, number | Vector3>
    +isVector3 : true
    +timestamp : number
    +x : number
    +y : number
    +z : number
    +add(v: Vector3) : SensorValue<Unit>
    +addScalar(s: number) : SensorValue<Unit>
    +addScaledVector(v: Vector3, s: number) : SensorValue<Unit>
    +addVectors(a: Vector3, b: Vector3) : SensorValue<Unit>
    +angleTo(v: Vector3) : number
    +applyAxisAngle(axis: Vector3, angle: number) : SensorValue<Unit>
    +applyEuler(euler: Euler) : SensorValue<Unit>
    +applyMatrix3(m: Matrix3) : SensorValue<Unit>
    +applyMatrix4(m: Matrix4) : SensorValue<Unit>
    +applyNormalMatrix(m: Matrix3) : SensorValue<Unit>
    +applyQuaternion(q: Quaternion) : SensorValue<Unit>
    +ceil() : SensorValue<Unit>
    +clamp(min: Vector3, max: Vector3) : SensorValue<Unit>
    +clampLength(min: number, max: number) : SensorValue<Unit>
    +clampScalar(min: number, max: number) : SensorValue<Unit>
    +clone() : SensorValue<Unit>
    +copy(v: Vector3) : SensorValue<Unit>
    +cross(a: Vector3) : SensorValue<Unit>
    +crossVectors(a: Vector3, b: Vector3) : SensorValue<Unit>
    +distanceTo(v: Vector3) : number
    +distanceToManhattan(v: Vector3) : number
    +distanceToSquared(v: Vector3) : number
    +divide(v: Vector3) : SensorValue<Unit>
    +divideScalar(s: number) : SensorValue<Unit>
    +dot(v: Vector3) : number
    +equals(v: Vector3) : boolean
    +floor() : SensorValue<Unit>
    +fromArray(array: number[] | ArrayLike<number>, offset: number) : SensorValue<Unit>
    {static} +fromArray(array: number[]) : Vector3
    +fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : SensorValue<Unit>
    +getComponent(index: number) : number
    +length() : number
    +lengthManhattan() : number
    +lengthSq() : number
    +lerp(v: Vector3, alpha: number) : SensorValue<Unit>
    +lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : SensorValue<Unit>
    +manhattanDistanceTo(v: Vector3) : number
    +manhattanLength() : number
    +max(v: Vector3) : SensorValue<Unit>
    +min(v: Vector3) : SensorValue<Unit>
    +multiply(v: Vector3) : SensorValue<Unit>
    +multiplyScalar(s: number) : SensorValue<Unit>
    +multiplyVectors(a: Vector3, b: Vector3) : SensorValue<Unit>
    +negate() : SensorValue<Unit>
    +normalize() : SensorValue<Unit>
    +project(camera: Camera) : SensorValue<Unit>
    +projectOnPlane(planeNormal: Vector3) : SensorValue<Unit>
    +projectOnVector(v: Vector3) : SensorValue<Unit>
    +random() : SensorValue<Unit>
    +randomDirection() : SensorValue<Unit>
    +reflect(vector: Vector3) : SensorValue<Unit>
    +round() : SensorValue<Unit>
    +roundToZero() : SensorValue<Unit>
    +set(x: number, y: number, z: number) : SensorValue<Unit>
    +setAccuracy(accuracy: number | Accuracy<Unit, number | Vector3>) : SensorValue<Unit>
    +setComponent(index: number, value: number) : SensorValue<Unit>
    +setFromCylindrical(s: Cylindrical) : SensorValue<Unit>
    +setFromCylindricalCoords(radius: number, theta: number, y: number) : SensorValue<Unit>
    +setFromEuler(e: Euler) : SensorValue<Unit>
    +setFromMatrix3Column(matrix: Matrix3, index: number) : SensorValue<Unit>
    +setFromMatrixColumn(matrix: Matrix4, index: number) : SensorValue<Unit>
    +setFromMatrixPosition(m: Matrix4) : SensorValue<Unit>
    +setFromMatrixScale(m: Matrix4) : SensorValue<Unit>
    +setFromSpherical(s: Spherical) : SensorValue<Unit>
    +setFromSphericalCoords(r: number, phi: number, theta: number) : SensorValue<Unit>
    +setLength(l: number) : SensorValue<Unit>
    +setScalar(scalar: number) : SensorValue<Unit>
    +setX(x: number) : Vector3
    +setY(y: number) : Vector3
    +setZ(z: number) : Vector3
    +sub(a: Vector3) : SensorValue<Unit>
    +subScalar(s: number) : SensorValue<Unit>
    +subVectors(a: Vector3, b: Vector3) : SensorValue<Unit>
    +toArray(array: number[], offset: number) : number[]
    +toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple
    +toArray(array: ArrayLike<number>, offset: number) : ArrayLike<number>
    +transformDirection(m: Matrix4) : SensorValue<Unit>
    +unproject(camera: Camera) : SensorValue<Unit>
}
"Vector3" <|- - "SensorValue<Unit>"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 16:46:50 UTC 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>