<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1590px" preserveAspectRatio="none" style="width:707px;height:1590px;background:#00000000;" version="1.1" viewBox="0 0 707 1590" width="707px" zoomAndPan="magnify"><defs><filter height="300%" id="f1nhktbkb4eo8g" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[04136766ff0befd35071916e913a5e97]
class BKFilterNode<InOut>--><rect codeLine="4" fill="#FEFECE" filter="url(#f1nhktbkb4eo8g)" height="483.3594" id="BKFilterNode&lt;InOut&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="9" y="550"/><ellipse cx="280.75" cy="566" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M283.7188,571.6406 Q283.1406,571.9375 282.5,572.0781 Q281.8594,572.2344 281.1563,572.2344 Q278.6563,572.2344 277.3281,570.5938 Q276.0156,568.9375 276.0156,565.8125 Q276.0156,562.6875 277.3281,561.0313 Q278.6563,559.375 281.1563,559.375 Q281.8594,559.375 282.5,559.5313 Q283.1563,559.6875 283.7188,559.9844 L283.7188,562.7031 Q283.0938,562.125 282.5,561.8594 Q281.9063,561.5781 281.2813,561.5781 Q279.9375,561.5781 279.25,562.6563 Q278.5625,563.7188 278.5625,565.8125 Q278.5625,567.9063 279.25,568.9844 Q279.9375,570.0469 281.2813,570.0469 Q281.9063,570.0469 282.5,569.7813 Q283.0938,569.5 283.7188,568.9219 L283.7188,571.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="132" x="301.25" y="570.1543">BKFilterNode&lt;InOut&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="582" y2="582"/><ellipse cx="20" cy="593" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="29" y="596.2104">captureRejections : boolean</text><ellipse cx="20" cy="605.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="29" y="609.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="20" cy="618.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="29" y="621.8198">defaultMaxListeners : number</text><ellipse cx="20" cy="631.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="29" y="634.6245">errorMonitor : typeof errorMonitor</text><polygon fill="none" points="20,639.2188,24,643.2188,20,647.2188,16,643.2188" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="29" y="647.4292">options : ObjectProcessingNodeOptions</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="654.0234" y2="654.0234"/><ellipse cx="20" cy="665.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="471" x="29" y="668.2339">addListener(eventName: string | symbol, listener: Function) : BKFilterNode&lt;InOut&gt;</text><ellipse cx="20" cy="677.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="29" y="681.0386">eventNames() : (string | symbol)[]</text><ellipse cx="20" cy="690.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="29" y="693.8433">filter&lt;T&gt;(object: DataObject, value: T, filter: any) : Promise&lt;T&gt;</text><ellipse cx="20" cy="703.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="29" y="706.6479">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="20" cy="716.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="29" y="719.4526">getMaxListeners() : number</text><ellipse cx="20" cy="729.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="29" y="732.2573">getOptions() : NodeOptions</text><ellipse cx="20" cy="741.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="504" x="29" y="745.062">initFilter&lt;T&gt;(object: DataObject, value: T, options: KalmanFilterOptions) : Promise&lt;any&gt;</text><ellipse cx="20" cy="754.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="29" y="757.8667">listenerCount(eventName: string | symbol) : number</text><ellipse cx="20" cy="767.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="29" y="770.6714">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="20" cy="780.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="29" y="783.4761">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="793.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="419" x="29" y="796.2808">off(eventName: string | symbol, listener: Function) : BKFilterNode&lt;InOut&gt;</text><ellipse cx="20" cy="805.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="29" y="809.0854">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="20" cy="818.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="29" y="821.8901">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="831.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="29" y="834.6948">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="844.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="497" x="29" y="847.4995">prependListener(eventName: string | symbol, listener: Function) : BKFilterNode&lt;InOut&gt;</text><ellipse cx="20" cy="857.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="526" x="29" y="860.3042">prependOnceListener(eventName: string | symbol, listener: Function) : BKFilterNode&lt;InOut&gt;</text><ellipse cx="20" cy="869.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="370" x="29" y="873.1089">process(frame: InOut, options: GraphOptions) : Promise&lt;InOut&gt;</text><ellipse cx="20" cy="882.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="413" x="29" y="885.9136">processObject(object: DataObject, frame: InOut) : Promise&lt;DataObject&gt;</text><ellipse cx="20" cy="895.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="29" y="898.7183">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="908.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="374" x="29" y="911.5229">removeAllListeners(event: string | symbol) : BKFilterNode&lt;InOut&gt;</text><ellipse cx="20" cy="921.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="493" x="29" y="924.3276">removeListener(eventName: string | symbol, listener: Function) : BKFilterNode&lt;InOut&gt;</text><ellipse cx="20" cy="933.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="29" y="937.1323">setMaxListeners(n: number) : BKFilterNode&lt;InOut&gt;</text><ellipse cx="20" cy="946.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="29" y="949.937">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="20" cy="959.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="325" x="29" y="962.7417">setOptions(options: NodeOptions) : BKFilterNode&lt;InOut&gt;</text><polygon fill="#FFFF44" points="20,967.3359,24,971.3359,20,975.3359,16,971.3359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="523" x="29" y="975.5464">filterValue&lt;T&gt;(object: DataObject, obj: any, key: PropertyKey, value: T) : Promise&lt;[any, T]&gt;</text><polygon fill="#FFFF44" points="20,980.1406,24,984.1406,20,988.1406,16,984.1406" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="29" y="988.3511">findNodeDataService() : NodeDataService&lt;NodeData&gt;</text><polygon fill="#FFFF44" points="20,992.9453,24,996.9453,20,1000.9453,16,996.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="475" x="29" y="1001.1558">findObjectByUID(uid: string, dataFrame: InOut, type: string) : Promise&lt;DataObject&gt;</text><polygon fill="#FFFF44" points="20,1005.75,24,1009.75,20,1013.75,16,1009.75" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="422" x="29" y="1013.9604">getNodeData&lt;T&gt;(dataObject: DataObject, defaultData: T) : Promise&lt;any&gt;</text><polygon fill="#FFFF44" points="20,1018.5547,24,1022.5547,20,1026.5547,16,1022.5547" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="405" x="29" y="1026.7651">setNodeData(dataObject: DataObject, data: any) : Promise&lt;NodeData&gt;</text><!--MD5=[5c1e6fce4365e56468cf60e0107291cc]
class PropertyFilterProcessingNode<InOut>--><rect codeLine="40" fill="#FEFECE" filter="url(#f1nhktbkb4eo8g)" height="483.3594" id="PropertyFilterProcessingNode&lt;InOut&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="9" y="7"/><ellipse cx="228.75" cy="23" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M228.8594,18.3438 L227.7031,23.4219 L230.0313,23.4219 L228.8594,18.3438 Z M227.375,16.1094 L230.3594,16.1094 L233.7188,28.5 L231.2656,28.5 L230.5,25.4375 L227.2188,25.4375 L226.4688,28.5 L224.0313,28.5 L227.375,16.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="236" x="249.25" y="27.1543">PropertyFilterProcessingNode&lt;InOut&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="39" y2="39"/><ellipse cx="20" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="29" y="53.2104">captureRejections : boolean</text><ellipse cx="20" cy="62.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="29" y="66.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="20" cy="75.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="29" y="78.8198">defaultMaxListeners : number</text><ellipse cx="20" cy="88.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="29" y="91.6245">errorMonitor : typeof errorMonitor</text><polygon fill="none" points="20,96.2188,24,100.2188,20,104.2188,16,100.2188" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="29" y="104.4292">options : ObjectProcessingNodeOptions</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="111.0234" y2="111.0234"/><ellipse cx="20" cy="122.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="567" x="29" y="125.2339">addListener(eventName: string | symbol, listener: Function) : PropertyFilterProcessingNode&lt;InOut&gt;</text><ellipse cx="20" cy="134.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="29" y="138.0386">eventNames() : (string | symbol)[]</text><ellipse cx="20" cy="147.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="552" x="29" y="150.8433">filter&lt;T&gt;(object: DataObject, value: T, filter: any, options: FilterProcessingOptions) : Promise&lt;T&gt;</text><ellipse cx="20" cy="160.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="29" y="163.6479">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="20" cy="173.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="29" y="176.4526">getMaxListeners() : number</text><ellipse cx="20" cy="186.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="29" y="189.2573">getOptions() : NodeOptions</text><ellipse cx="20" cy="198.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="522" x="29" y="202.062">initFilter&lt;T&gt;(object: DataObject, value: T, options: FilterProcessingOptions) : Promise&lt;any&gt;</text><ellipse cx="20" cy="211.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="29" y="214.8667">listenerCount(eventName: string | symbol) : number</text><ellipse cx="20" cy="224.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="29" y="227.6714">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="20" cy="237.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="29" y="240.4761">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="250.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="515" x="29" y="253.2808">off(eventName: string | symbol, listener: Function) : PropertyFilterProcessingNode&lt;InOut&gt;</text><ellipse cx="20" cy="262.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="29" y="266.0854">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="20" cy="275.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="29" y="278.8901">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="288.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="29" y="291.6948">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="301.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="593" x="29" y="304.4995">prependListener(eventName: string | symbol, listener: Function) : PropertyFilterProcessingNode&lt;InOut&gt;</text><ellipse cx="20" cy="314.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="622" x="29" y="317.3042">prependOnceListener(eventName: string | symbol, listener: Function) : PropertyFilterProcessingNode&lt;InOut&gt;</text><ellipse cx="20" cy="326.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="370" x="29" y="330.1089">process(frame: InOut, options: GraphOptions) : Promise&lt;InOut&gt;</text><ellipse cx="20" cy="339.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="413" x="29" y="342.9136">processObject(object: DataObject, frame: InOut) : Promise&lt;DataObject&gt;</text><ellipse cx="20" cy="352.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="29" y="355.7183">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="365.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="470" x="29" y="368.5229">removeAllListeners(event: string | symbol) : PropertyFilterProcessingNode&lt;InOut&gt;</text><ellipse cx="20" cy="378.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="589" x="29" y="381.3276">removeListener(eventName: string | symbol, listener: Function) : PropertyFilterProcessingNode&lt;InOut&gt;</text><ellipse cx="20" cy="390.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="388" x="29" y="394.1323">setMaxListeners(n: number) : PropertyFilterProcessingNode&lt;InOut&gt;</text><ellipse cx="20" cy="403.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="29" y="406.937">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="20" cy="416.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="421" x="29" y="419.7417">setOptions(options: NodeOptions) : PropertyFilterProcessingNode&lt;InOut&gt;</text><polygon fill="#FFFF44" points="20,424.3359,24,428.3359,20,432.3359,16,428.3359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="523" x="29" y="432.5464">filterValue&lt;T&gt;(object: DataObject, obj: any, key: PropertyKey, value: T) : Promise&lt;[any, T]&gt;</text><polygon fill="#FFFF44" points="20,437.1406,24,441.1406,20,445.1406,16,441.1406" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="29" y="445.3511">findNodeDataService() : NodeDataService&lt;NodeData&gt;</text><polygon fill="#FFFF44" points="20,449.9453,24,453.9453,20,457.9453,16,453.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="475" x="29" y="458.1558">findObjectByUID(uid: string, dataFrame: InOut, type: string) : Promise&lt;DataObject&gt;</text><polygon fill="#FFFF44" points="20,462.75,24,466.75,20,470.75,16,466.75" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="422" x="29" y="470.9604">getNodeData&lt;T&gt;(dataObject: DataObject, defaultData: T) : Promise&lt;any&gt;</text><polygon fill="#FFFF44" points="20,475.5547,24,479.5547,20,483.5547,16,479.5547" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="405" x="29" y="483.7651">setNodeData(dataObject: DataObject, data: any) : Promise&lt;NodeData&gt;</text><!--MD5=[e791293e6a23e29d3166a720fa3d59a9]
class RelativePositionFilter<InOut, R>--><rect codeLine="77" fill="#FEFECE" filter="url(#f1nhktbkb4eo8g)" height="483.3594" id="RelativePositionFilter&lt;InOut, R&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="9" y="1093"/><ellipse cx="247.25" cy="1109" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M250.2188,1114.6406 Q249.6406,1114.9375 249,1115.0781 Q248.3594,1115.2344 247.6563,1115.2344 Q245.1563,1115.2344 243.8281,1113.5938 Q242.5156,1111.9375 242.5156,1108.8125 Q242.5156,1105.6875 243.8281,1104.0313 Q245.1563,1102.375 247.6563,1102.375 Q248.3594,1102.375 249,1102.5313 Q249.6563,1102.6875 250.2188,1102.9844 L250.2188,1105.7031 Q249.5938,1105.125 249,1104.8594 Q248.4063,1104.5781 247.7813,1104.5781 Q246.4375,1104.5781 245.75,1105.6563 Q245.0625,1106.7188 245.0625,1108.8125 Q245.0625,1110.9063 245.75,1111.9844 Q246.4375,1113.0469 247.7813,1113.0469 Q248.4063,1113.0469 249,1112.7813 Q249.5938,1112.5 250.2188,1111.9219 L250.2188,1114.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="199" x="267.75" y="1113.1543">RelativePositionFilter&lt;InOut, R&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="1125" y2="1125"/><ellipse cx="20" cy="1136" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="29" y="1139.2104">captureRejections : boolean</text><ellipse cx="20" cy="1148.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="29" y="1152.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="20" cy="1161.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="29" y="1164.8198">defaultMaxListeners : number</text><ellipse cx="20" cy="1174.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="29" y="1177.6245">errorMonitor : typeof errorMonitor</text><polygon fill="none" points="20,1182.2188,24,1186.2188,20,1190.2188,16,1186.2188" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="215" x="29" y="1190.4292">options : RelativePositionFilterOptions</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="1197.0234" y2="1197.0234"/><ellipse cx="20" cy="1208.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="531" x="29" y="1211.2339">addListener(eventName: string | symbol, listener: Function) : RelativePositionFilter&lt;InOut, R&gt;</text><ellipse cx="20" cy="1220.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="29" y="1224.0386">eventNames() : (string | symbol)[]</text><ellipse cx="20" cy="1233.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="29" y="1236.8433">filter&lt;T&gt;(object: DataObject, value: T, filter: any) : Promise&lt;T&gt;</text><ellipse cx="20" cy="1246.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="29" y="1249.6479">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="20" cy="1259.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="29" y="1262.4526">getMaxListeners() : number</text><ellipse cx="20" cy="1272.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="29" y="1275.2573">getOptions() : NodeOptions</text><ellipse cx="20" cy="1284.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="504" x="29" y="1288.062">initFilter&lt;T&gt;(object: DataObject, value: T, options: KalmanFilterOptions) : Promise&lt;any&gt;</text><ellipse cx="20" cy="1297.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="29" y="1300.8667">listenerCount(eventName: string | symbol) : number</text><ellipse cx="20" cy="1310.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="29" y="1313.6714">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="20" cy="1323.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="29" y="1326.4761">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="1336.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="479" x="29" y="1339.2808">off(eventName: string | symbol, listener: Function) : RelativePositionFilter&lt;InOut, R&gt;</text><ellipse cx="20" cy="1348.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="29" y="1352.0854">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="20" cy="1361.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="29" y="1364.8901">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="1374.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="29" y="1377.6948">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="1387.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="557" x="29" y="1390.4995">prependListener(eventName: string | symbol, listener: Function) : RelativePositionFilter&lt;InOut, R&gt;</text><ellipse cx="20" cy="1400.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="586" x="29" y="1403.3042">prependOnceListener(eventName: string | symbol, listener: Function) : RelativePositionFilter&lt;InOut, R&gt;</text><ellipse cx="20" cy="1412.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="370" x="29" y="1416.1089">process(frame: InOut, options: GraphOptions) : Promise&lt;InOut&gt;</text><ellipse cx="20" cy="1425.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="29" y="1428.9136">processObject(object: DataObject) : Promise&lt;DataObject&gt;</text><ellipse cx="20" cy="1438.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="29" y="1441.7183">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="1451.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="434" x="29" y="1454.5229">removeAllListeners(event: string | symbol) : RelativePositionFilter&lt;InOut, R&gt;</text><ellipse cx="20" cy="1464.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="553" x="29" y="1467.3276">removeListener(eventName: string | symbol, listener: Function) : RelativePositionFilter&lt;InOut, R&gt;</text><ellipse cx="20" cy="1476.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="352" x="29" y="1480.1323">setMaxListeners(n: number) : RelativePositionFilter&lt;InOut, R&gt;</text><ellipse cx="20" cy="1489.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="29" y="1492.937">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="20" cy="1502.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="385" x="29" y="1505.7417">setOptions(options: NodeOptions) : RelativePositionFilter&lt;InOut, R&gt;</text><polygon fill="#FFFF44" points="20,1510.3359,24,1514.3359,20,1518.3359,16,1514.3359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="523" x="29" y="1518.5464">filterValue&lt;T&gt;(object: DataObject, obj: any, key: PropertyKey, value: T) : Promise&lt;[any, T]&gt;</text><polygon fill="#FFFF44" points="20,1523.1406,24,1527.1406,20,1531.1406,16,1527.1406" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="29" y="1531.3511">findNodeDataService() : NodeDataService&lt;NodeData&gt;</text><polygon fill="#FFFF44" points="20,1535.9453,24,1539.9453,20,1543.9453,16,1539.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="475" x="29" y="1544.1558">findObjectByUID(uid: string, dataFrame: InOut, type: string) : Promise&lt;DataObject&gt;</text><polygon fill="#FFFF44" points="20,1548.75,24,1552.75,20,1556.75,16,1552.75" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="422" x="29" y="1556.9604">getNodeData&lt;T&gt;(dataObject: DataObject, defaultData: T) : Promise&lt;any&gt;</text><polygon fill="#FFFF44" points="20,1561.5547,24,1565.5547,20,1569.5547,16,1565.5547" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="405" x="29" y="1569.7651">setNodeData(dataObject: DataObject, data: any) : Promise&lt;NodeData&gt;</text><!--MD5=[53d5aee9eb855f924fa3196a138aab70]
reverse link PropertyFilterProcessingNode<InOut> to BKFilterNode<InOut>--><path codeLine="76" d="M351,510.75 C351,523.77 351,536.81 351,549.76 " fill="none" id="PropertyFilterProcessingNode&lt;InOut&gt;-backto-BKFilterNode&lt;InOut&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="344,510.34,351,490.34,358,510.34,344,510.34" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[0efa8dc1c1008f4896b344239ed28f41]
reverse link BKFilterNode<InOut> to RelativePositionFilter<InOut, R>--><path codeLine="113" d="M351,1053.75 C351,1066.77 351,1079.81 351,1092.76 " fill="none" id="BKFilterNode&lt;InOut&gt;-backto-RelativePositionFilter&lt;InOut, R&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="344,1053.34,351,1033.34,358,1053.34,344,1053.34" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[1e3c5e9d851df45e14f7723e0e22a603]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "BKFilterNode<InOut>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    #options : ObjectProcessingNodeOptions
    +addListener(eventName: string | symbol, listener: Function) : BKFilterNode<InOut>
    +eventNames() : (string | symbol)[]
    +filter<T>(object: DataObject, value: T, filter: any) : Promise<T>
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +getOptions() : NodeOptions
    +initFilter<T>(object: DataObject, value: T, options: KalmanFilterOptions) : Promise<any>
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : BKFilterNode<InOut>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : BKFilterNode<InOut>
    +prependOnceListener(eventName: string | symbol, listener: Function) : BKFilterNode<InOut>
    +process(frame: InOut, options: GraphOptions) : Promise<InOut>
    +processObject(object: DataObject, frame: InOut) : Promise<DataObject>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : BKFilterNode<InOut>
    +removeListener(eventName: string | symbol, listener: Function) : BKFilterNode<InOut>
    +setMaxListeners(n: number) : BKFilterNode<InOut>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setOptions(options: NodeOptions) : BKFilterNode<InOut>
    #filterValue<T>(object: DataObject, obj: any, key: PropertyKey, value: T) : Promise<[any, T]>
    #findNodeDataService() : NodeDataService<NodeData>
    #findObjectByUID(uid: string, dataFrame: InOut, type: string) : Promise<DataObject>
    #getNodeData<T>(dataObject: DataObject, defaultData: T) : Promise<any>
    #setNodeData(dataObject: DataObject, data: any) : Promise<NodeData>
}
abstract class "PropertyFilterProcessingNode<InOut>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    #options : ObjectProcessingNodeOptions
    +addListener(eventName: string | symbol, listener: Function) : PropertyFilterProcessingNode<InOut>
    +eventNames() : (string | symbol)[]
    {abstract} +filter<T>(object: DataObject, value: T, filter: any, options: FilterProcessingOptions) : Promise<T>
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +getOptions() : NodeOptions
    {abstract} +initFilter<T>(object: DataObject, value: T, options: FilterProcessingOptions) : Promise<any>
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : PropertyFilterProcessingNode<InOut>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : PropertyFilterProcessingNode<InOut>
    +prependOnceListener(eventName: string | symbol, listener: Function) : PropertyFilterProcessingNode<InOut>
    +process(frame: InOut, options: GraphOptions) : Promise<InOut>
    +processObject(object: DataObject, frame: InOut) : Promise<DataObject>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : PropertyFilterProcessingNode<InOut>
    +removeListener(eventName: string | symbol, listener: Function) : PropertyFilterProcessingNode<InOut>
    +setMaxListeners(n: number) : PropertyFilterProcessingNode<InOut>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setOptions(options: NodeOptions) : PropertyFilterProcessingNode<InOut>
    #filterValue<T>(object: DataObject, obj: any, key: PropertyKey, value: T) : Promise<[any, T]>
    #findNodeDataService() : NodeDataService<NodeData>
    #findObjectByUID(uid: string, dataFrame: InOut, type: string) : Promise<DataObject>
    #getNodeData<T>(dataObject: DataObject, defaultData: T) : Promise<any>
    #setNodeData(dataObject: DataObject, data: any) : Promise<NodeData>
}
"PropertyFilterProcessingNode<InOut>" <|- - "BKFilterNode<InOut>"
class "RelativePositionFilter<InOut, R>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    #options : RelativePositionFilterOptions
    +addListener(eventName: string | symbol, listener: Function) : RelativePositionFilter<InOut, R>
    +eventNames() : (string | symbol)[]
    +filter<T>(object: DataObject, value: T, filter: any) : Promise<T>
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +getOptions() : NodeOptions
    +initFilter<T>(object: DataObject, value: T, options: KalmanFilterOptions) : Promise<any>
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : RelativePositionFilter<InOut, R>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : RelativePositionFilter<InOut, R>
    +prependOnceListener(eventName: string | symbol, listener: Function) : RelativePositionFilter<InOut, R>
    +process(frame: InOut, options: GraphOptions) : Promise<InOut>
    +processObject(object: DataObject) : Promise<DataObject>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : RelativePositionFilter<InOut, R>
    +removeListener(eventName: string | symbol, listener: Function) : RelativePositionFilter<InOut, R>
    +setMaxListeners(n: number) : RelativePositionFilter<InOut, R>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setOptions(options: NodeOptions) : RelativePositionFilter<InOut, R>
    #filterValue<T>(object: DataObject, obj: any, key: PropertyKey, value: T) : Promise<[any, T]>
    #findNodeDataService() : NodeDataService<NodeData>
    #findObjectByUID(uid: string, dataFrame: InOut, type: string) : Promise<DataObject>
    #getNodeData<T>(dataObject: DataObject, defaultData: T) : Promise<any>
    #setNodeData(dataObject: DataObject, data: any) : Promise<NodeData>
}
"BKFilterNode<InOut>" <|- - "RelativePositionFilter<InOut, R>"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 16:46:50 UTC 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>