<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1342px" preserveAspectRatio="none" style="width:707px;height:1342px;background:#00000000;" version="1.1" viewBox="0 0 707 1342" width="707px" zoomAndPan="magnify"><defs><filter height="300%" id="feo80d6leq4dq" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[82a64caa9ea03dece7f2eb2529d2496d]
class MemoryDataService<I, T>--><rect codeLine="4" fill="#FEFECE" filter="url(#feo80d6leq4dq)" height="637.0156" id="MemoryDataService&lt;I, T&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="9" y="691"/><ellipse cx="266.25" cy="707" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M269.2188,712.6406 Q268.6406,712.9375 268,713.0781 Q267.3594,713.2344 266.6563,713.2344 Q264.1563,713.2344 262.8281,711.5938 Q261.5156,709.9375 261.5156,706.8125 Q261.5156,703.6875 262.8281,702.0313 Q264.1563,700.375 266.6563,700.375 Q267.3594,700.375 268,700.5313 Q268.6563,700.6875 269.2188,700.9844 L269.2188,703.7031 Q268.5938,703.125 268,702.8594 Q267.4063,702.5781 266.7813,702.5781 Q265.4375,702.5781 264.75,703.6563 Q264.0625,704.7188 264.0625,706.8125 Q264.0625,708.9063 264.75,709.9844 Q265.4375,711.0469 266.7813,711.0469 Q267.4063,711.0469 268,710.7813 Q268.5938,710.5 269.2188,709.9219 L269.2188,712.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="161" x="286.75" y="711.1543">MemoryDataService&lt;I, T&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="723" y2="723"/><ellipse cx="20" cy="734" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="29" y="737.2104">captureRejections : boolean</text><ellipse cx="20" cy="746.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="29" y="750.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="20" cy="759.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="29" y="762.8198">dataType : Constructor&lt;T&gt;</text><ellipse cx="20" cy="772.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="29" y="775.6245">defaultMaxListeners : number</text><ellipse cx="20" cy="785.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="29" y="788.4292">errorMonitor : typeof errorMonitor</text><ellipse cx="20" cy="798.0234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="29" y="801.2339">logger : Function</text><ellipse cx="20" cy="810.8281" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="29" y="814.0386">model : any</text><ellipse cx="20" cy="823.6328" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="29" y="826.8433">uid : string</text><polygon fill="none" points="20,831.4375,24,835.4375,20,839.4375,16,835.4375" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="191" x="29" y="839.6479">options : DataServiceOptions&lt;T&gt;</text><polygon fill="none" points="20,844.2422,24,848.2422,20,852.2422,16,848.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="115" x="29" y="852.4526">_data : Map&lt;I, any&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="859.0469" y2="859.0469"/><ellipse cx="20" cy="870.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="500" x="29" y="873.2573">addListener(eventName: string | symbol, listener: Function) : MemoryDataService&lt;I, T&gt;</text><ellipse cx="20" cy="882.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="29" y="886.062">count(filter: FilterQuery&lt;T&gt;) : Promise&lt;number&gt;</text><ellipse cx="20" cy="895.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="29" y="898.8667">delete(id: I) : Promise&lt;void&gt;</text><ellipse cx="20" cy="908.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="277" x="29" y="911.6714">deleteAll(filter: FilterQuery&lt;T&gt;) : Promise&lt;void&gt;</text><ellipse cx="20" cy="921.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="29" y="924.4761">emit(name: string | symbol, args: any[]) : boolean</text><ellipse cx="20" cy="934.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="29" y="937.2808">emit(name: "ready") : boolean</text><ellipse cx="20" cy="946.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="29" y="950.0854">emit(name: "destroy") : boolean</text><ellipse cx="20" cy="959.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="29" y="962.8901">eventNames() : (string | symbol)[]</text><ellipse cx="20" cy="972.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="29" y="975.6948">findAll(query: FilterQuery&lt;T&gt;, options: FindOptions) : Promise&lt;T[]&gt;</text><ellipse cx="20" cy="985.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="29" y="988.4995">findByUID(uid: I) : Promise&lt;T&gt;</text><ellipse cx="20" cy="998.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="388" x="29" y="1001.3042">findOne(query: FilterQuery&lt;T&gt;, options: FindOptions) : Promise&lt;T&gt;</text><ellipse cx="20" cy="1010.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="29" y="1014.1089">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="20" cy="1023.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="29" y="1026.9136">getMaxListeners() : number</text><ellipse cx="20" cy="1036.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="203" x="29" y="1039.7183">insert(id: I, object: T) : Promise&lt;T&gt;</text><ellipse cx="20" cy="1049.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="29" y="1052.5229">isReady() : boolean</text><ellipse cx="20" cy="1062.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="29" y="1065.3276">listenerCount(eventName: string | symbol) : number</text><ellipse cx="20" cy="1074.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="29" y="1078.1323">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="20" cy="1087.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="29" y="1090.937">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="1100.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="448" x="29" y="1103.7417">off(eventName: string | symbol, listener: Function) : MemoryDataService&lt;I, T&gt;</text><ellipse cx="20" cy="1113.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="447" x="29" y="1116.5464">on(eventName: string | symbol, listener: Function) : MemoryDataService&lt;I, T&gt;</text><ellipse cx="20" cy="1126.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="29" y="1129.3511">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="20" cy="1138.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="428" x="29" y="1142.1558">once(name: string | symbol, listener: Function) : MemoryDataService&lt;I, T&gt;</text><ellipse cx="20" cy="1151.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="395" x="29" y="1154.9604">once(name: "destroy", listener: Function) : MemoryDataService&lt;I, T&gt;</text><ellipse cx="20" cy="1164.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="379" x="29" y="1167.7651">once(name: "build", listener: Function) : MemoryDataService&lt;I, T&gt;</text><ellipse cx="20" cy="1177.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="384" x="29" y="1180.5698">once(name: "ready", listener: Function) : MemoryDataService&lt;I, T&gt;</text><ellipse cx="20" cy="1190.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="29" y="1193.3745">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="1202.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="29" y="1206.1792">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="1215.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="526" x="29" y="1218.9839">prependListener(eventName: string | symbol, listener: Function) : MemoryDataService&lt;I, T&gt;</text><ellipse cx="20" cy="1228.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="555" x="29" y="1231.7886">prependOnceListener(eventName: string | symbol, listener: Function) : MemoryDataService&lt;I, T&gt;</text><ellipse cx="20" cy="1241.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="29" y="1244.5933">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="1254.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="403" x="29" y="1257.3979">removeAllListeners(event: string | symbol) : MemoryDataService&lt;I, T&gt;</text><ellipse cx="20" cy="1266.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="522" x="29" y="1270.2026">removeListener(eventName: string | symbol, listener: Function) : MemoryDataService&lt;I, T&gt;</text><ellipse cx="20" cy="1279.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="321" x="29" y="1283.0073">setMaxListeners(n: number) : MemoryDataService&lt;I, T&gt;</text><ellipse cx="20" cy="1292.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="29" y="1295.812">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="20" cy="1305.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="29" y="1308.6167">setUID(uid: string) : MemoryDataService&lt;I, T&gt;</text><polygon fill="#FFFF44" points="20,1313.2109,24,1317.2109,20,1321.2109,16,1317.2109" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="29" y="1321.4214">generateUUID() : string</text><!--MD5=[c76d0fce5d3661eb136e4d7eaf503103]
class DataServiceDriver<I, T>--><rect codeLine="52" fill="#FEFECE" filter="url(#feo80d6leq4dq)" height="624.2109" id="DataServiceDriver&lt;I, T&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="9" y="7"/><ellipse cx="271.75" cy="23" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M271.8594,18.3438 L270.7031,23.4219 L273.0313,23.4219 L271.8594,18.3438 Z M270.375,16.1094 L273.3594,16.1094 L276.7188,28.5 L274.2656,28.5 L273.5,25.4375 L270.2188,25.4375 L269.4688,28.5 L267.0313,28.5 L270.375,16.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="150" x="292.25" y="27.1543">DataServiceDriver&lt;I, T&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="39" y2="39"/><ellipse cx="20" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="29" y="53.2104">captureRejections : boolean</text><ellipse cx="20" cy="62.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="29" y="66.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="20" cy="75.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="29" y="78.8198">dataType : Constructor&lt;T&gt;</text><ellipse cx="20" cy="88.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="29" y="91.6245">defaultMaxListeners : number</text><ellipse cx="20" cy="101.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="29" y="104.4292">errorMonitor : typeof errorMonitor</text><ellipse cx="20" cy="114.0234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="29" y="117.2339">logger : Function</text><ellipse cx="20" cy="126.8281" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="29" y="130.0386">model : any</text><ellipse cx="20" cy="139.6328" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="29" y="142.8433">uid : string</text><polygon fill="none" points="20,147.4375,24,151.4375,20,155.4375,16,151.4375" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="191" x="29" y="155.6479">options : DataServiceOptions&lt;T&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="162.2422" y2="162.2422"/><ellipse cx="20" cy="173.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="489" x="29" y="176.4526">addListener(eventName: string | symbol, listener: Function) : DataServiceDriver&lt;I, T&gt;</text><ellipse cx="20" cy="186.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="288" x="29" y="189.2573">count(query: FilterQuery&lt;T&gt;) : Promise&lt;number&gt;</text><ellipse cx="20" cy="198.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="164" x="29" y="202.062">delete(id: I) : Promise&lt;void&gt;</text><ellipse cx="20" cy="211.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="286" x="29" y="214.8667">deleteAll(query: FilterQuery&lt;T&gt;) : Promise&lt;void&gt;</text><ellipse cx="20" cy="224.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="29" y="227.6714">emit(name: string | symbol, args: any[]) : boolean</text><ellipse cx="20" cy="237.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="29" y="240.4761">emit(name: "ready") : boolean</text><ellipse cx="20" cy="250.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="29" y="253.2808">emit(name: "destroy") : boolean</text><ellipse cx="20" cy="262.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="29" y="266.0854">eventNames() : (string | symbol)[]</text><ellipse cx="20" cy="275.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="386" x="29" y="278.8901">findAll(query: FilterQuery&lt;T&gt;, options: FindOptions) : Promise&lt;T[]&gt;</text><ellipse cx="20" cy="288.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="167" x="29" y="291.6948">findByUID(id: I) : Promise&lt;T&gt;</text><ellipse cx="20" cy="301.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="387" x="29" y="304.4995">findOne(query: FilterQuery&lt;T&gt;, options: FindOptions) : Promise&lt;T&gt;</text><ellipse cx="20" cy="314.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="29" y="317.3042">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="20" cy="326.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="29" y="330.1089">getMaxListeners() : number</text><ellipse cx="20" cy="339.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="201" x="29" y="342.9136">insert(id: I, object: T) : Promise&lt;T&gt;</text><ellipse cx="20" cy="352.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="29" y="355.7183">isReady() : boolean</text><ellipse cx="20" cy="365.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="29" y="368.5229">listenerCount(eventName: string | symbol) : number</text><ellipse cx="20" cy="378.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="29" y="381.3276">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="20" cy="390.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="29" y="394.1323">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="403.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="437" x="29" y="406.937">off(eventName: string | symbol, listener: Function) : DataServiceDriver&lt;I, T&gt;</text><ellipse cx="20" cy="416.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="436" x="29" y="419.7417">on(eventName: string | symbol, listener: Function) : DataServiceDriver&lt;I, T&gt;</text><ellipse cx="20" cy="429.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="29" y="432.5464">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="20" cy="442.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="417" x="29" y="445.3511">once(name: string | symbol, listener: Function) : DataServiceDriver&lt;I, T&gt;</text><ellipse cx="20" cy="454.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="384" x="29" y="458.1558">once(name: "destroy", listener: Function) : DataServiceDriver&lt;I, T&gt;</text><ellipse cx="20" cy="467.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="368" x="29" y="470.9604">once(name: "build", listener: Function) : DataServiceDriver&lt;I, T&gt;</text><ellipse cx="20" cy="480.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="373" x="29" y="483.7651">once(name: "ready", listener: Function) : DataServiceDriver&lt;I, T&gt;</text><ellipse cx="20" cy="493.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="29" y="496.5698">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="506.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="29" y="509.3745">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="518.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="515" x="29" y="522.1792">prependListener(eventName: string | symbol, listener: Function) : DataServiceDriver&lt;I, T&gt;</text><ellipse cx="20" cy="531.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="544" x="29" y="534.9839">prependOnceListener(eventName: string | symbol, listener: Function) : DataServiceDriver&lt;I, T&gt;</text><ellipse cx="20" cy="544.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="29" y="547.7886">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="557.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="392" x="29" y="560.5933">removeAllListeners(event: string | symbol) : DataServiceDriver&lt;I, T&gt;</text><ellipse cx="20" cy="570.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="511" x="29" y="573.3979">removeListener(eventName: string | symbol, listener: Function) : DataServiceDriver&lt;I, T&gt;</text><ellipse cx="20" cy="582.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="29" y="586.2026">setMaxListeners(n: number) : DataServiceDriver&lt;I, T&gt;</text><ellipse cx="20" cy="595.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="29" y="599.0073">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="20" cy="608.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="29" y="611.812">setUID(uid: string) : DataServiceDriver&lt;I, T&gt;</text><polygon fill="#FFFF44" points="20,616.4063,24,620.4063,20,624.4063,16,620.4063" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="29" y="624.6167">generateUUID() : string</text><!--MD5=[2cf44a30e36fa772474fc10d0c274669]
reverse link DataServiceDriver<I, T> to MemoryDataService<I, T>--><path codeLine="99" d="M351,651.08 C351,664.32 351,677.58 351,690.79 " fill="none" id="DataServiceDriver&lt;I, T&gt;-backto-MemoryDataService&lt;I, T&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="344,651.01,351,631.01,358,651.01,344,651.01" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[f45f2f0446a175f58c7ce91cd5e5db2a]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "MemoryDataService<I, T>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    +dataType : Constructor<T>
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +logger : Function
    +model : any
    +uid : string
    #options : DataServiceOptions<T>
    #_data : Map<I, any>
    +addListener(eventName: string | symbol, listener: Function) : MemoryDataService<I, T>
    +count(filter: FilterQuery<T>) : Promise<number>
    +delete(id: I) : Promise<void>
    +deleteAll(filter: FilterQuery<T>) : Promise<void>
    +emit(name: string | symbol, args: any[]) : boolean
    +emit(name: "ready") : boolean
    +emit(name: "destroy") : boolean
    +eventNames() : (string | symbol)[]
    +findAll(query: FilterQuery<T>, options: FindOptions) : Promise<T[]>
    +findByUID(uid: I) : Promise<T>
    +findOne(query: FilterQuery<T>, options: FindOptions) : Promise<T>
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +insert(id: I, object: T) : Promise<T>
    +isReady() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : MemoryDataService<I, T>
    +on(eventName: string | symbol, listener: Function) : MemoryDataService<I, T>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(name: string | symbol, listener: Function) : MemoryDataService<I, T>
    +once(name: "destroy", listener: Function) : MemoryDataService<I, T>
    +once(name: "build", listener: Function) : MemoryDataService<I, T>
    +once(name: "ready", listener: Function) : MemoryDataService<I, T>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : MemoryDataService<I, T>
    +prependOnceListener(eventName: string | symbol, listener: Function) : MemoryDataService<I, T>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : MemoryDataService<I, T>
    +removeListener(eventName: string | symbol, listener: Function) : MemoryDataService<I, T>
    +setMaxListeners(n: number) : MemoryDataService<I, T>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setUID(uid: string) : MemoryDataService<I, T>
    #generateUUID() : string
}
abstract class "DataServiceDriver<I, T>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    +dataType : Constructor<T>
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +logger : Function
    +model : any
    +uid : string
    #options : DataServiceOptions<T>
    +addListener(eventName: string | symbol, listener: Function) : DataServiceDriver<I, T>
    {abstract} +count(query: FilterQuery<T>) : Promise<number>
    {abstract} +delete(id: I) : Promise<void>
    {abstract} +deleteAll(query: FilterQuery<T>) : Promise<void>
    +emit(name: string | symbol, args: any[]) : boolean
    +emit(name: "ready") : boolean
    +emit(name: "destroy") : boolean
    +eventNames() : (string | symbol)[]
    {abstract} +findAll(query: FilterQuery<T>, options: FindOptions) : Promise<T[]>
    {abstract} +findByUID(id: I) : Promise<T>
    {abstract} +findOne(query: FilterQuery<T>, options: FindOptions) : Promise<T>
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {abstract} +insert(id: I, object: T) : Promise<T>
    +isReady() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : DataServiceDriver<I, T>
    +on(eventName: string | symbol, listener: Function) : DataServiceDriver<I, T>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(name: string | symbol, listener: Function) : DataServiceDriver<I, T>
    +once(name: "destroy", listener: Function) : DataServiceDriver<I, T>
    +once(name: "build", listener: Function) : DataServiceDriver<I, T>
    +once(name: "ready", listener: Function) : DataServiceDriver<I, T>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : DataServiceDriver<I, T>
    +prependOnceListener(eventName: string | symbol, listener: Function) : DataServiceDriver<I, T>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : DataServiceDriver<I, T>
    +removeListener(eventName: string | symbol, listener: Function) : DataServiceDriver<I, T>
    +setMaxListeners(n: number) : DataServiceDriver<I, T>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setUID(uid: string) : DataServiceDriver<I, T>
    #generateUUID() : string
}
"DataServiceDriver<I, T>" <|- - "MemoryDataService<I, T>"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 16:46:50 UTC 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>