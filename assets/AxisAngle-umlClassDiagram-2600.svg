<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2289px" preserveAspectRatio="none" style="width:618px;height:2289px;background:#00000000;" version="1.1" viewBox="0 0 618 2289" width="618px" zoomAndPan="magnify"><defs><filter height="300%" id="f1a5lj5i52rg38" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[711dce01fb2039d6d69a4789d3536fbd]
class AxisAngle--><rect codeLine="4" fill="#FEFECE" filter="url(#f1a5lj5i52rg38)" height="1123.5938" id="AxisAngle" style="stroke:#A80036;stroke-width:1.5;" width="597" x="7" y="1152"/><ellipse cx="271.75" cy="1168" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M274.7188,1173.6406 Q274.1406,1173.9375 273.5,1174.0781 Q272.8594,1174.2344 272.1563,1174.2344 Q269.6563,1174.2344 268.3281,1172.5938 Q267.0156,1170.9375 267.0156,1167.8125 Q267.0156,1164.6875 268.3281,1163.0313 Q269.6563,1161.375 272.1563,1161.375 Q272.8594,1161.375 273.5,1161.5313 Q274.1563,1161.6875 274.7188,1161.9844 L274.7188,1164.7031 Q274.0938,1164.125 273.5,1163.8594 Q272.9063,1163.5781 272.2813,1163.5781 Q270.9375,1163.5781 270.25,1164.6563 Q269.5625,1165.7188 269.5625,1167.8125 Q269.5625,1169.9063 270.25,1170.9844 Q270.9375,1172.0469 272.2813,1172.0469 Q272.9063,1172.0469 273.5,1171.7813 Q274.0938,1171.5 274.7188,1170.9219 L274.7188,1173.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="59" x="292.25" y="1172.1543">AxisAngle</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="603" y1="1184" y2="1184"/><ellipse cx="18" cy="1195" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="87" x="27" y="1198.2104">angle : number</text><ellipse cx="18" cy="1207.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="27" y="1211.0151">isVector3 : true</text><ellipse cx="18" cy="1220.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="27" y="1223.8198">x : number</text><ellipse cx="18" cy="1233.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="27" y="1236.6245">y : number</text><ellipse cx="18" cy="1246.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="61" x="27" y="1249.4292">z : number</text><line style="stroke:#A80036;stroke-width:1.5;" x1="8" x2="603" y1="1256.0234" y2="1256.0234"/><ellipse cx="18" cy="1267.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="152" x="27" y="1270.2339">add(v: Vector3) : AxisAngle</text><ellipse cx="18" cy="1279.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="27" y="1283.0386">addScalar(s: number) : AxisAngle</text><ellipse cx="18" cy="1292.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="293" x="27" y="1295.8433">addScaledVector(v: Vector3, s: number) : AxisAngle</text><ellipse cx="18" cy="1305.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="27" y="1308.6479">addVectors(a: Vector3, b: Vector3) : AxisAngle</text><ellipse cx="18" cy="1318.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="27" y="1321.4526">angleTo(v: Vector3) : number</text><ellipse cx="18" cy="1331.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="27" y="1334.2573">applyAxisAngle(axis: Vector3, angle: number) : AxisAngle</text><ellipse cx="18" cy="1343.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="199" x="27" y="1347.062">applyEuler(euler: Euler) : AxisAngle</text><ellipse cx="18" cy="1356.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="27" y="1359.8667">applyMatrix3(m: Matrix3) : AxisAngle</text><ellipse cx="18" cy="1369.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="205" x="27" y="1372.6714">applyMatrix4(m: Matrix4) : AxisAngle</text><ellipse cx="18" cy="1382.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="239" x="27" y="1385.4761">applyNormalMatrix(m: Matrix3) : AxisAngle</text><ellipse cx="18" cy="1395.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="27" y="1398.2808">applyQuaternion(q: Quaternion) : AxisAngle</text><ellipse cx="18" cy="1407.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="93" x="27" y="1411.0854">ceil() : AxisAngle</text><ellipse cx="18" cy="1420.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="27" y="1423.8901">clamp(min: Vector3, max: Vector3) : AxisAngle</text><ellipse cx="18" cy="1433.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="27" y="1436.6948">clampLength(min: number, max: number) : AxisAngle</text><ellipse cx="18" cy="1446.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="27" y="1449.4995">clampScalar(min: number, max: number) : AxisAngle</text><ellipse cx="18" cy="1459.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="27" y="1462.3042">clone() : AxisAngle</text><ellipse cx="18" cy="1471.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="27" y="1475.1089">copy(v: Vector3) : AxisAngle</text><ellipse cx="18" cy="1484.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="27" y="1487.9136">cross(a: Vector3) : AxisAngle</text><ellipse cx="18" cy="1497.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="273" x="27" y="1500.7183">crossVectors(a: Vector3, b: Vector3) : AxisAngle</text><ellipse cx="18" cy="1510.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="27" y="1513.5229">distanceTo(v: Vector3) : number</text><ellipse cx="18" cy="1523.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="242" x="27" y="1526.3276">distanceToManhattan(v: Vector3) : number</text><ellipse cx="18" cy="1535.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="27" y="1539.1323">distanceToSquared(v: Vector3) : number</text><ellipse cx="18" cy="1548.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="27" y="1551.937">divide(v: Vector3) : AxisAngle</text><ellipse cx="18" cy="1561.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="202" x="27" y="1564.7417">divideScalar(s: number) : AxisAngle</text><ellipse cx="18" cy="1574.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="27" y="1577.5464">dot(v: Vector3) : number</text><ellipse cx="18" cy="1587.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="160" x="27" y="1590.3511">equals(v: Vector3) : boolean</text><ellipse cx="18" cy="1599.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="100" x="27" y="1603.1558">floor() : AxisAngle</text><ellipse cx="18" cy="1612.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="440" x="27" y="1615.9604">fromArray(array: number[] | ArrayLike&lt;number&gt;, offset: number) : AxisAngle</text><ellipse cx="18" cy="1625.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="27" y="1628.7651">fromArray(array: number[]) : Vector3</text><ellipse cx="18" cy="1638.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="571" x="27" y="1641.5698">fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : AxisAngle</text><ellipse cx="18" cy="1651.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="260" x="27" y="1654.3745">fromQuaternion(quat: Quaternion) : AxisAngle</text><ellipse cx="18" cy="1663.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="229" x="27" y="1667.1792">getComponent(index: number) : number</text><ellipse cx="18" cy="1676.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="27" y="1679.9839">length() : number</text><ellipse cx="18" cy="1689.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="27" y="1692.7886">lengthManhattan() : number</text><ellipse cx="18" cy="1702.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="27" y="1705.5933">lengthSq() : number</text><ellipse cx="18" cy="1715.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="27" y="1718.3979">lerp(v: Vector3, alpha: number) : AxisAngle</text><ellipse cx="18" cy="1727.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="366" x="27" y="1731.2026">lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : AxisAngle</text><ellipse cx="18" cy="1740.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="27" y="1744.0073">manhattanDistanceTo(v: Vector3) : number</text><ellipse cx="18" cy="1753.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="27" y="1756.812">manhattanLength() : number</text><ellipse cx="18" cy="1766.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="27" y="1769.6167">max(v: Vector3) : AxisAngle</text><ellipse cx="18" cy="1779.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="152" x="27" y="1782.4214">min(v: Vector3) : AxisAngle</text><ellipse cx="18" cy="1792.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="175" x="27" y="1795.2261">multiply(v: Vector3) : AxisAngle</text><ellipse cx="18" cy="1804.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="27" y="1808.0308">multiplyScalar(s: number) : AxisAngle</text><ellipse cx="18" cy="1817.625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="285" x="27" y="1820.8354">multiplyVectors(a: Vector3, b: Vector3) : AxisAngle</text><ellipse cx="18" cy="1830.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="113" x="27" y="1833.6401">negate() : AxisAngle</text><ellipse cx="18" cy="1843.2344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="129" x="27" y="1846.4448">normalize() : AxisAngle</text><ellipse cx="18" cy="1856.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="209" x="27" y="1859.2495">project(camera: Camera) : AxisAngle</text><ellipse cx="18" cy="1868.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="27" y="1872.0542">projectOnPlane(planeNormal: Vector3) : AxisAngle</text><ellipse cx="18" cy="1881.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="222" x="27" y="1884.8589">projectOnVector(v: Vector3) : AxisAngle</text><ellipse cx="18" cy="1894.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="27" y="1897.6636">random() : AxisAngle</text><ellipse cx="18" cy="1907.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="168" x="27" y="1910.4683">randomDirection() : AxisAngle</text><ellipse cx="18" cy="1920.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="196" x="27" y="1923.2729">reflect(vector: Vector3) : AxisAngle</text><ellipse cx="18" cy="1932.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="27" y="1936.0776">round() : AxisAngle</text><ellipse cx="18" cy="1945.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="149" x="27" y="1948.8823">roundToZero() : AxisAngle</text><ellipse cx="18" cy="1958.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="27" y="1961.687">set(x: number, y: number, z: number) : AxisAngle</text><ellipse cx="18" cy="1971.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="329" x="27" y="1974.4917">setComponent(index: number, value: number) : AxisAngle</text><ellipse cx="18" cy="1984.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="252" x="27" y="1987.2964">setFromCylindrical(s: Cylindrical) : AxisAngle</text><ellipse cx="18" cy="1996.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="463" x="27" y="2000.1011">setFromCylindricalCoords(radius: number, theta: number, y: number) : AxisAngle</text><ellipse cx="18" cy="2009.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="27" y="2012.9058">setFromEuler(e: Euler) : AxisAngle</text><ellipse cx="18" cy="2022.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="380" x="27" y="2025.7104">setFromMatrix3Column(matrix: Matrix3, index: number) : AxisAngle</text><ellipse cx="18" cy="2035.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="373" x="27" y="2038.5151">setFromMatrixColumn(matrix: Matrix4, index: number) : AxisAngle</text><ellipse cx="18" cy="2048.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="260" x="27" y="2051.3198">setFromMatrixPosition(m: Matrix4) : AxisAngle</text><ellipse cx="18" cy="2060.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="246" x="27" y="2064.1245">setFromMatrixScale(m: Matrix4) : AxisAngle</text><ellipse cx="18" cy="2073.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="242" x="27" y="2076.9292">setFromSpherical(s: Spherical) : AxisAngle</text><ellipse cx="18" cy="2086.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="438" x="27" y="2089.7339">setFromSphericalCoords(r: number, phi: number, theta: number) : AxisAngle</text><ellipse cx="18" cy="2099.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="185" x="27" y="2102.5386">setLength(l: number) : AxisAngle</text><ellipse cx="18" cy="2112.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="215" x="27" y="2115.3433">setScalar(scalar: number) : AxisAngle</text><ellipse cx="18" cy="2124.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="27" y="2128.1479">setX(x: number) : Vector3</text><ellipse cx="18" cy="2137.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="27" y="2140.9526">setY(y: number) : Vector3</text><ellipse cx="18" cy="2150.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="27" y="2153.7573">setZ(z: number) : Vector3</text><ellipse cx="18" cy="2163.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="153" x="27" y="2166.562">sub(a: Vector3) : AxisAngle</text><ellipse cx="18" cy="2176.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="190" x="27" y="2179.3667">subScalar(s: number) : AxisAngle</text><ellipse cx="18" cy="2188.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="27" y="2192.1714">subVectors(a: Vector3, b: Vector3) : AxisAngle</text><ellipse cx="18" cy="2201.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="27" y="2204.9761">toArray(array: number[], offset: number) : number[]</text><ellipse cx="18" cy="2214.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="27" y="2217.7808">toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple</text><ellipse cx="18" cy="2227.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="420" x="27" y="2230.5854">toArray(array: ArrayLike&lt;number&gt;, offset: number) : ArrayLike&lt;number&gt;</text><ellipse cx="18" cy="2240.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="152" x="27" y="2243.3901">toRotationMatrix() : Matrix4</text><ellipse cx="18" cy="2252.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="241" x="27" y="2256.1948">transformDirection(m: Matrix4) : AxisAngle</text><ellipse cx="18" cy="2265.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="223" x="27" y="2268.9995">unproject(camera: Camera) : AxisAngle</text><!--MD5=[65d619c042c23702cef2ca07d67b1cf6]
class Vector3--><rect codeLine="90" fill="#FEFECE" filter="url(#f1a5lj5i52rg38)" height="1085.1797" id="Vector3" style="stroke:#A80036;stroke-width:1.5;" width="586" x="12.5" y="7"/><ellipse cx="276.75" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M279.7188,28.6406 Q279.1406,28.9375 278.5,29.0781 Q277.8594,29.2344 277.1563,29.2344 Q274.6563,29.2344 273.3281,27.5938 Q272.0156,25.9375 272.0156,22.8125 Q272.0156,19.6875 273.3281,18.0313 Q274.6563,16.375 277.1563,16.375 Q277.8594,16.375 278.5,16.5313 Q279.1563,16.6875 279.7188,16.9844 L279.7188,19.7031 Q279.0938,19.125 278.5,18.8594 Q277.9063,18.5781 277.2813,18.5781 Q275.9375,18.5781 275.25,19.6563 Q274.5625,20.7188 274.5625,22.8125 Q274.5625,24.9063 275.25,25.9844 Q275.9375,27.0469 277.2813,27.0469 Q277.9063,27.0469 278.5,26.7813 Q279.0938,26.5 279.7188,25.9219 L279.7188,28.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="49" x="297.25" y="27.1543">Vector3</text><line style="stroke:#A80036;stroke-width:1.5;" x1="13.5" x2="597.5" y1="39" y2="39"/><ellipse cx="23.5" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="88" x="32.5" y="53.2104">isVector3 : true</text><ellipse cx="23.5" cy="62.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="32.5" y="66.0151">x : number</text><ellipse cx="23.5" cy="75.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="32.5" y="78.8198">y : number</text><ellipse cx="23.5" cy="88.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="61" x="32.5" y="91.6245">z : number</text><line style="stroke:#A80036;stroke-width:1.5;" x1="13.5" x2="597.5" y1="98.2188" y2="98.2188"/><ellipse cx="23.5" cy="109.2188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="141" x="32.5" y="112.4292">add(v: Vector3) : Vector3</text><ellipse cx="23.5" cy="122.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="32.5" y="125.2339">addScalar(s: number) : Vector3</text><ellipse cx="23.5" cy="134.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="282" x="32.5" y="138.0386">addScaledVector(v: Vector3, s: number) : Vector3</text><ellipse cx="23.5" cy="147.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="32.5" y="150.8433">addVectors(a: Vector3, b: Vector3) : Vector3</text><ellipse cx="23.5" cy="160.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="166" x="32.5" y="163.6479">angleTo(v: Vector3) : number</text><ellipse cx="23.5" cy="173.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="312" x="32.5" y="176.4526">applyAxisAngle(axis: Vector3, angle: number) : Vector3</text><ellipse cx="23.5" cy="186.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="188" x="32.5" y="189.2573">applyEuler(euler: Euler) : Vector3</text><ellipse cx="23.5" cy="198.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="32.5" y="202.062">applyMatrix3(m: Matrix3) : Vector3</text><ellipse cx="23.5" cy="211.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="32.5" y="214.8667">applyMatrix4(m: Matrix4) : Vector3</text><ellipse cx="23.5" cy="224.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="228" x="32.5" y="227.6714">applyNormalMatrix(m: Matrix3) : Vector3</text><ellipse cx="23.5" cy="237.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="234" x="32.5" y="240.4761">applyQuaternion(q: Quaternion) : Vector3</text><ellipse cx="23.5" cy="250.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="82" x="32.5" y="253.2808">ceil() : Vector3</text><ellipse cx="23.5" cy="262.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="252" x="32.5" y="266.0854">clamp(min: Vector3, max: Vector3) : Vector3</text><ellipse cx="23.5" cy="275.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="292" x="32.5" y="278.8901">clampLength(min: number, max: number) : Vector3</text><ellipse cx="23.5" cy="288.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="290" x="32.5" y="291.6948">clampScalar(min: number, max: number) : Vector3</text><ellipse cx="23.5" cy="301.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="93" x="32.5" y="304.4995">clone() : Vector3</text><ellipse cx="23.5" cy="314.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="32.5" y="317.3042">copy(v: Vector3) : Vector3</text><ellipse cx="23.5" cy="326.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="153" x="32.5" y="330.1089">cross(a: Vector3) : Vector3</text><ellipse cx="23.5" cy="339.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="32.5" y="342.9136">crossVectors(a: Vector3, b: Vector3) : Vector3</text><ellipse cx="23.5" cy="352.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="32.5" y="355.7183">distanceTo(v: Vector3) : number</text><ellipse cx="23.5" cy="365.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="242" x="32.5" y="368.5229">distanceToManhattan(v: Vector3) : number</text><ellipse cx="23.5" cy="378.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="32.5" y="381.3276">distanceToSquared(v: Vector3) : number</text><ellipse cx="23.5" cy="390.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="153" x="32.5" y="394.1323">divide(v: Vector3) : Vector3</text><ellipse cx="23.5" cy="403.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="191" x="32.5" y="406.937">divideScalar(s: number) : Vector3</text><ellipse cx="23.5" cy="416.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="32.5" y="419.7417">dot(v: Vector3) : number</text><ellipse cx="23.5" cy="429.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="160" x="32.5" y="432.5464">equals(v: Vector3) : boolean</text><ellipse cx="23.5" cy="442.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="89" x="32.5" y="445.3511">floor() : Vector3</text><ellipse cx="23.5" cy="454.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="429" x="32.5" y="458.1558">fromArray(array: number[] | ArrayLike&lt;number&gt;, offset: number) : Vector3</text><ellipse cx="23.5" cy="467.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="210" x="32.5" y="470.9604">fromArray(array: number[]) : Vector3</text><ellipse cx="23.5" cy="480.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="560" x="32.5" y="483.7651">fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : Vector3</text><ellipse cx="23.5" cy="493.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="229" x="32.5" y="496.5698">getComponent(index: number) : number</text><ellipse cx="23.5" cy="506.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="99" x="32.5" y="509.3745">length() : number</text><ellipse cx="23.5" cy="518.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="158" x="32.5" y="522.1792">lengthManhattan() : number</text><ellipse cx="23.5" cy="531.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="114" x="32.5" y="534.9839">lengthSq() : number</text><ellipse cx="23.5" cy="544.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="32.5" y="547.7886">lerp(v: Vector3, alpha: number) : Vector3</text><ellipse cx="23.5" cy="557.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="355" x="32.5" y="560.5933">lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : Vector3</text><ellipse cx="23.5" cy="570.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="245" x="32.5" y="573.3979">manhattanDistanceTo(v: Vector3) : number</text><ellipse cx="23.5" cy="582.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="163" x="32.5" y="586.2026">manhattanLength() : number</text><ellipse cx="23.5" cy="595.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="144" x="32.5" y="599.0073">max(v: Vector3) : Vector3</text><ellipse cx="23.5" cy="608.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="141" x="32.5" y="611.812">min(v: Vector3) : Vector3</text><ellipse cx="23.5" cy="621.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="32.5" y="624.6167">multiply(v: Vector3) : Vector3</text><ellipse cx="23.5" cy="634.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="202" x="32.5" y="637.4214">multiplyScalar(s: number) : Vector3</text><ellipse cx="23.5" cy="647.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="274" x="32.5" y="650.2261">multiplyVectors(a: Vector3, b: Vector3) : Vector3</text><ellipse cx="23.5" cy="659.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="102" x="32.5" y="663.0308">negate() : Vector3</text><ellipse cx="23.5" cy="672.625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="118" x="32.5" y="675.8354">normalize() : Vector3</text><ellipse cx="23.5" cy="685.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="198" x="32.5" y="688.6401">project(camera: Camera) : Vector3</text><ellipse cx="23.5" cy="698.2344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="272" x="32.5" y="701.4448">projectOnPlane(planeNormal: Vector3) : Vector3</text><ellipse cx="23.5" cy="711.0391" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="211" x="32.5" y="714.2495">projectOnVector(v: Vector3) : Vector3</text><ellipse cx="23.5" cy="723.8438" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="107" x="32.5" y="727.0542">random() : Vector3</text><ellipse cx="23.5" cy="736.6484" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="32.5" y="739.8589">randomDirection() : Vector3</text><ellipse cx="23.5" cy="749.4531" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="185" x="32.5" y="752.6636">reflect(vector: Vector3) : Vector3</text><ellipse cx="23.5" cy="762.2578" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="32.5" y="765.4683">round() : Vector3</text><ellipse cx="23.5" cy="775.0625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="138" x="32.5" y="778.2729">roundToZero() : Vector3</text><ellipse cx="23.5" cy="787.8672" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="270" x="32.5" y="791.0776">set(x: number, y: number, z: number) : Vector3</text><ellipse cx="23.5" cy="800.6719" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="32.5" y="803.8823">setComponent(index: number, value: number) : Vector3</text><ellipse cx="23.5" cy="813.4766" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="241" x="32.5" y="816.687">setFromCylindrical(s: Cylindrical) : Vector3</text><ellipse cx="23.5" cy="826.2813" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="452" x="32.5" y="829.4917">setFromCylindricalCoords(radius: number, theta: number, y: number) : Vector3</text><ellipse cx="23.5" cy="839.0859" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="32.5" y="842.2964">setFromEuler(e: Euler) : Vector3</text><ellipse cx="23.5" cy="851.8906" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="369" x="32.5" y="855.1011">setFromMatrix3Column(matrix: Matrix3, index: number) : Vector3</text><ellipse cx="23.5" cy="864.6953" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="362" x="32.5" y="867.9058">setFromMatrixColumn(matrix: Matrix4, index: number) : Vector3</text><ellipse cx="23.5" cy="877.5" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="249" x="32.5" y="880.7104">setFromMatrixPosition(m: Matrix4) : Vector3</text><ellipse cx="23.5" cy="890.3047" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="235" x="32.5" y="893.5151">setFromMatrixScale(m: Matrix4) : Vector3</text><ellipse cx="23.5" cy="903.1094" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="231" x="32.5" y="906.3198">setFromSpherical(s: Spherical) : Vector3</text><ellipse cx="23.5" cy="915.9141" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="427" x="32.5" y="919.1245">setFromSphericalCoords(r: number, phi: number, theta: number) : Vector3</text><ellipse cx="23.5" cy="928.7188" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="32.5" y="931.9292">setLength(l: number) : Vector3</text><ellipse cx="23.5" cy="941.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="204" x="32.5" y="944.7339">setScalar(scalar: number) : Vector3</text><ellipse cx="23.5" cy="954.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="32.5" y="957.5386">setX(x: number) : Vector3</text><ellipse cx="23.5" cy="967.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="146" x="32.5" y="970.3433">setY(y: number) : Vector3</text><ellipse cx="23.5" cy="979.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="147" x="32.5" y="983.1479">setZ(z: number) : Vector3</text><ellipse cx="23.5" cy="992.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="142" x="32.5" y="995.9526">sub(a: Vector3) : Vector3</text><ellipse cx="23.5" cy="1005.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="179" x="32.5" y="1008.7573">subScalar(s: number) : Vector3</text><ellipse cx="23.5" cy="1018.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="251" x="32.5" y="1021.562">subVectors(a: Vector3, b: Vector3) : Vector3</text><ellipse cx="23.5" cy="1031.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="32.5" y="1034.3667">toArray(array: number[], offset: number) : number[]</text><ellipse cx="23.5" cy="1043.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="303" x="32.5" y="1047.1714">toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple</text><ellipse cx="23.5" cy="1056.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="420" x="32.5" y="1059.9761">toArray(array: ArrayLike&lt;number&gt;, offset: number) : ArrayLike&lt;number&gt;</text><ellipse cx="23.5" cy="1069.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="230" x="32.5" y="1072.7808">transformDirection(m: Matrix4) : Vector3</text><ellipse cx="23.5" cy="1082.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="212" x="32.5" y="1085.5854">unproject(camera: Camera) : Vector3</text><!--MD5=[e77900dd4bfec049c96cade9812025c0]
reverse link Vector3 to AxisAngle--><path codeLine="173" d="M305.5,1112.2 C305.5,1125.39 305.5,1138.6 305.5,1151.79 " fill="none" id="Vector3-backto-AxisAngle" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="298.5,1112.19,305.5,1092.19,312.5,1112.19,298.5,1112.19" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[ea6da6bd6517dfacb3f4738f33da9a72]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "AxisAngle" {
    +angle : number
    +isVector3 : true
    +x : number
    +y : number
    +z : number
    +add(v: Vector3) : AxisAngle
    +addScalar(s: number) : AxisAngle
    +addScaledVector(v: Vector3, s: number) : AxisAngle
    +addVectors(a: Vector3, b: Vector3) : AxisAngle
    +angleTo(v: Vector3) : number
    +applyAxisAngle(axis: Vector3, angle: number) : AxisAngle
    +applyEuler(euler: Euler) : AxisAngle
    +applyMatrix3(m: Matrix3) : AxisAngle
    +applyMatrix4(m: Matrix4) : AxisAngle
    +applyNormalMatrix(m: Matrix3) : AxisAngle
    +applyQuaternion(q: Quaternion) : AxisAngle
    +ceil() : AxisAngle
    +clamp(min: Vector3, max: Vector3) : AxisAngle
    +clampLength(min: number, max: number) : AxisAngle
    +clampScalar(min: number, max: number) : AxisAngle
    +clone() : AxisAngle
    +copy(v: Vector3) : AxisAngle
    +cross(a: Vector3) : AxisAngle
    +crossVectors(a: Vector3, b: Vector3) : AxisAngle
    +distanceTo(v: Vector3) : number
    +distanceToManhattan(v: Vector3) : number
    +distanceToSquared(v: Vector3) : number
    +divide(v: Vector3) : AxisAngle
    +divideScalar(s: number) : AxisAngle
    +dot(v: Vector3) : number
    +equals(v: Vector3) : boolean
    +floor() : AxisAngle
    +fromArray(array: number[] | ArrayLike<number>, offset: number) : AxisAngle
    {static} +fromArray(array: number[]) : Vector3
    +fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : AxisAngle
    {static} +fromQuaternion(quat: Quaternion) : AxisAngle
    +getComponent(index: number) : number
    +length() : number
    +lengthManhattan() : number
    +lengthSq() : number
    +lerp(v: Vector3, alpha: number) : AxisAngle
    +lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : AxisAngle
    +manhattanDistanceTo(v: Vector3) : number
    +manhattanLength() : number
    +max(v: Vector3) : AxisAngle
    +min(v: Vector3) : AxisAngle
    +multiply(v: Vector3) : AxisAngle
    +multiplyScalar(s: number) : AxisAngle
    +multiplyVectors(a: Vector3, b: Vector3) : AxisAngle
    +negate() : AxisAngle
    +normalize() : AxisAngle
    +project(camera: Camera) : AxisAngle
    +projectOnPlane(planeNormal: Vector3) : AxisAngle
    +projectOnVector(v: Vector3) : AxisAngle
    +random() : AxisAngle
    +randomDirection() : AxisAngle
    +reflect(vector: Vector3) : AxisAngle
    +round() : AxisAngle
    +roundToZero() : AxisAngle
    +set(x: number, y: number, z: number) : AxisAngle
    +setComponent(index: number, value: number) : AxisAngle
    +setFromCylindrical(s: Cylindrical) : AxisAngle
    +setFromCylindricalCoords(radius: number, theta: number, y: number) : AxisAngle
    +setFromEuler(e: Euler) : AxisAngle
    +setFromMatrix3Column(matrix: Matrix3, index: number) : AxisAngle
    +setFromMatrixColumn(matrix: Matrix4, index: number) : AxisAngle
    +setFromMatrixPosition(m: Matrix4) : AxisAngle
    +setFromMatrixScale(m: Matrix4) : AxisAngle
    +setFromSpherical(s: Spherical) : AxisAngle
    +setFromSphericalCoords(r: number, phi: number, theta: number) : AxisAngle
    +setLength(l: number) : AxisAngle
    +setScalar(scalar: number) : AxisAngle
    +setX(x: number) : Vector3
    +setY(y: number) : Vector3
    +setZ(z: number) : Vector3
    +sub(a: Vector3) : AxisAngle
    +subScalar(s: number) : AxisAngle
    +subVectors(a: Vector3, b: Vector3) : AxisAngle
    +toArray(array: number[], offset: number) : number[]
    +toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple
    +toArray(array: ArrayLike<number>, offset: number) : ArrayLike<number>
    +toRotationMatrix() : Matrix4
    +transformDirection(m: Matrix4) : AxisAngle
    +unproject(camera: Camera) : AxisAngle
}
class "Vector3" {
    +isVector3 : true
    +x : number
    +y : number
    +z : number
    +add(v: Vector3) : Vector3
    +addScalar(s: number) : Vector3
    +addScaledVector(v: Vector3, s: number) : Vector3
    +addVectors(a: Vector3, b: Vector3) : Vector3
    +angleTo(v: Vector3) : number
    +applyAxisAngle(axis: Vector3, angle: number) : Vector3
    +applyEuler(euler: Euler) : Vector3
    +applyMatrix3(m: Matrix3) : Vector3
    +applyMatrix4(m: Matrix4) : Vector3
    +applyNormalMatrix(m: Matrix3) : Vector3
    +applyQuaternion(q: Quaternion) : Vector3
    +ceil() : Vector3
    +clamp(min: Vector3, max: Vector3) : Vector3
    +clampLength(min: number, max: number) : Vector3
    +clampScalar(min: number, max: number) : Vector3
    +clone() : Vector3
    +copy(v: Vector3) : Vector3
    +cross(a: Vector3) : Vector3
    +crossVectors(a: Vector3, b: Vector3) : Vector3
    +distanceTo(v: Vector3) : number
    +distanceToManhattan(v: Vector3) : number
    +distanceToSquared(v: Vector3) : number
    +divide(v: Vector3) : Vector3
    +divideScalar(s: number) : Vector3
    +dot(v: Vector3) : number
    +equals(v: Vector3) : boolean
    +floor() : Vector3
    +fromArray(array: number[] | ArrayLike<number>, offset: number) : Vector3
    {static} +fromArray(array: number[]) : Vector3
    +fromBufferAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, index: number) : Vector3
    +getComponent(index: number) : number
    +length() : number
    +lengthManhattan() : number
    +lengthSq() : number
    +lerp(v: Vector3, alpha: number) : Vector3
    +lerpVectors(v1: Vector3, v2: Vector3, alpha: number) : Vector3
    +manhattanDistanceTo(v: Vector3) : number
    +manhattanLength() : number
    +max(v: Vector3) : Vector3
    +min(v: Vector3) : Vector3
    +multiply(v: Vector3) : Vector3
    +multiplyScalar(s: number) : Vector3
    +multiplyVectors(a: Vector3, b: Vector3) : Vector3
    +negate() : Vector3
    +normalize() : Vector3
    +project(camera: Camera) : Vector3
    +projectOnPlane(planeNormal: Vector3) : Vector3
    +projectOnVector(v: Vector3) : Vector3
    +random() : Vector3
    +randomDirection() : Vector3
    +reflect(vector: Vector3) : Vector3
    +round() : Vector3
    +roundToZero() : Vector3
    +set(x: number, y: number, z: number) : Vector3
    +setComponent(index: number, value: number) : Vector3
    +setFromCylindrical(s: Cylindrical) : Vector3
    +setFromCylindricalCoords(radius: number, theta: number, y: number) : Vector3
    +setFromEuler(e: Euler) : Vector3
    +setFromMatrix3Column(matrix: Matrix3, index: number) : Vector3
    +setFromMatrixColumn(matrix: Matrix4, index: number) : Vector3
    +setFromMatrixPosition(m: Matrix4) : Vector3
    +setFromMatrixScale(m: Matrix4) : Vector3
    +setFromSpherical(s: Spherical) : Vector3
    +setFromSphericalCoords(r: number, phi: number, theta: number) : Vector3
    +setLength(l: number) : Vector3
    +setScalar(scalar: number) : Vector3
    +setX(x: number) : Vector3
    +setY(y: number) : Vector3
    +setZ(z: number) : Vector3
    +sub(a: Vector3) : Vector3
    +subScalar(s: number) : Vector3
    +subVectors(a: Vector3, b: Vector3) : Vector3
    +toArray(array: number[], offset: number) : number[]
    +toArray(array: Vector3Tuple, offset: 0) : Vector3Tuple
    +toArray(array: ArrayLike<number>, offset: number) : ArrayLike<number>
    +transformDirection(m: Matrix4) : Vector3
    +unproject(camera: Camera) : Vector3
}
"Vector3" <|- - "AxisAngle"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 16:46:50 UTC 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>