<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="932px" preserveAspectRatio="none" style="width:707px;height:932px;background:#00000000;" version="1.1" viewBox="0 0 707 932" width="707px" zoomAndPan="magnify"><defs><filter height="300%" id="f1bi839s9sxyel" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[76d7858ec695d04a5fd78a063736f1e2]
class CallbackSourceNode<Out>--><rect codeLine="4" fill="#FEFECE" filter="url(#f1bi839s9sxyel)" height="432.1406" id="CallbackSourceNode&lt;Out&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="9" y="486"/><ellipse cx="261.25" cy="502" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M264.2188,507.6406 Q263.6406,507.9375 263,508.0781 Q262.3594,508.2344 261.6563,508.2344 Q259.1563,508.2344 257.8281,506.5938 Q256.5156,504.9375 256.5156,501.8125 Q256.5156,498.6875 257.8281,497.0313 Q259.1563,495.375 261.6563,495.375 Q262.3594,495.375 263,495.5313 Q263.6563,495.6875 264.2188,495.9844 L264.2188,498.7031 Q263.5938,498.125 263,497.8594 Q262.4063,497.5781 261.7813,497.5781 Q260.4375,497.5781 259.75,498.6563 Q259.0625,499.7188 259.0625,501.8125 Q259.0625,503.9063 259.75,504.9844 Q260.4375,506.0469 261.7813,506.0469 Q262.4063,506.0469 263,505.7813 Q263.5938,505.5 264.2188,504.9219 L264.2188,507.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="171" x="281.75" y="506.1543">CallbackSourceNode&lt;Out&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="518" y2="518"/><ellipse cx="20" cy="529" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="29" y="532.2104">callback : Function</text><ellipse cx="20" cy="541.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="29" y="545.0151">captureRejections : boolean</text><ellipse cx="20" cy="554.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="29" y="557.8198">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="20" cy="567.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="29" y="570.6245">defaultMaxListeners : number</text><ellipse cx="20" cy="580.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="29" y="583.4292">errorMonitor : typeof errorMonitor</text><polygon fill="none" points="20,588.0234,24,592.0234,20,596.0234,16,592.0234" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="167" x="29" y="596.2339">options : SourceNodeOptions</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="602.8281" y2="602.8281"/><ellipse cx="20" cy="613.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="505" x="29" y="617.0386">addListener(eventName: string | symbol, listener: Function) : CallbackSourceNode&lt;Out&gt;</text><ellipse cx="20" cy="626.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="29" y="629.8433">eventNames() : (string | symbol)[]</text><ellipse cx="20" cy="639.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="29" y="642.6479">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="20" cy="652.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="29" y="655.4526">getMaxListeners() : number</text><ellipse cx="20" cy="665.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="29" y="668.2573">getOptions() : NodeOptions</text><ellipse cx="20" cy="677.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="29" y="681.062">listenerCount(eventName: string | symbol) : number</text><ellipse cx="20" cy="690.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="29" y="693.8667">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="20" cy="703.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="29" y="706.6714">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="716.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="453" x="29" y="719.4761">off(eventName: string | symbol, listener: Function) : CallbackSourceNode&lt;Out&gt;</text><ellipse cx="20" cy="729.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="29" y="732.2808">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="20" cy="741.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="29" y="745.0854">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="754.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="29" y="757.8901">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="767.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="29" y="770.6948">onPull(options: PullOptions) : Promise&lt;Out&gt;</text><ellipse cx="20" cy="780.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="531" x="29" y="783.4995">prependListener(eventName: string | symbol, listener: Function) : CallbackSourceNode&lt;Out&gt;</text><ellipse cx="20" cy="793.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="560" x="29" y="796.3042">prependOnceListener(eventName: string | symbol, listener: Function) : CallbackSourceNode&lt;Out&gt;</text><ellipse cx="20" cy="805.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="29" y="809.1089">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="818.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="408" x="29" y="821.9136">removeAllListeners(event: string | symbol) : CallbackSourceNode&lt;Out&gt;</text><ellipse cx="20" cy="831.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="527" x="29" y="834.7183">removeListener(eventName: string | symbol, listener: Function) : CallbackSourceNode&lt;Out&gt;</text><ellipse cx="20" cy="844.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="326" x="29" y="847.5229">setMaxListeners(n: number) : CallbackSourceNode&lt;Out&gt;</text><ellipse cx="20" cy="857.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="29" y="860.3276">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="20" cy="869.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="359" x="29" y="873.1323">setOptions(options: NodeOptions) : CallbackSourceNode&lt;Out&gt;</text><polygon fill="#FFFF44" points="20,877.7266,24,881.7266,20,885.7266,16,881.7266" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="324" x="29" y="885.937">mergeFrame(frame: DataFrame) : Promise&lt;DataFrame&gt;</text><polygon fill="#FFFF44" points="20,890.5313,24,894.5313,20,898.5313,16,894.5313" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="415" x="29" y="898.7417">mergeObject(newObject: DataObject, oldObject: DataObject) : DataObject</text><polygon fill="#FFFF44" points="20,903.3359,24,907.3359,20,911.3359,16,907.3359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="195" x="29" y="911.5464">registerService() : Promise&lt;void&gt;</text><!--MD5=[2651cda8e2c79eeef8da2b2f12036b47]
class SourceNode<Out>--><rect codeLine="36" fill="#FEFECE" filter="url(#f1bi839s9sxyel)" height="419.3359" id="SourceNode&lt;Out&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="9" y="7"/><ellipse cx="287.75" cy="23" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M287.8594,18.3438 L286.7031,23.4219 L289.0313,23.4219 L287.8594,18.3438 Z M286.375,16.1094 L289.3594,16.1094 L292.7188,28.5 L290.2656,28.5 L289.5,25.4375 L286.2188,25.4375 L285.4688,28.5 L283.0313,28.5 L286.375,16.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="118" x="308.25" y="27.1543">SourceNode&lt;Out&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="39" y2="39"/><ellipse cx="20" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="29" y="53.2104">captureRejections : boolean</text><ellipse cx="20" cy="62.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="29" y="66.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="20" cy="75.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="29" y="78.8198">defaultMaxListeners : number</text><ellipse cx="20" cy="88.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="29" y="91.6245">errorMonitor : typeof errorMonitor</text><polygon fill="none" points="20,96.2188,24,100.2188,20,104.2188,16,100.2188" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="167" x="29" y="104.4292">options : SourceNodeOptions</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="111.0234" y2="111.0234"/><ellipse cx="20" cy="122.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="458" x="29" y="125.2339">addListener(eventName: string | symbol, listener: Function) : SourceNode&lt;Out&gt;</text><ellipse cx="20" cy="134.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="29" y="138.0386">eventNames() : (string | symbol)[]</text><ellipse cx="20" cy="147.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="29" y="150.8433">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="20" cy="160.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="29" y="163.6479">getMaxListeners() : number</text><ellipse cx="20" cy="173.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="29" y="176.4526">getOptions() : NodeOptions</text><ellipse cx="20" cy="186.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="29" y="189.2573">listenerCount(eventName: string | symbol) : number</text><ellipse cx="20" cy="198.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="29" y="202.062">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="20" cy="211.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="29" y="214.8667">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="224.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="406" x="29" y="227.6714">off(eventName: string | symbol, listener: Function) : SourceNode&lt;Out&gt;</text><ellipse cx="20" cy="237.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="29" y="240.4761">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="20" cy="250.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="29" y="253.2808">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="262.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="29" y="266.0854">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="275.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="250" x="29" y="278.8901">onPull(options: PullOptions) : Promise&lt;Out&gt;</text><ellipse cx="20" cy="288.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="484" x="29" y="291.6948">prependListener(eventName: string | symbol, listener: Function) : SourceNode&lt;Out&gt;</text><ellipse cx="20" cy="301.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="513" x="29" y="304.4995">prependOnceListener(eventName: string | symbol, listener: Function) : SourceNode&lt;Out&gt;</text><ellipse cx="20" cy="314.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="29" y="317.3042">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="326.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="361" x="29" y="330.1089">removeAllListeners(event: string | symbol) : SourceNode&lt;Out&gt;</text><ellipse cx="20" cy="339.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="480" x="29" y="342.9136">removeListener(eventName: string | symbol, listener: Function) : SourceNode&lt;Out&gt;</text><ellipse cx="20" cy="352.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="279" x="29" y="355.7183">setMaxListeners(n: number) : SourceNode&lt;Out&gt;</text><ellipse cx="20" cy="365.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="29" y="368.5229">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="20" cy="378.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="312" x="29" y="381.3276">setOptions(options: NodeOptions) : SourceNode&lt;Out&gt;</text><polygon fill="#FFFF44" points="20,385.9219,24,389.9219,20,393.9219,16,389.9219" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="324" x="29" y="394.1323">mergeFrame(frame: DataFrame) : Promise&lt;DataFrame&gt;</text><polygon fill="#FFFF44" points="20,398.7266,24,402.7266,20,406.7266,16,402.7266" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="415" x="29" y="406.937">mergeObject(newObject: DataObject, oldObject: DataObject) : DataObject</text><polygon fill="#FFFF44" points="20,411.5313,24,415.5313,20,419.5313,16,415.5313" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="195" x="29" y="419.7417">registerService() : Promise&lt;void&gt;</text><!--MD5=[b2e348f8646fc540071e9b505426cdf5]
reverse link SourceNode<Out> to CallbackSourceNode<Out>--><path codeLine="67" d="M351,446.1 C351,459.35 351,472.65 351,485.84 " fill="none" id="SourceNode&lt;Out&gt;-backto-CallbackSourceNode&lt;Out&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="344,446.06,351,426.06,358,446.06,344,446.06" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[9f28542fc45aa2ae4f4132001975e5ec]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "CallbackSourceNode<Out>" {
    +callback : Function
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    #options : SourceNodeOptions
    +addListener(eventName: string | symbol, listener: Function) : CallbackSourceNode<Out>
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +getOptions() : NodeOptions
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : CallbackSourceNode<Out>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +onPull(options: PullOptions) : Promise<Out>
    +prependListener(eventName: string | symbol, listener: Function) : CallbackSourceNode<Out>
    +prependOnceListener(eventName: string | symbol, listener: Function) : CallbackSourceNode<Out>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : CallbackSourceNode<Out>
    +removeListener(eventName: string | symbol, listener: Function) : CallbackSourceNode<Out>
    +setMaxListeners(n: number) : CallbackSourceNode<Out>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setOptions(options: NodeOptions) : CallbackSourceNode<Out>
    #mergeFrame(frame: DataFrame) : Promise<DataFrame>
    #mergeObject(newObject: DataObject, oldObject: DataObject) : DataObject
    #registerService() : Promise<void>
}
abstract class "SourceNode<Out>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    #options : SourceNodeOptions
    +addListener(eventName: string | symbol, listener: Function) : SourceNode<Out>
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +getOptions() : NodeOptions
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : SourceNode<Out>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    {abstract} +onPull(options: PullOptions) : Promise<Out>
    +prependListener(eventName: string | symbol, listener: Function) : SourceNode<Out>
    +prependOnceListener(eventName: string | symbol, listener: Function) : SourceNode<Out>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : SourceNode<Out>
    +removeListener(eventName: string | symbol, listener: Function) : SourceNode<Out>
    +setMaxListeners(n: number) : SourceNode<Out>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setOptions(options: NodeOptions) : SourceNode<Out>
    #mergeFrame(frame: DataFrame) : Promise<DataFrame>
    #mergeObject(newObject: DataObject, oldObject: DataObject) : DataObject
    #registerService() : Promise<void>
}
"SourceNode<Out>" <|- - "CallbackSourceNode<Out>"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 16:46:50 UTC 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>