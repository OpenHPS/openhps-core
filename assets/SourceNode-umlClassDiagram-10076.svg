<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1360px" preserveAspectRatio="none" style="width:2864px;height:1360px;background:#00000000;" version="1.1" viewBox="0 0 2864 1360" width="2864px" zoomAndPan="magnify"><defs><filter height="300%" id="fnnefktkttxae" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[2651cda8e2c79eeef8da2b2f12036b47]
class SourceNode<Out>--><rect codeLine="4" fill="#FEFECE" filter="url(#fnnefktkttxae)" height="419.3359" id="SourceNode&lt;Out&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="1087" y="435"/><ellipse cx="1365.75" cy="451" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1365.8594,446.3438 L1364.7031,451.4219 L1367.0313,451.4219 L1365.8594,446.3438 Z M1364.375,444.1094 L1367.3594,444.1094 L1370.7188,456.5 L1368.2656,456.5 L1367.5,453.4375 L1364.2188,453.4375 L1363.4688,456.5 L1361.0313,456.5 L1364.375,444.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="118" x="1386.25" y="455.1543">SourceNode&lt;Out&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1088" x2="1770" y1="467" y2="467"/><ellipse cx="1098" cy="478" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="1107" y="481.2104">captureRejections : boolean</text><ellipse cx="1098" cy="490.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="1107" y="494.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="1098" cy="503.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="1107" y="506.8198">defaultMaxListeners : number</text><ellipse cx="1098" cy="516.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="1107" y="519.6245">errorMonitor : typeof errorMonitor</text><polygon fill="none" points="1098,524.2188,1102,528.2188,1098,532.2188,1094,528.2188" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="167" x="1107" y="532.4292">options : SourceNodeOptions</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1088" x2="1770" y1="539.0234" y2="539.0234"/><ellipse cx="1098" cy="550.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="458" x="1107" y="553.2339">addListener(eventName: string | symbol, listener: Function) : SourceNode&lt;Out&gt;</text><ellipse cx="1098" cy="562.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="1107" y="566.0386">eventNames() : (string | symbol)[]</text><ellipse cx="1098" cy="575.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="1107" y="578.8433">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="1098" cy="588.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="1107" y="591.6479">getMaxListeners() : number</text><ellipse cx="1098" cy="601.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="1107" y="604.4526">getOptions() : NodeOptions</text><ellipse cx="1098" cy="614.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="1107" y="617.2573">listenerCount(eventName: string | symbol) : number</text><ellipse cx="1098" cy="626.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="1107" y="630.062">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="1098" cy="639.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="1107" y="642.8667">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="1098" cy="652.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="406" x="1107" y="655.6714">off(eventName: string | symbol, listener: Function) : SourceNode&lt;Out&gt;</text><ellipse cx="1098" cy="665.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="1107" y="668.4761">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="1098" cy="678.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="1107" y="681.2808">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="1098" cy="690.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="1107" y="694.0854">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="1098" cy="703.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="250" x="1107" y="706.8901">onPull(options: PullOptions) : Promise&lt;Out&gt;</text><ellipse cx="1098" cy="716.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="484" x="1107" y="719.6948">prependListener(eventName: string | symbol, listener: Function) : SourceNode&lt;Out&gt;</text><ellipse cx="1098" cy="729.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="513" x="1107" y="732.4995">prependOnceListener(eventName: string | symbol, listener: Function) : SourceNode&lt;Out&gt;</text><ellipse cx="1098" cy="742.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="1107" y="745.3042">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="1098" cy="754.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="361" x="1107" y="758.1089">removeAllListeners(event: string | symbol) : SourceNode&lt;Out&gt;</text><ellipse cx="1098" cy="767.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="480" x="1107" y="770.9136">removeListener(eventName: string | symbol, listener: Function) : SourceNode&lt;Out&gt;</text><ellipse cx="1098" cy="780.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="279" x="1107" y="783.7183">setMaxListeners(n: number) : SourceNode&lt;Out&gt;</text><ellipse cx="1098" cy="793.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="1107" y="796.5229">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="1098" cy="806.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="312" x="1107" y="809.3276">setOptions(options: NodeOptions) : SourceNode&lt;Out&gt;</text><polygon fill="#FFFF44" points="1098,813.9219,1102,817.9219,1098,821.9219,1094,817.9219" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="324" x="1107" y="822.1323">mergeFrame(frame: DataFrame) : Promise&lt;DataFrame&gt;</text><polygon fill="#FFFF44" points="1098,826.7266,1102,830.7266,1098,834.7266,1094,830.7266" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="415" x="1107" y="834.937">mergeObject(newObject: DataObject, oldObject: DataObject) : DataObject</text><polygon fill="#FFFF44" points="1098,839.5313,1102,843.5313,1098,847.5313,1094,843.5313" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="195" x="1107" y="847.7417">registerService() : Promise&lt;void&gt;</text><!--MD5=[f385a6c5a20caf4c4fd3c314e11a2f01]
class Node<Out, Out>--><rect codeLine="35" fill="#FEFECE" filter="url(#fnnefktkttxae)" height="368.1172" id="Node&lt;Out, Out&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="1087" y="7"/><ellipse cx="1372.25" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1375.2188,28.6406 Q1374.6406,28.9375 1374,29.0781 Q1373.3594,29.2344 1372.6563,29.2344 Q1370.1563,29.2344 1368.8281,27.5938 Q1367.5156,25.9375 1367.5156,22.8125 Q1367.5156,19.6875 1368.8281,18.0313 Q1370.1563,16.375 1372.6563,16.375 Q1373.3594,16.375 1374,16.5313 Q1374.6563,16.6875 1375.2188,16.9844 L1375.2188,19.7031 Q1374.5938,19.125 1374,18.8594 Q1373.4063,18.5781 1372.7813,18.5781 Q1371.4375,18.5781 1370.75,19.6563 Q1370.0625,20.7188 1370.0625,22.8125 Q1370.0625,24.9063 1370.75,25.9844 Q1371.4375,27.0469 1372.7813,27.0469 Q1373.4063,27.0469 1374,26.7813 Q1374.5938,26.5 1375.2188,25.9219 L1375.2188,28.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="105" x="1392.75" y="27.1543">Node&lt;Out, Out&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1088" x2="1770" y1="39" y2="39"/><ellipse cx="1098" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="1107" y="53.2104">captureRejections : boolean</text><ellipse cx="1098" cy="62.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="1107" y="66.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="1098" cy="75.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="1107" y="78.8198">defaultMaxListeners : number</text><ellipse cx="1098" cy="88.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="1107" y="91.6245">errorMonitor : typeof errorMonitor</text><polygon fill="none" points="1098,96.2188,1102,100.2188,1098,104.2188,1094,100.2188" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="127" x="1107" y="104.4292">options : NodeOptions</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1088" x2="1770" y1="111.0234" y2="111.0234"/><ellipse cx="1098" cy="122.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="446" x="1107" y="125.2339">addListener(eventName: string | symbol, listener: Function) : Node&lt;Out, Out&gt;</text><ellipse cx="1098" cy="134.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="1107" y="138.0386">eventNames() : (string | symbol)[]</text><ellipse cx="1098" cy="147.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="1107" y="150.8433">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="1098" cy="160.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="1107" y="163.6479">getMaxListeners() : number</text><ellipse cx="1098" cy="173.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="1107" y="176.4526">getOptions() : NodeOptions</text><ellipse cx="1098" cy="186.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="1107" y="189.2573">listenerCount(eventName: string | symbol) : number</text><ellipse cx="1098" cy="198.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="1107" y="202.062">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="1098" cy="211.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="1107" y="214.8667">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="1098" cy="224.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="394" x="1107" y="227.6714">off(eventName: string | symbol, listener: Function) : Node&lt;Out, Out&gt;</text><ellipse cx="1098" cy="237.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="1107" y="240.4761">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="1098" cy="250.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="1107" y="253.2808">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="1098" cy="262.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="1107" y="266.0854">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="1098" cy="275.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="472" x="1107" y="278.8901">prependListener(eventName: string | symbol, listener: Function) : Node&lt;Out, Out&gt;</text><ellipse cx="1098" cy="288.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="501" x="1107" y="291.6948">prependOnceListener(eventName: string | symbol, listener: Function) : Node&lt;Out, Out&gt;</text><ellipse cx="1098" cy="301.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="1107" y="304.4995">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="1098" cy="314.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="349" x="1107" y="317.3042">removeAllListeners(event: string | symbol) : Node&lt;Out, Out&gt;</text><ellipse cx="1098" cy="326.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="468" x="1107" y="330.1089">removeListener(eventName: string | symbol, listener: Function) : Node&lt;Out, Out&gt;</text><ellipse cx="1098" cy="339.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="267" x="1107" y="342.9136">setMaxListeners(n: number) : Node&lt;Out, Out&gt;</text><ellipse cx="1098" cy="352.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="1107" y="355.7183">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="1098" cy="365.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="1107" y="368.5229">setOptions(options: NodeOptions) : Node&lt;Out, Out&gt;</text><!--MD5=[a7992867b4208a77e8315fa161632bd0]
class ListSourceNode<Out>--><rect codeLine="63" fill="#FEFECE" filter="url(#fnnefktkttxae)" height="419.3359" id="ListSourceNode&lt;Out&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="9" y="920.5"/><ellipse cx="276.75" cy="936.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M279.7188,942.1406 Q279.1406,942.4375 278.5,942.5781 Q277.8594,942.7344 277.1563,942.7344 Q274.6563,942.7344 273.3281,941.0938 Q272.0156,939.4375 272.0156,936.3125 Q272.0156,933.1875 273.3281,931.5313 Q274.6563,929.875 277.1563,929.875 Q277.8594,929.875 278.5,930.0313 Q279.1563,930.1875 279.7188,930.4844 L279.7188,933.2031 Q279.0938,932.625 278.5,932.3594 Q277.9063,932.0781 277.2813,932.0781 Q275.9375,932.0781 275.25,933.1563 Q274.5625,934.2188 274.5625,936.3125 Q274.5625,938.4063 275.25,939.4844 Q275.9375,940.5469 277.2813,940.5469 Q277.9063,940.5469 278.5,940.2813 Q279.0938,940 279.7188,939.4219 L279.7188,942.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="140" x="297.25" y="940.6543">ListSourceNode&lt;Out&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="952.5" y2="952.5"/><ellipse cx="20" cy="963.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="29" y="966.7104">captureRejections : boolean</text><ellipse cx="20" cy="976.3047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="29" y="979.5151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="20" cy="989.1094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="29" y="992.3198">defaultMaxListeners : number</text><ellipse cx="20" cy="1001.9141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="29" y="1005.1245">errorMonitor : typeof errorMonitor</text><polygon fill="none" points="20,1009.7188,24,1013.7188,20,1017.7188,16,1013.7188" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="167" x="29" y="1017.9292">options : SourceNodeOptions</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="1024.5234" y2="1024.5234"/><ellipse cx="20" cy="1035.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="478" x="29" y="1038.7339">addListener(eventName: string | symbol, listener: Function) : ListSourceNode&lt;Out&gt;</text><ellipse cx="20" cy="1048.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="29" y="1051.5386">eventNames() : (string | symbol)[]</text><ellipse cx="20" cy="1061.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="29" y="1064.3433">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="20" cy="1073.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="29" y="1077.1479">getMaxListeners() : number</text><ellipse cx="20" cy="1086.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="29" y="1089.9526">getOptions() : NodeOptions</text><ellipse cx="20" cy="1099.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="29" y="1102.7573">listenerCount(eventName: string | symbol) : number</text><ellipse cx="20" cy="1112.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="29" y="1115.562">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="20" cy="1125.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="29" y="1128.3667">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="1137.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="426" x="29" y="1141.1714">off(eventName: string | symbol, listener: Function) : ListSourceNode&lt;Out&gt;</text><ellipse cx="20" cy="1150.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="29" y="1153.9761">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="20" cy="1163.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="29" y="1166.7808">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="1176.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="29" y="1179.5854">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="1189.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="29" y="1192.3901">onPull() : Promise&lt;Out&gt;</text><ellipse cx="20" cy="1201.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="504" x="29" y="1205.1948">prependListener(eventName: string | symbol, listener: Function) : ListSourceNode&lt;Out&gt;</text><ellipse cx="20" cy="1214.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="533" x="29" y="1217.9995">prependOnceListener(eventName: string | symbol, listener: Function) : ListSourceNode&lt;Out&gt;</text><ellipse cx="20" cy="1227.5938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="29" y="1230.8042">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="1240.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="381" x="29" y="1243.6089">removeAllListeners(event: string | symbol) : ListSourceNode&lt;Out&gt;</text><ellipse cx="20" cy="1253.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="500" x="29" y="1256.4136">removeListener(eventName: string | symbol, listener: Function) : ListSourceNode&lt;Out&gt;</text><ellipse cx="20" cy="1266.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="299" x="29" y="1269.2183">setMaxListeners(n: number) : ListSourceNode&lt;Out&gt;</text><ellipse cx="20" cy="1278.8125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="29" y="1282.0229">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="20" cy="1291.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="332" x="29" y="1294.8276">setOptions(options: NodeOptions) : ListSourceNode&lt;Out&gt;</text><polygon fill="#FFFF44" points="20,1299.4219,24,1303.4219,20,1307.4219,16,1303.4219" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="324" x="29" y="1307.6323">mergeFrame(frame: DataFrame) : Promise&lt;DataFrame&gt;</text><polygon fill="#FFFF44" points="20,1312.2266,24,1316.2266,20,1320.2266,16,1316.2266" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="415" x="29" y="1320.437">mergeObject(newObject: DataObject, oldObject: DataObject) : DataObject</text><polygon fill="#FFFF44" points="20,1325.0313,24,1329.0313,20,1333.0313,16,1329.0313" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="195" x="29" y="1333.2417">registerService() : Promise&lt;void&gt;</text><!--MD5=[76d7858ec695d04a5fd78a063736f1e2]
class CallbackSourceNode<Out>--><rect codeLine="95" fill="#FEFECE" filter="url(#fnnefktkttxae)" height="432.1406" id="CallbackSourceNode&lt;Out&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="728" y="914"/><ellipse cx="980.25" cy="930" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M983.2188,935.6406 Q982.6406,935.9375 982,936.0781 Q981.3594,936.2344 980.6563,936.2344 Q978.1563,936.2344 976.8281,934.5938 Q975.5156,932.9375 975.5156,929.8125 Q975.5156,926.6875 976.8281,925.0313 Q978.1563,923.375 980.6563,923.375 Q981.3594,923.375 982,923.5313 Q982.6563,923.6875 983.2188,923.9844 L983.2188,926.7031 Q982.5938,926.125 982,925.8594 Q981.4063,925.5781 980.7813,925.5781 Q979.4375,925.5781 978.75,926.6563 Q978.0625,927.7188 978.0625,929.8125 Q978.0625,931.9063 978.75,932.9844 Q979.4375,934.0469 980.7813,934.0469 Q981.4063,934.0469 982,933.7813 Q982.5938,933.5 983.2188,932.9219 L983.2188,935.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="171" x="1000.75" y="934.1543">CallbackSourceNode&lt;Out&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="729" x2="1411" y1="946" y2="946"/><ellipse cx="739" cy="957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="104" x="748" y="960.2104">callback : Function</text><ellipse cx="739" cy="969.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="748" y="973.0151">captureRejections : boolean</text><ellipse cx="739" cy="982.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="748" y="985.8198">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="739" cy="995.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="748" y="998.6245">defaultMaxListeners : number</text><ellipse cx="739" cy="1008.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="748" y="1011.4292">errorMonitor : typeof errorMonitor</text><polygon fill="none" points="739,1016.0234,743,1020.0234,739,1024.0234,735,1020.0234" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="167" x="748" y="1024.2339">options : SourceNodeOptions</text><line style="stroke:#A80036;stroke-width:1.5;" x1="729" x2="1411" y1="1030.8281" y2="1030.8281"/><ellipse cx="739" cy="1041.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="505" x="748" y="1045.0386">addListener(eventName: string | symbol, listener: Function) : CallbackSourceNode&lt;Out&gt;</text><ellipse cx="739" cy="1054.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="748" y="1057.8433">eventNames() : (string | symbol)[]</text><ellipse cx="739" cy="1067.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="748" y="1070.6479">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="739" cy="1080.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="748" y="1083.4526">getMaxListeners() : number</text><ellipse cx="739" cy="1093.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="748" y="1096.2573">getOptions() : NodeOptions</text><ellipse cx="739" cy="1105.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="748" y="1109.062">listenerCount(eventName: string | symbol) : number</text><ellipse cx="739" cy="1118.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="748" y="1121.8667">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="739" cy="1131.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="748" y="1134.6714">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="739" cy="1144.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="453" x="748" y="1147.4761">off(eventName: string | symbol, listener: Function) : CallbackSourceNode&lt;Out&gt;</text><ellipse cx="739" cy="1157.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="748" y="1160.2808">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="739" cy="1169.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="748" y="1173.0854">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="739" cy="1182.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="748" y="1185.8901">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="739" cy="1195.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="748" y="1198.6948">onPull(options: PullOptions) : Promise&lt;Out&gt;</text><ellipse cx="739" cy="1208.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="531" x="748" y="1211.4995">prependListener(eventName: string | symbol, listener: Function) : CallbackSourceNode&lt;Out&gt;</text><ellipse cx="739" cy="1221.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="560" x="748" y="1224.3042">prependOnceListener(eventName: string | symbol, listener: Function) : CallbackSourceNode&lt;Out&gt;</text><ellipse cx="739" cy="1233.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="748" y="1237.1089">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="739" cy="1246.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="408" x="748" y="1249.9136">removeAllListeners(event: string | symbol) : CallbackSourceNode&lt;Out&gt;</text><ellipse cx="739" cy="1259.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="527" x="748" y="1262.7183">removeListener(eventName: string | symbol, listener: Function) : CallbackSourceNode&lt;Out&gt;</text><ellipse cx="739" cy="1272.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="326" x="748" y="1275.5229">setMaxListeners(n: number) : CallbackSourceNode&lt;Out&gt;</text><ellipse cx="739" cy="1285.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="748" y="1288.3276">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="739" cy="1297.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="359" x="748" y="1301.1323">setOptions(options: NodeOptions) : CallbackSourceNode&lt;Out&gt;</text><polygon fill="#FFFF44" points="739,1305.7266,743,1309.7266,739,1313.7266,735,1309.7266" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="324" x="748" y="1313.937">mergeFrame(frame: DataFrame) : Promise&lt;DataFrame&gt;</text><polygon fill="#FFFF44" points="739,1318.5313,743,1322.5313,739,1326.5313,735,1322.5313" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="415" x="748" y="1326.7417">mergeObject(newObject: DataObject, oldObject: DataObject) : DataObject</text><polygon fill="#FFFF44" points="739,1331.3359,743,1335.3359,739,1339.3359,735,1335.3359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="195" x="748" y="1339.5464">registerService() : Promise&lt;void&gt;</text><!--MD5=[f2f54c8a024a5665f227fd20ddc3963d]
class HistorySourceNode<Out>--><rect codeLine="128" fill="#FEFECE" filter="url(#fnnefktkttxae)" height="419.3359" id="HistorySourceNode&lt;Out&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="1447" y="920.5"/><ellipse cx="1703.75" cy="936.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1706.7188,942.1406 Q1706.1406,942.4375 1705.5,942.5781 Q1704.8594,942.7344 1704.1563,942.7344 Q1701.6563,942.7344 1700.3281,941.0938 Q1699.0156,939.4375 1699.0156,936.3125 Q1699.0156,933.1875 1700.3281,931.5313 Q1701.6563,929.875 1704.1563,929.875 Q1704.8594,929.875 1705.5,930.0313 Q1706.1563,930.1875 1706.7188,930.4844 L1706.7188,933.2031 Q1706.0938,932.625 1705.5,932.3594 Q1704.9063,932.0781 1704.2813,932.0781 Q1702.9375,932.0781 1702.25,933.1563 Q1701.5625,934.2188 1701.5625,936.3125 Q1701.5625,938.4063 1702.25,939.4844 Q1702.9375,940.5469 1704.2813,940.5469 Q1704.9063,940.5469 1705.5,940.2813 Q1706.0938,940 1706.7188,939.4219 L1706.7188,942.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="162" x="1724.25" y="940.6543">HistorySourceNode&lt;Out&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1448" x2="2130" y1="952.5" y2="952.5"/><ellipse cx="1458" cy="963.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="1467" y="966.7104">captureRejections : boolean</text><ellipse cx="1458" cy="976.3047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="1467" y="979.5151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="1458" cy="989.1094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="1467" y="992.3198">defaultMaxListeners : number</text><ellipse cx="1458" cy="1001.9141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="1467" y="1005.1245">errorMonitor : typeof errorMonitor</text><polygon fill="none" points="1458,1009.7188,1462,1013.7188,1458,1017.7188,1454,1013.7188" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="167" x="1467" y="1017.9292">options : SourceNodeOptions</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1448" x2="2130" y1="1024.5234" y2="1024.5234"/><ellipse cx="1458" cy="1035.5234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="498" x="1467" y="1038.7339">addListener(eventName: string | symbol, listener: Function) : HistorySourceNode&lt;Out&gt;</text><ellipse cx="1458" cy="1048.3281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="1467" y="1051.5386">eventNames() : (string | symbol)[]</text><ellipse cx="1458" cy="1061.1328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="1467" y="1064.3433">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="1458" cy="1073.9375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="1467" y="1077.1479">getMaxListeners() : number</text><ellipse cx="1458" cy="1086.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="1467" y="1089.9526">getOptions() : NodeOptions</text><ellipse cx="1458" cy="1099.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="1467" y="1102.7573">listenerCount(eventName: string | symbol) : number</text><ellipse cx="1458" cy="1112.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="1467" y="1115.562">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="1458" cy="1125.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="1467" y="1128.3667">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="1458" cy="1137.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="446" x="1467" y="1141.1714">off(eventName: string | symbol, listener: Function) : HistorySourceNode&lt;Out&gt;</text><ellipse cx="1458" cy="1150.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="1467" y="1153.9761">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="1458" cy="1163.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="1467" y="1166.7808">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="1458" cy="1176.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="1467" y="1179.5854">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="1458" cy="1189.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="1467" y="1192.3901">onPull(options: PullOptions) : Promise&lt;Out&gt;</text><ellipse cx="1458" cy="1201.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="524" x="1467" y="1205.1948">prependListener(eventName: string | symbol, listener: Function) : HistorySourceNode&lt;Out&gt;</text><ellipse cx="1458" cy="1214.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="553" x="1467" y="1217.9995">prependOnceListener(eventName: string | symbol, listener: Function) : HistorySourceNode&lt;Out&gt;</text><ellipse cx="1458" cy="1227.5938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="1467" y="1230.8042">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="1458" cy="1240.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="401" x="1467" y="1243.6089">removeAllListeners(event: string | symbol) : HistorySourceNode&lt;Out&gt;</text><ellipse cx="1458" cy="1253.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="520" x="1467" y="1256.4136">removeListener(eventName: string | symbol, listener: Function) : HistorySourceNode&lt;Out&gt;</text><ellipse cx="1458" cy="1266.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="319" x="1467" y="1269.2183">setMaxListeners(n: number) : HistorySourceNode&lt;Out&gt;</text><ellipse cx="1458" cy="1278.8125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="1467" y="1282.0229">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="1458" cy="1291.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="352" x="1467" y="1294.8276">setOptions(options: NodeOptions) : HistorySourceNode&lt;Out&gt;</text><polygon fill="#FFFF44" points="1458,1299.4219,1462,1303.4219,1458,1307.4219,1454,1303.4219" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="324" x="1467" y="1307.6323">mergeFrame(frame: DataFrame) : Promise&lt;DataFrame&gt;</text><polygon fill="#FFFF44" points="1458,1312.2266,1462,1316.2266,1458,1320.2266,1454,1316.2266" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="415" x="1467" y="1320.437">mergeObject(newObject: DataObject, oldObject: DataObject) : DataObject</text><polygon fill="#FFFF44" points="1458,1325.0313,1462,1329.0313,1458,1333.0313,1454,1329.0313" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="195" x="1467" y="1333.2417">registerService() : Promise&lt;void&gt;</text><!--MD5=[4d2841f7393c9ba71a72cd22307d43d8]
class RemoteSourceNode<Out, S>--><rect codeLine="160" fill="#FEFECE" filter="url(#fnnefktkttxae)" height="432.1406" id="RemoteSourceNode&lt;Out, S&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="2166" y="914"/><ellipse cx="2412.25" cy="930" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2415.2188,935.6406 Q2414.6406,935.9375 2414,936.0781 Q2413.3594,936.2344 2412.6563,936.2344 Q2410.1563,936.2344 2408.8281,934.5938 Q2407.5156,932.9375 2407.5156,929.8125 Q2407.5156,926.6875 2408.8281,925.0313 Q2410.1563,923.375 2412.6563,923.375 Q2413.3594,923.375 2414,923.5313 Q2414.6563,923.6875 2415.2188,923.9844 L2415.2188,926.7031 Q2414.5938,926.125 2414,925.8594 Q2413.4063,925.5781 2412.7813,925.5781 Q2411.4375,925.5781 2410.75,926.6563 Q2410.0625,927.7188 2410.0625,929.8125 Q2410.0625,931.9063 2410.75,932.9844 Q2411.4375,934.0469 2412.7813,934.0469 Q2413.4063,934.0469 2414,933.7813 Q2414.5938,933.5 2415.2188,932.9219 L2415.2188,935.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="183" x="2432.75" y="934.1543">RemoteSourceNode&lt;Out, S&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2167" x2="2849" y1="946" y2="946"/><ellipse cx="2177" cy="957" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="2186" y="960.2104">captureRejections : boolean</text><ellipse cx="2177" cy="969.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="2186" y="973.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="2177" cy="982.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="2186" y="985.8198">defaultMaxListeners : number</text><ellipse cx="2177" cy="995.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="2186" y="998.6245">errorMonitor : typeof errorMonitor</text><polygon fill="none" points="2177,1003.2188,2181,1007.2188,2177,1011.2188,2173,1007.2188" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="167" x="2186" y="1011.4292">options : SourceNodeOptions</text><polygon fill="none" points="2177,1016.0234,2181,1020.0234,2177,1024.0234,2173,1020.0234" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="236" x="2186" y="1024.2339">remoteNode : RemoteNode&lt;Out, Out, S&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2167" x2="2849" y1="1030.8281" y2="1030.8281"/><ellipse cx="2177" cy="1041.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="517" x="2186" y="1045.0386">addListener(eventName: string | symbol, listener: Function) : RemoteSourceNode&lt;Out, S&gt;</text><ellipse cx="2177" cy="1054.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="2186" y="1057.8433">eventNames() : (string | symbol)[]</text><ellipse cx="2177" cy="1067.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="2186" y="1070.6479">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="2177" cy="1080.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="2186" y="1083.4526">getMaxListeners() : number</text><ellipse cx="2177" cy="1093.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="2186" y="1096.2573">getOptions() : NodeOptions</text><ellipse cx="2177" cy="1105.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="2186" y="1109.062">listenerCount(eventName: string | symbol) : number</text><ellipse cx="2177" cy="1118.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="2186" y="1121.8667">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="2177" cy="1131.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="2186" y="1134.6714">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="2177" cy="1144.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="465" x="2186" y="1147.4761">off(eventName: string | symbol, listener: Function) : RemoteSourceNode&lt;Out, S&gt;</text><ellipse cx="2177" cy="1157.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="2186" y="1160.2808">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="2177" cy="1169.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="2186" y="1173.0854">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="2177" cy="1182.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="2186" y="1185.8901">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="2177" cy="1195.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="139" x="2186" y="1198.6948">onPull() : Promise&lt;Out&gt;</text><ellipse cx="2177" cy="1208.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="543" x="2186" y="1211.4995">prependListener(eventName: string | symbol, listener: Function) : RemoteSourceNode&lt;Out, S&gt;</text><ellipse cx="2177" cy="1221.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="572" x="2186" y="1224.3042">prependOnceListener(eventName: string | symbol, listener: Function) : RemoteSourceNode&lt;Out, S&gt;</text><ellipse cx="2177" cy="1233.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="2186" y="1237.1089">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="2177" cy="1246.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="420" x="2186" y="1249.9136">removeAllListeners(event: string | symbol) : RemoteSourceNode&lt;Out, S&gt;</text><ellipse cx="2177" cy="1259.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="539" x="2186" y="1262.7183">removeListener(eventName: string | symbol, listener: Function) : RemoteSourceNode&lt;Out, S&gt;</text><ellipse cx="2177" cy="1272.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="338" x="2186" y="1275.5229">setMaxListeners(n: number) : RemoteSourceNode&lt;Out, S&gt;</text><ellipse cx="2177" cy="1285.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="2186" y="1288.3276">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="2177" cy="1297.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="371" x="2186" y="1301.1323">setOptions(options: NodeOptions) : RemoteSourceNode&lt;Out, S&gt;</text><polygon fill="#FFFF44" points="2177,1305.7266,2181,1309.7266,2177,1313.7266,2173,1309.7266" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="324" x="2186" y="1313.937">mergeFrame(frame: DataFrame) : Promise&lt;DataFrame&gt;</text><polygon fill="#FFFF44" points="2177,1318.5313,2181,1322.5313,2177,1326.5313,2173,1322.5313" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="415" x="2186" y="1326.7417">mergeObject(newObject: DataObject, oldObject: DataObject) : DataObject</text><polygon fill="#FFFF44" points="2177,1331.3359,2181,1335.3359,2177,1339.3359,2173,1335.3359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="195" x="2186" y="1339.5464">registerService() : Promise&lt;void&gt;</text><!--MD5=[ab4a660cf0a60a75d483baf7d8ca92db]
reverse link Node<Out, Out> to SourceNode<Out>--><path codeLine="62" d="M1429,395.6 C1429,408.58 1429,421.65 1429,434.65 " fill="none" id="Node&lt;Out, Out&gt;-backto-SourceNode&lt;Out&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1422,395.32,1429,375.32,1436,395.32,1422,395.32" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[b3296bf2d3a126b18bbfb09702e3ff91]
reverse link SourceNode<Out> to ListSourceNode<Out>--><path codeLine="94" d="M1067.82,765.78 C951.69,808.3 823.71,859.28 710,914 C704.44,916.68 698.84,919.41 693.24,922.2 " fill="none" id="SourceNode&lt;Out&gt;-backto-ListSourceNode&lt;Out&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1065.54,759.17,1086.72,758.9,1070.33,772.32,1065.54,759.17" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[b2e348f8646fc540071e9b505426cdf5]
reverse link SourceNode<Out> to CallbackSourceNode<Out>--><path codeLine="127" d="M1262.04,870.36 C1251.29,884.84 1240.47,899.41 1229.76,913.84 " fill="none" id="SourceNode&lt;Out&gt;-backto-CallbackSourceNode&lt;Out&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1256.6,865.94,1274.15,854.06,1267.84,874.29,1256.6,865.94" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[9d3bb67842906de87478e5b19f4d1ee8]
reverse link SourceNode<Out> to HistorySourceNode<Out>--><path codeLine="159" d="M1596.41,870.34 C1608.83,887.02 1621.32,903.8 1633.66,920.37 " fill="none" id="SourceNode&lt;Out&gt;-backto-HistorySourceNode&lt;Out&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1590.61,874.28,1584.28,854.06,1601.84,865.92,1590.61,874.28" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[32f4a0b6f39f84b21a6684f08981df12]
reverse link SourceNode<Out> to RemoteSourceNode<Out, S>--><path codeLine="192" d="M1790.26,765.58 C1906.66,808.12 2034.99,859.17 2149,914 C2154.57,916.68 2160.16,919.41 2165.77,922.2 " fill="none" id="SourceNode&lt;Out&gt;-backto-RemoteSourceNode&lt;Out, S&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1787.71,772.1,1771.31,758.69,1792.49,758.94,1787.71,772.1" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[7163ae88e51016a51186db1a63236bb9]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
abstract class "SourceNode<Out>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    #options : SourceNodeOptions
    +addListener(eventName: string | symbol, listener: Function) : SourceNode<Out>
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +getOptions() : NodeOptions
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : SourceNode<Out>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    {abstract} +onPull(options: PullOptions) : Promise<Out>
    +prependListener(eventName: string | symbol, listener: Function) : SourceNode<Out>
    +prependOnceListener(eventName: string | symbol, listener: Function) : SourceNode<Out>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : SourceNode<Out>
    +removeListener(eventName: string | symbol, listener: Function) : SourceNode<Out>
    +setMaxListeners(n: number) : SourceNode<Out>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setOptions(options: NodeOptions) : SourceNode<Out>
    #mergeFrame(frame: DataFrame) : Promise<DataFrame>
    #mergeObject(newObject: DataObject, oldObject: DataObject) : DataObject
    #registerService() : Promise<void>
}
class "Node<Out, Out>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    #options : NodeOptions
    +addListener(eventName: string | symbol, listener: Function) : Node<Out, Out>
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +getOptions() : NodeOptions
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Node<Out, Out>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : Node<Out, Out>
    +prependOnceListener(eventName: string | symbol, listener: Function) : Node<Out, Out>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : Node<Out, Out>
    +removeListener(eventName: string | symbol, listener: Function) : Node<Out, Out>
    +setMaxListeners(n: number) : Node<Out, Out>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setOptions(options: NodeOptions) : Node<Out, Out>
}
"Node<Out, Out>" <|- - "SourceNode<Out>"
class "ListSourceNode<Out>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    #options : SourceNodeOptions
    +addListener(eventName: string | symbol, listener: Function) : ListSourceNode<Out>
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +getOptions() : NodeOptions
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : ListSourceNode<Out>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +onPull() : Promise<Out>
    +prependListener(eventName: string | symbol, listener: Function) : ListSourceNode<Out>
    +prependOnceListener(eventName: string | symbol, listener: Function) : ListSourceNode<Out>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : ListSourceNode<Out>
    +removeListener(eventName: string | symbol, listener: Function) : ListSourceNode<Out>
    +setMaxListeners(n: number) : ListSourceNode<Out>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setOptions(options: NodeOptions) : ListSourceNode<Out>
    #mergeFrame(frame: DataFrame) : Promise<DataFrame>
    #mergeObject(newObject: DataObject, oldObject: DataObject) : DataObject
    #registerService() : Promise<void>
}
"SourceNode<Out>" <|- - "ListSourceNode<Out>"
class "CallbackSourceNode<Out>" {
    +callback : Function
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    #options : SourceNodeOptions
    +addListener(eventName: string | symbol, listener: Function) : CallbackSourceNode<Out>
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +getOptions() : NodeOptions
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : CallbackSourceNode<Out>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +onPull(options: PullOptions) : Promise<Out>
    +prependListener(eventName: string | symbol, listener: Function) : CallbackSourceNode<Out>
    +prependOnceListener(eventName: string | symbol, listener: Function) : CallbackSourceNode<Out>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : CallbackSourceNode<Out>
    +removeListener(eventName: string | symbol, listener: Function) : CallbackSourceNode<Out>
    +setMaxListeners(n: number) : CallbackSourceNode<Out>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setOptions(options: NodeOptions) : CallbackSourceNode<Out>
    #mergeFrame(frame: DataFrame) : Promise<DataFrame>
    #mergeObject(newObject: DataObject, oldObject: DataObject) : DataObject
    #registerService() : Promise<void>
}
"SourceNode<Out>" <|- - "CallbackSourceNode<Out>"
class "HistorySourceNode<Out>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    #options : SourceNodeOptions
    +addListener(eventName: string | symbol, listener: Function) : HistorySourceNode<Out>
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +getOptions() : NodeOptions
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : HistorySourceNode<Out>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +onPull(options: PullOptions) : Promise<Out>
    +prependListener(eventName: string | symbol, listener: Function) : HistorySourceNode<Out>
    +prependOnceListener(eventName: string | symbol, listener: Function) : HistorySourceNode<Out>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : HistorySourceNode<Out>
    +removeListener(eventName: string | symbol, listener: Function) : HistorySourceNode<Out>
    +setMaxListeners(n: number) : HistorySourceNode<Out>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setOptions(options: NodeOptions) : HistorySourceNode<Out>
    #mergeFrame(frame: DataFrame) : Promise<DataFrame>
    #mergeObject(newObject: DataObject, oldObject: DataObject) : DataObject
    #registerService() : Promise<void>
}
"SourceNode<Out>" <|- - "HistorySourceNode<Out>"
class "RemoteSourceNode<Out, S>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    #options : SourceNodeOptions
    #remoteNode : RemoteNode<Out, Out, S>
    +addListener(eventName: string | symbol, listener: Function) : RemoteSourceNode<Out, S>
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +getOptions() : NodeOptions
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : RemoteSourceNode<Out, S>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +onPull() : Promise<Out>
    +prependListener(eventName: string | symbol, listener: Function) : RemoteSourceNode<Out, S>
    +prependOnceListener(eventName: string | symbol, listener: Function) : RemoteSourceNode<Out, S>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : RemoteSourceNode<Out, S>
    +removeListener(eventName: string | symbol, listener: Function) : RemoteSourceNode<Out, S>
    +setMaxListeners(n: number) : RemoteSourceNode<Out, S>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setOptions(options: NodeOptions) : RemoteSourceNode<Out, S>
    #mergeFrame(frame: DataFrame) : Promise<DataFrame>
    #mergeObject(newObject: DataObject, oldObject: DataObject) : DataObject
    #registerService() : Promise<void>
}
"SourceNode<Out>" <|- - "RemoteSourceNode<Out, S>"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 16:46:50 UTC 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>