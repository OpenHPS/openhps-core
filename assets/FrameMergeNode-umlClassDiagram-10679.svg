<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1488px" preserveAspectRatio="none" style="width:1426px;height:1488px;background:#00000000;" version="1.1" viewBox="0 0 1426 1488" width="1426px" zoomAndPan="magnify"><defs><filter height="300%" id="f32u9jz29e7jj" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[141a2e6d8ea8a7e5d43ad004068c18c9]
class FrameMergeNode<InOut>--><rect codeLine="4" fill="#FEFECE" filter="url(#f32u9jz29e7jj)" height="457.75" id="FrameMergeNode&lt;InOut&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="368" y="499"/><ellipse cx="623.75" cy="515" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M626.7188,520.6406 Q626.1406,520.9375 625.5,521.0781 Q624.8594,521.2344 624.1563,521.2344 Q621.6563,521.2344 620.3281,519.5938 Q619.0156,517.9375 619.0156,514.8125 Q619.0156,511.6875 620.3281,510.0313 Q621.6563,508.375 624.1563,508.375 Q624.8594,508.375 625.5,508.5313 Q626.1563,508.6875 626.7188,508.9844 L626.7188,511.7031 Q626.0938,511.125 625.5,510.8594 Q624.9063,510.5781 624.2813,510.5781 Q622.9375,510.5781 622.25,511.6563 Q621.5625,512.7188 621.5625,514.8125 Q621.5625,516.9063 622.25,517.9844 Q622.9375,519.0469 624.2813,519.0469 Q624.9063,519.0469 625.5,518.7813 Q626.0938,518.5 626.7188,517.9219 L626.7188,520.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="164" x="644.25" y="519.1543">FrameMergeNode&lt;InOut&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="369" x2="1051" y1="531" y2="531"/><ellipse cx="379" cy="542" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="388" y="545.2104">captureRejections : boolean</text><ellipse cx="379" cy="554.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="388" y="558.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="379" cy="567.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="388" y="570.8198">defaultMaxListeners : number</text><ellipse cx="379" cy="580.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="388" y="583.6245">errorMonitor : typeof errorMonitor</text><polygon fill="none" points="379,588.2188,383,592.2188,379,596.2188,375,592.2188" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="388" y="596.4292">options : MergeShapeOptions</text><line style="stroke:#A80036;stroke-width:1.5;" x1="369" x2="1051" y1="603.0234" y2="603.0234"/><ellipse cx="379" cy="614.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="499" x="388" y="617.2339">addListener(eventName: string | symbol, listener: Function) : FrameMergeNode&lt;InOut&gt;</text><ellipse cx="379" cy="626.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="388" y="630.0386">eventNames() : (string | symbol)[]</text><ellipse cx="379" cy="639.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="388" y="642.8433">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="379" cy="652.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="388" y="655.6479">getMaxListeners() : number</text><ellipse cx="379" cy="665.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="388" y="668.4526">getOptions() : NodeOptions</text><ellipse cx="379" cy="678.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="388" y="681.2573">listenerCount(eventName: string | symbol) : number</text><ellipse cx="379" cy="690.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="388" y="694.062">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="379" cy="703.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="388" y="706.8667">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="379" cy="716.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="388" y="719.6714">merge(frames: InOut[]) : InOut</text><ellipse cx="379" cy="729.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="388" y="732.4761">mergeObjects(objects: DataObject[]) : DataObject</text><ellipse cx="379" cy="742.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="520" x="388" y="745.2808">mergePositions(positionA: AbsolutePosition, positionB: AbsolutePosition) : AbsolutePosition</text><ellipse cx="379" cy="754.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="447" x="388" y="758.0854">off(eventName: string | symbol, listener: Function) : FrameMergeNode&lt;InOut&gt;</text><ellipse cx="379" cy="767.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="388" y="770.8901">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="379" cy="780.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="388" y="783.6948">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="379" cy="793.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="388" y="796.4995">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="379" cy="806.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="525" x="388" y="809.3042">prependListener(eventName: string | symbol, listener: Function) : FrameMergeNode&lt;InOut&gt;</text><ellipse cx="379" cy="818.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="554" x="388" y="822.1089">prependOnceListener(eventName: string | symbol, listener: Function) : FrameMergeNode&lt;InOut&gt;</text><ellipse cx="379" cy="831.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="388" y="834.9136">process(frame: InOut, options: PushOptions) : Promise&lt;InOut&gt;</text><ellipse cx="379" cy="844.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="388" y="847.7183">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="379" cy="857.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="402" x="388" y="860.5229">removeAllListeners(event: string | symbol) : FrameMergeNode&lt;InOut&gt;</text><ellipse cx="379" cy="870.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="521" x="388" y="873.3276">removeListener(eventName: string | symbol, listener: Function) : FrameMergeNode&lt;InOut&gt;</text><ellipse cx="379" cy="882.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="388" y="886.1323">setMaxListeners(n: number) : FrameMergeNode&lt;InOut&gt;</text><ellipse cx="379" cy="895.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="388" y="898.937">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="379" cy="908.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="388" y="911.7417">setOptions(options: NodeOptions) : FrameMergeNode&lt;InOut&gt;</text><polygon fill="#FFFF44" points="379,916.3359,383,920.3359,379,924.3359,375,920.3359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="388" y="924.5464">findNodeDataService() : NodeDataService&lt;NodeData&gt;</text><polygon fill="#FFFF44" points="379,929.1406,383,933.1406,379,937.1406,375,933.1406" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="422" x="388" y="937.3511">getNodeData&lt;T&gt;(dataObject: DataObject, defaultData: T) : Promise&lt;any&gt;</text><polygon fill="#FFFF44" points="379,941.9453,383,945.9453,379,949.9453,375,945.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="405" x="388" y="950.1558">setNodeData(dataObject: DataObject, data: any) : Promise&lt;NodeData&gt;</text><!--MD5=[4a4367315437d3589fad77aa170f6467]
class MergeShape<InOut>--><rect codeLine="38" fill="#FEFECE" filter="url(#f32u9jz29e7jj)" height="432.1406" id="MergeShape&lt;InOut&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="368" y="7"/><ellipse cx="639.75" cy="23" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M639.8594,18.3438 L638.7031,23.4219 L641.0313,23.4219 L639.8594,18.3438 Z M638.375,16.1094 L641.3594,16.1094 L644.7188,28.5 L642.2656,28.5 L641.5,25.4375 L638.2188,25.4375 L637.4688,28.5 L635.0313,28.5 L638.375,16.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="132" x="660.25" y="27.1543">MergeShape&lt;InOut&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="369" x2="1051" y1="39" y2="39"/><ellipse cx="379" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="388" y="53.2104">captureRejections : boolean</text><ellipse cx="379" cy="62.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="388" y="66.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="379" cy="75.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="388" y="78.8198">defaultMaxListeners : number</text><ellipse cx="379" cy="88.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="388" y="91.6245">errorMonitor : typeof errorMonitor</text><polygon fill="none" points="379,96.2188,383,100.2188,379,104.2188,375,100.2188" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="388" y="104.4292">options : MergeShapeOptions</text><line style="stroke:#A80036;stroke-width:1.5;" x1="369" x2="1051" y1="111.0234" y2="111.0234"/><ellipse cx="379" cy="122.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="470" x="388" y="125.2339">addListener(eventName: string | symbol, listener: Function) : MergeShape&lt;InOut&gt;</text><ellipse cx="379" cy="134.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="388" y="138.0386">eventNames() : (string | symbol)[]</text><ellipse cx="379" cy="147.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="388" y="150.8433">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="379" cy="160.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="388" y="163.6479">getMaxListeners() : number</text><ellipse cx="379" cy="173.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="388" y="176.4526">getOptions() : NodeOptions</text><ellipse cx="379" cy="186.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="388" y="189.2573">listenerCount(eventName: string | symbol) : number</text><ellipse cx="379" cy="198.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="388" y="202.062">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="379" cy="211.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="388" y="214.8667">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="379" cy="224.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="241" x="388" y="227.6714">merge(frames: InOut[], key: string) : InOut</text><ellipse cx="379" cy="237.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="418" x="388" y="240.4761">off(eventName: string | symbol, listener: Function) : MergeShape&lt;InOut&gt;</text><ellipse cx="379" cy="250.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="388" y="253.2808">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="379" cy="262.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="388" y="266.0854">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="379" cy="275.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="388" y="278.8901">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="379" cy="288.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="496" x="388" y="291.6948">prependListener(eventName: string | symbol, listener: Function) : MergeShape&lt;InOut&gt;</text><ellipse cx="379" cy="301.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="525" x="388" y="304.4995">prependOnceListener(eventName: string | symbol, listener: Function) : MergeShape&lt;InOut&gt;</text><ellipse cx="379" cy="314.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="388" y="317.3042">process(frame: InOut, options: PushOptions) : Promise&lt;InOut&gt;</text><ellipse cx="379" cy="326.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="388" y="330.1089">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="379" cy="339.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="373" x="388" y="342.9136">removeAllListeners(event: string | symbol) : MergeShape&lt;InOut&gt;</text><ellipse cx="379" cy="352.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="492" x="388" y="355.7183">removeListener(eventName: string | symbol, listener: Function) : MergeShape&lt;InOut&gt;</text><ellipse cx="379" cy="365.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="291" x="388" y="368.5229">setMaxListeners(n: number) : MergeShape&lt;InOut&gt;</text><ellipse cx="379" cy="378.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="388" y="381.3276">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="379" cy="390.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="324" x="388" y="394.1323">setOptions(options: NodeOptions) : MergeShape&lt;InOut&gt;</text><polygon fill="#FFFF44" points="379,398.7266,383,402.7266,379,406.7266,375,402.7266" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="388" y="406.937">findNodeDataService() : NodeDataService&lt;NodeData&gt;</text><polygon fill="#FFFF44" points="379,411.5313,383,415.5313,379,419.5313,375,415.5313" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="422" x="388" y="419.7417">getNodeData&lt;T&gt;(dataObject: DataObject, defaultData: T) : Promise&lt;any&gt;</text><polygon fill="#FFFF44" points="379,424.3359,383,428.3359,379,432.3359,375,428.3359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="405" x="388" y="432.5464">setNodeData(dataObject: DataObject, data: any) : Promise&lt;NodeData&gt;</text><!--MD5=[e0dda5b5009bac63810322092742ad9b]
class SourceMergeNode<InOut>--><rect codeLine="71" fill="#FEFECE" filter="url(#f32u9jz29e7jj)" height="457.75" id="SourceMergeNode&lt;InOut&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="9" y="1017"/><ellipse cx="262.25" cy="1033" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M265.2188,1038.6406 Q264.6406,1038.9375 264,1039.0781 Q263.3594,1039.2344 262.6563,1039.2344 Q260.1563,1039.2344 258.8281,1037.5938 Q257.5156,1035.9375 257.5156,1032.8125 Q257.5156,1029.6875 258.8281,1028.0313 Q260.1563,1026.375 262.6563,1026.375 Q263.3594,1026.375 264,1026.5313 Q264.6563,1026.6875 265.2188,1026.9844 L265.2188,1029.7031 Q264.5938,1029.125 264,1028.8594 Q263.4063,1028.5781 262.7813,1028.5781 Q261.4375,1028.5781 260.75,1029.6563 Q260.0625,1030.7188 260.0625,1032.8125 Q260.0625,1034.9063 260.75,1035.9844 Q261.4375,1037.0469 262.7813,1037.0469 Q263.4063,1037.0469 264,1036.7813 Q264.5938,1036.5 265.2188,1035.9219 L265.2188,1038.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="169" x="282.75" y="1037.1543">SourceMergeNode&lt;InOut&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="1049" y2="1049"/><ellipse cx="20" cy="1060" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="29" y="1063.2104">captureRejections : boolean</text><ellipse cx="20" cy="1072.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="29" y="1076.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="20" cy="1085.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="29" y="1088.8198">defaultMaxListeners : number</text><ellipse cx="20" cy="1098.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="29" y="1101.6245">errorMonitor : typeof errorMonitor</text><polygon fill="none" points="20,1106.2188,24,1110.2188,20,1114.2188,16,1110.2188" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="29" y="1114.4292">options : MergeShapeOptions</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="1121.0234" y2="1121.0234"/><ellipse cx="20" cy="1132.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="503" x="29" y="1135.2339">addListener(eventName: string | symbol, listener: Function) : SourceMergeNode&lt;InOut&gt;</text><ellipse cx="20" cy="1144.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="29" y="1148.0386">eventNames() : (string | symbol)[]</text><ellipse cx="20" cy="1157.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="29" y="1160.8433">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="20" cy="1170.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="29" y="1173.6479">getMaxListeners() : number</text><ellipse cx="20" cy="1183.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="29" y="1186.4526">getOptions() : NodeOptions</text><ellipse cx="20" cy="1196.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="29" y="1199.2573">listenerCount(eventName: string | symbol) : number</text><ellipse cx="20" cy="1208.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="29" y="1212.062">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="20" cy="1221.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="29" y="1224.8667">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="1234.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="29" y="1237.6714">merge(frames: InOut[]) : InOut</text><ellipse cx="20" cy="1247.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="29" y="1250.4761">mergeObjects(objects: DataObject[]) : DataObject</text><ellipse cx="20" cy="1260.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="520" x="29" y="1263.2808">mergePositions(positionA: AbsolutePosition, positionB: AbsolutePosition) : AbsolutePosition</text><ellipse cx="20" cy="1272.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="451" x="29" y="1276.0854">off(eventName: string | symbol, listener: Function) : SourceMergeNode&lt;InOut&gt;</text><ellipse cx="20" cy="1285.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="29" y="1288.8901">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="20" cy="1298.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="29" y="1301.6948">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="1311.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="29" y="1314.4995">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="1324.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="529" x="29" y="1327.3042">prependListener(eventName: string | symbol, listener: Function) : SourceMergeNode&lt;InOut&gt;</text><ellipse cx="20" cy="1336.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="558" x="29" y="1340.1089">prependOnceListener(eventName: string | symbol, listener: Function) : SourceMergeNode&lt;InOut&gt;</text><ellipse cx="20" cy="1349.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="29" y="1352.9136">process(frame: InOut, options: PushOptions) : Promise&lt;InOut&gt;</text><ellipse cx="20" cy="1362.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="29" y="1365.7183">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="1375.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="406" x="29" y="1378.5229">removeAllListeners(event: string | symbol) : SourceMergeNode&lt;InOut&gt;</text><ellipse cx="20" cy="1388.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="525" x="29" y="1391.3276">removeListener(eventName: string | symbol, listener: Function) : SourceMergeNode&lt;InOut&gt;</text><ellipse cx="20" cy="1400.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="324" x="29" y="1404.1323">setMaxListeners(n: number) : SourceMergeNode&lt;InOut&gt;</text><ellipse cx="20" cy="1413.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="29" y="1416.937">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="20" cy="1426.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="357" x="29" y="1429.7417">setOptions(options: NodeOptions) : SourceMergeNode&lt;InOut&gt;</text><polygon fill="#FFFF44" points="20,1434.3359,24,1438.3359,20,1442.3359,16,1438.3359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="29" y="1442.5464">findNodeDataService() : NodeDataService&lt;NodeData&gt;</text><polygon fill="#FFFF44" points="20,1447.1406,24,1451.1406,20,1455.1406,16,1451.1406" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="422" x="29" y="1455.3511">getNodeData&lt;T&gt;(dataObject: DataObject, defaultData: T) : Promise&lt;any&gt;</text><polygon fill="#FFFF44" points="20,1459.9453,24,1463.9453,20,1467.9453,16,1463.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="405" x="29" y="1468.1558">setNodeData(dataObject: DataObject, data: any) : Promise&lt;NodeData&gt;</text><!--MD5=[943b477b6036b84e9a15595886afebc3]
class ObjectMergeNode<InOut>--><rect codeLine="106" fill="#FEFECE" filter="url(#f32u9jz29e7jj)" height="457.75" id="ObjectMergeNode&lt;InOut&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="728" y="1017"/><ellipse cx="983.25" cy="1033" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M986.2188,1038.6406 Q985.6406,1038.9375 985,1039.0781 Q984.3594,1039.2344 983.6563,1039.2344 Q981.1563,1039.2344 979.8281,1037.5938 Q978.5156,1035.9375 978.5156,1032.8125 Q978.5156,1029.6875 979.8281,1028.0313 Q981.1563,1026.375 983.6563,1026.375 Q984.3594,1026.375 985,1026.5313 Q985.6563,1026.6875 986.2188,1026.9844 L986.2188,1029.7031 Q985.5938,1029.125 985,1028.8594 Q984.4063,1028.5781 983.7813,1028.5781 Q982.4375,1028.5781 981.75,1029.6563 Q981.0625,1030.7188 981.0625,1032.8125 Q981.0625,1034.9063 981.75,1035.9844 Q982.4375,1037.0469 983.7813,1037.0469 Q984.4063,1037.0469 985,1036.7813 Q985.5938,1036.5 986.2188,1035.9219 L986.2188,1038.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="165" x="1003.75" y="1037.1543">ObjectMergeNode&lt;InOut&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="729" x2="1411" y1="1049" y2="1049"/><ellipse cx="739" cy="1060" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="748" y="1063.2104">captureRejections : boolean</text><ellipse cx="739" cy="1072.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="748" y="1076.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="739" cy="1085.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="748" y="1088.8198">defaultMaxListeners : number</text><ellipse cx="739" cy="1098.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="748" y="1101.6245">errorMonitor : typeof errorMonitor</text><polygon fill="none" points="739,1106.2188,743,1110.2188,739,1114.2188,735,1110.2188" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="748" y="1114.4292">options : ObjectMergeOptions</text><line style="stroke:#A80036;stroke-width:1.5;" x1="729" x2="1411" y1="1121.0234" y2="1121.0234"/><ellipse cx="739" cy="1132.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="499" x="748" y="1135.2339">addListener(eventName: string | symbol, listener: Function) : ObjectMergeNode&lt;InOut&gt;</text><ellipse cx="739" cy="1144.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="748" y="1148.0386">eventNames() : (string | symbol)[]</text><ellipse cx="739" cy="1157.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="748" y="1160.8433">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="739" cy="1170.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="748" y="1173.6479">getMaxListeners() : number</text><ellipse cx="739" cy="1183.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="748" y="1186.4526">getOptions() : NodeOptions</text><ellipse cx="739" cy="1196.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="748" y="1199.2573">listenerCount(eventName: string | symbol) : number</text><ellipse cx="739" cy="1208.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="748" y="1212.062">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="739" cy="1221.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="748" y="1224.8667">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="739" cy="1234.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="748" y="1237.6714">merge(frames: InOut[]) : InOut</text><ellipse cx="739" cy="1247.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="748" y="1250.4761">mergeObjects(objects: DataObject[]) : DataObject</text><ellipse cx="739" cy="1260.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="520" x="748" y="1263.2808">mergePositions(positionA: AbsolutePosition, positionB: AbsolutePosition) : AbsolutePosition</text><ellipse cx="739" cy="1272.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="447" x="748" y="1276.0854">off(eventName: string | symbol, listener: Function) : ObjectMergeNode&lt;InOut&gt;</text><ellipse cx="739" cy="1285.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="748" y="1288.8901">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="739" cy="1298.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="748" y="1301.6948">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="739" cy="1311.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="748" y="1314.4995">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="739" cy="1324.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="525" x="748" y="1327.3042">prependListener(eventName: string | symbol, listener: Function) : ObjectMergeNode&lt;InOut&gt;</text><ellipse cx="739" cy="1336.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="554" x="748" y="1340.1089">prependOnceListener(eventName: string | symbol, listener: Function) : ObjectMergeNode&lt;InOut&gt;</text><ellipse cx="739" cy="1349.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="748" y="1352.9136">process(frame: InOut, options: PushOptions) : Promise&lt;InOut&gt;</text><ellipse cx="739" cy="1362.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="748" y="1365.7183">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="739" cy="1375.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="402" x="748" y="1378.5229">removeAllListeners(event: string | symbol) : ObjectMergeNode&lt;InOut&gt;</text><ellipse cx="739" cy="1388.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="521" x="748" y="1391.3276">removeListener(eventName: string | symbol, listener: Function) : ObjectMergeNode&lt;InOut&gt;</text><ellipse cx="739" cy="1400.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="748" y="1404.1323">setMaxListeners(n: number) : ObjectMergeNode&lt;InOut&gt;</text><ellipse cx="739" cy="1413.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="748" y="1416.937">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="739" cy="1426.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="748" y="1429.7417">setOptions(options: NodeOptions) : ObjectMergeNode&lt;InOut&gt;</text><polygon fill="#FFFF44" points="739,1434.3359,743,1438.3359,739,1442.3359,735,1438.3359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="748" y="1442.5464">findNodeDataService() : NodeDataService&lt;NodeData&gt;</text><polygon fill="#FFFF44" points="739,1447.1406,743,1451.1406,739,1455.1406,735,1451.1406" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="422" x="748" y="1455.3511">getNodeData&lt;T&gt;(dataObject: DataObject, defaultData: T) : Promise&lt;any&gt;</text><polygon fill="#FFFF44" points="739,1459.9453,743,1463.9453,739,1467.9453,735,1463.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="405" x="748" y="1468.1558">setNodeData(dataObject: DataObject, data: any) : Promise&lt;NodeData&gt;</text><!--MD5=[0fe2b73e9fa80cd0b5faba91cf947f0d]
reverse link MergeShape<InOut> to FrameMergeNode<InOut>--><path codeLine="70" d="M710,459.59 C710,472.65 710,485.76 710,498.79 " fill="none" id="MergeShape&lt;InOut&gt;-backto-FrameMergeNode&lt;InOut&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="703,459.14,710,439.14,717,459.14,703,459.14" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[80b56218ef3a1088f53f8bc211857585]
reverse link FrameMergeNode<InOut> to SourceMergeNode<InOut>--><path codeLine="105" d="M539.56,973.98 C529.6,988.3 519.59,1002.67 509.68,1016.93 " fill="none" id="FrameMergeNode&lt;InOut&gt;-backto-SourceMergeNode&lt;InOut&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="534.06,969.62,551.23,957.2,545.55,977.62,534.06,969.62" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[f341d586a20787445b2ac3a17c08cbc1]
reverse link FrameMergeNode<InOut> to ObjectMergeNode<InOut>--><path codeLine="140" d="M880.92,973.98 C890.91,988.3 900.94,1002.67 910.88,1016.93 " fill="none" id="FrameMergeNode&lt;InOut&gt;-backto-ObjectMergeNode&lt;InOut&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="874.91,977.61,869.21,957.2,886.4,969.6,874.91,977.61" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[7c387f4df81ac18b5b9e11dce392753d]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "FrameMergeNode<InOut>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    #options : MergeShapeOptions
    +addListener(eventName: string | symbol, listener: Function) : FrameMergeNode<InOut>
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +getOptions() : NodeOptions
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +merge(frames: InOut[]) : InOut
    +mergeObjects(objects: DataObject[]) : DataObject
    +mergePositions(positionA: AbsolutePosition, positionB: AbsolutePosition) : AbsolutePosition
    +off(eventName: string | symbol, listener: Function) : FrameMergeNode<InOut>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : FrameMergeNode<InOut>
    +prependOnceListener(eventName: string | symbol, listener: Function) : FrameMergeNode<InOut>
    +process(frame: InOut, options: PushOptions) : Promise<InOut>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : FrameMergeNode<InOut>
    +removeListener(eventName: string | symbol, listener: Function) : FrameMergeNode<InOut>
    +setMaxListeners(n: number) : FrameMergeNode<InOut>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setOptions(options: NodeOptions) : FrameMergeNode<InOut>
    #findNodeDataService() : NodeDataService<NodeData>
    #getNodeData<T>(dataObject: DataObject, defaultData: T) : Promise<any>
    #setNodeData(dataObject: DataObject, data: any) : Promise<NodeData>
}
abstract class "MergeShape<InOut>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    #options : MergeShapeOptions
    +addListener(eventName: string | symbol, listener: Function) : MergeShape<InOut>
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +getOptions() : NodeOptions
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    {abstract} +merge(frames: InOut[], key: string) : InOut
    +off(eventName: string | symbol, listener: Function) : MergeShape<InOut>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : MergeShape<InOut>
    +prependOnceListener(eventName: string | symbol, listener: Function) : MergeShape<InOut>
    +process(frame: InOut, options: PushOptions) : Promise<InOut>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : MergeShape<InOut>
    +removeListener(eventName: string | symbol, listener: Function) : MergeShape<InOut>
    +setMaxListeners(n: number) : MergeShape<InOut>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setOptions(options: NodeOptions) : MergeShape<InOut>
    #findNodeDataService() : NodeDataService<NodeData>
    #getNodeData<T>(dataObject: DataObject, defaultData: T) : Promise<any>
    #setNodeData(dataObject: DataObject, data: any) : Promise<NodeData>
}
"MergeShape<InOut>" <|- - "FrameMergeNode<InOut>"
class "SourceMergeNode<InOut>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    #options : MergeShapeOptions
    +addListener(eventName: string | symbol, listener: Function) : SourceMergeNode<InOut>
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +getOptions() : NodeOptions
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +merge(frames: InOut[]) : InOut
    +mergeObjects(objects: DataObject[]) : DataObject
    +mergePositions(positionA: AbsolutePosition, positionB: AbsolutePosition) : AbsolutePosition
    +off(eventName: string | symbol, listener: Function) : SourceMergeNode<InOut>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : SourceMergeNode<InOut>
    +prependOnceListener(eventName: string | symbol, listener: Function) : SourceMergeNode<InOut>
    +process(frame: InOut, options: PushOptions) : Promise<InOut>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : SourceMergeNode<InOut>
    +removeListener(eventName: string | symbol, listener: Function) : SourceMergeNode<InOut>
    +setMaxListeners(n: number) : SourceMergeNode<InOut>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setOptions(options: NodeOptions) : SourceMergeNode<InOut>
    #findNodeDataService() : NodeDataService<NodeData>
    #getNodeData<T>(dataObject: DataObject, defaultData: T) : Promise<any>
    #setNodeData(dataObject: DataObject, data: any) : Promise<NodeData>
}
"FrameMergeNode<InOut>" <|- - "SourceMergeNode<InOut>"
class "ObjectMergeNode<InOut>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    #options : ObjectMergeOptions
    +addListener(eventName: string | symbol, listener: Function) : ObjectMergeNode<InOut>
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +getOptions() : NodeOptions
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +merge(frames: InOut[]) : InOut
    +mergeObjects(objects: DataObject[]) : DataObject
    +mergePositions(positionA: AbsolutePosition, positionB: AbsolutePosition) : AbsolutePosition
    +off(eventName: string | symbol, listener: Function) : ObjectMergeNode<InOut>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : ObjectMergeNode<InOut>
    +prependOnceListener(eventName: string | symbol, listener: Function) : ObjectMergeNode<InOut>
    +process(frame: InOut, options: PushOptions) : Promise<InOut>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : ObjectMergeNode<InOut>
    +removeListener(eventName: string | symbol, listener: Function) : ObjectMergeNode<InOut>
    +setMaxListeners(n: number) : ObjectMergeNode<InOut>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setOptions(options: NodeOptions) : ObjectMergeNode<InOut>
    #findNodeDataService() : NodeDataService<NodeData>
    #getNodeData<T>(dataObject: DataObject, defaultData: T) : Promise<any>
    #setNodeData(dataObject: DataObject, data: any) : Promise<NodeData>
}
"FrameMergeNode<InOut>" <|- - "ObjectMergeNode<InOut>"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 16:46:50 UTC 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>