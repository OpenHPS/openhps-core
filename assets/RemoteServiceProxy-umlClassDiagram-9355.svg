<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1162px" preserveAspectRatio="none" style="width:924px;height:1162px;background:#00000000;" version="1.1" viewBox="0 0 924 1162" width="924px" zoomAndPan="magnify"><defs><filter height="300%" id="f1mv30utobo5ig" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[406dfdf2cf133d0f013ce87171229572]
class RemoteServiceProxy<T, S>--><rect codeLine="4" fill="#FEFECE" filter="url(#f1mv30utobo5ig)" height="572.9922" id="RemoteServiceProxy&lt;T, S&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="226" y="576"/><ellipse cx="479.25" cy="592" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M482.2188,597.6406 Q481.6406,597.9375 481,598.0781 Q480.3594,598.2344 479.6563,598.2344 Q477.1563,598.2344 475.8281,596.5938 Q474.5156,594.9375 474.5156,591.8125 Q474.5156,588.6875 475.8281,587.0313 Q477.1563,585.375 479.6563,585.375 Q480.3594,585.375 481,585.5313 Q481.6563,585.6875 482.2188,585.9844 L482.2188,588.7031 Q481.5938,588.125 481,587.8594 Q480.4063,587.5781 479.7813,587.5781 Q478.4375,587.5781 477.75,588.6563 Q477.0625,589.7188 477.0625,591.8125 Q477.0625,593.9063 477.75,594.9844 Q478.4375,596.0469 479.7813,596.0469 Q480.4063,596.0469 481,595.7813 Q481.5938,595.5 482.2188,594.9219 L482.2188,597.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="169" x="499.75" y="596.1543">RemoteServiceProxy&lt;T, S&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="227" x2="909" y1="608" y2="608"/><ellipse cx="237" cy="619" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="246" y="622.2104">captureRejections : boolean</text><ellipse cx="237" cy="631.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="246" y="635.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="237" cy="644.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="246" y="647.8198">defaultMaxListeners : number</text><ellipse cx="237" cy="657.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="246" y="660.6245">errorMonitor : typeof errorMonitor</text><ellipse cx="237" cy="670.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="246" y="673.4292">logger : Function</text><ellipse cx="237" cy="683.0234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="246" y="686.2339">model : any</text><ellipse cx="237" cy="695.8281" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="246" y="699.0386">uid : string</text><polygon fill="none" points="237,703.6328,241,707.6328,237,711.6328,233,707.6328" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="246" y="711.8433">options : RemoteServiceOptions</text><polygon fill="none" points="237,716.4375,241,720.4375,237,724.4375,233,720.4375" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="61" x="246" y="724.6479">service : S</text><line style="stroke:#A80036;stroke-width:1.5;" x1="227" x2="909" y1="731.2422" y2="731.2422"/><ellipse cx="237" cy="742.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="508" x="246" y="745.4526">addListener(eventName: string | symbol, listener: Function) : RemoteServiceProxy&lt;T, S&gt;</text><ellipse cx="237" cy="755.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="287" x="246" y="758.2573">createHandler(target: T, p: PropertyKey) : Function</text><ellipse cx="237" cy="767.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="246" y="771.062">emit(name: string | symbol, args: any[]) : boolean</text><ellipse cx="237" cy="780.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="246" y="783.8667">emit(name: "ready") : boolean</text><ellipse cx="237" cy="793.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="246" y="796.6714">emit(name: "destroy") : boolean</text><ellipse cx="237" cy="806.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="246" y="809.4761">eventNames() : (string | symbol)[]</text><ellipse cx="237" cy="819.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="198" x="246" y="822.2808">get(target: T, p: PropertyKey) : any</text><ellipse cx="237" cy="831.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="246" y="835.0854">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="237" cy="844.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="246" y="847.8901">getMaxListeners() : number</text><ellipse cx="237" cy="857.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="246" y="860.6948">isReady() : boolean</text><ellipse cx="237" cy="870.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="246" y="873.4995">listenerCount(eventName: string | symbol) : number</text><ellipse cx="237" cy="883.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="246" y="886.3042">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="237" cy="895.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="246" y="899.1089">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="237" cy="908.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="456" x="246" y="911.9136">off(eventName: string | symbol, listener: Function) : RemoteServiceProxy&lt;T, S&gt;</text><ellipse cx="237" cy="921.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="455" x="246" y="924.7183">on(eventName: string | symbol, listener: Function) : RemoteServiceProxy&lt;T, S&gt;</text><ellipse cx="237" cy="934.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="246" y="937.5229">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="237" cy="947.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="436" x="246" y="950.3276">once(name: string | symbol, listener: Function) : RemoteServiceProxy&lt;T, S&gt;</text><ellipse cx="237" cy="959.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="403" x="246" y="963.1323">once(name: "destroy", listener: Function) : RemoteServiceProxy&lt;T, S&gt;</text><ellipse cx="237" cy="972.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="387" x="246" y="975.937">once(name: "build", listener: Function) : RemoteServiceProxy&lt;T, S&gt;</text><ellipse cx="237" cy="985.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="392" x="246" y="988.7417">once(name: "ready", listener: Function) : RemoteServiceProxy&lt;T, S&gt;</text><ellipse cx="237" cy="998.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="246" y="1001.5464">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="237" cy="1011.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="246" y="1014.3511">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="237" cy="1023.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="534" x="246" y="1027.1558">prependListener(eventName: string | symbol, listener: Function) : RemoteServiceProxy&lt;T, S&gt;</text><ellipse cx="237" cy="1036.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="563" x="246" y="1039.9604">prependOnceListener(eventName: string | symbol, listener: Function) : RemoteServiceProxy&lt;T, S&gt;</text><ellipse cx="237" cy="1049.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="246" y="1052.7651">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="237" cy="1062.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="411" x="246" y="1065.5698">removeAllListeners(event: string | symbol) : RemoteServiceProxy&lt;T, S&gt;</text><ellipse cx="237" cy="1075.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="530" x="246" y="1078.3745">removeListener(eventName: string | symbol, listener: Function) : RemoteServiceProxy&lt;T, S&gt;</text><ellipse cx="237" cy="1087.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="246" y="1091.1792">set(target: T, p: PropertyKey, value: any) : boolean</text><ellipse cx="237" cy="1100.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="329" x="246" y="1103.9839">setMaxListeners(n: number) : RemoteServiceProxy&lt;T, S&gt;</text><ellipse cx="237" cy="1113.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="246" y="1116.7886">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="237" cy="1126.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="272" x="246" y="1129.5933">setUID(uid: string) : RemoteServiceProxy&lt;T, S&gt;</text><polygon fill="#FFFF44" points="237,1134.1875,241,1138.1875,237,1142.1875,233,1138.1875" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="246" y="1142.3979">generateUUID() : string</text><!--MD5=[dbb8b4f13c7b21394f9d757e58732f45]
class Service--><rect codeLine="47" fill="#FEFECE" filter="url(#f1mv30utobo5ig)" height="508.9688" id="Service" style="stroke:#A80036;stroke-width:1.5;" width="684" x="9" y="7"/><ellipse cx="324.25" cy="23" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M324.3594,18.3438 L323.2031,23.4219 L325.5313,23.4219 L324.3594,18.3438 Z M322.875,16.1094 L325.8594,16.1094 L329.2188,28.5 L326.7656,28.5 L326,25.4375 L322.7188,25.4375 L321.9688,28.5 L319.5313,28.5 L322.875,16.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="45" x="344.75" y="27.1543">Service</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="39" y2="39"/><ellipse cx="20" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="29" y="53.2104">captureRejections : boolean</text><ellipse cx="20" cy="62.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="29" y="66.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="20" cy="75.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="29" y="78.8198">defaultMaxListeners : number</text><ellipse cx="20" cy="88.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="29" y="91.6245">errorMonitor : typeof errorMonitor</text><ellipse cx="20" cy="101.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="29" y="104.4292">logger : Function</text><ellipse cx="20" cy="114.0234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="29" y="117.2339">model : any</text><ellipse cx="20" cy="126.8281" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="29" y="130.0386">uid : string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="136.6328" y2="136.6328"/><ellipse cx="20" cy="147.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="393" x="29" y="150.8433">addListener(eventName: string | symbol, listener: Function) : Service</text><ellipse cx="20" cy="160.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="29" y="163.6479">emit(name: string | symbol, args: any[]) : boolean</text><ellipse cx="20" cy="173.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="29" y="176.4526">emit(name: "ready") : boolean</text><ellipse cx="20" cy="186.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="29" y="189.2573">emit(name: "destroy") : boolean</text><ellipse cx="20" cy="198.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="29" y="202.062">eventNames() : (string | symbol)[]</text><ellipse cx="20" cy="211.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="29" y="214.8667">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="20" cy="224.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="29" y="227.6714">getMaxListeners() : number</text><ellipse cx="20" cy="237.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="29" y="240.4761">isReady() : boolean</text><ellipse cx="20" cy="250.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="29" y="253.2808">listenerCount(eventName: string | symbol) : number</text><ellipse cx="20" cy="262.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="29" y="266.0854">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="20" cy="275.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="29" y="278.8901">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="288.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="29" y="291.6948">off(eventName: string | symbol, listener: Function) : Service</text><ellipse cx="20" cy="301.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="340" x="29" y="304.4995">on(eventName: string | symbol, listener: Function) : Service</text><ellipse cx="20" cy="314.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="29" y="317.3042">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="20" cy="326.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="321" x="29" y="330.1089">once(name: string | symbol, listener: Function) : Service</text><ellipse cx="20" cy="339.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="29" y="342.9136">once(name: "destroy", listener: Function) : Service</text><ellipse cx="20" cy="352.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="272" x="29" y="355.7183">once(name: "build", listener: Function) : Service</text><ellipse cx="20" cy="365.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="277" x="29" y="368.5229">once(name: "ready", listener: Function) : Service</text><ellipse cx="20" cy="378.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="29" y="381.3276">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="390.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="29" y="394.1323">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="403.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="419" x="29" y="406.937">prependListener(eventName: string | symbol, listener: Function) : Service</text><ellipse cx="20" cy="416.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="448" x="29" y="419.7417">prependOnceListener(eventName: string | symbol, listener: Function) : Service</text><ellipse cx="20" cy="429.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="29" y="432.5464">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="442.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="29" y="445.3511">removeAllListeners(event: string | symbol) : Service</text><ellipse cx="20" cy="454.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="415" x="29" y="458.1558">removeListener(eventName: string | symbol, listener: Function) : Service</text><ellipse cx="20" cy="467.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="214" x="29" y="470.9604">setMaxListeners(n: number) : Service</text><ellipse cx="20" cy="480.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="29" y="483.7651">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="20" cy="493.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="29" y="496.5698">setUID(uid: string) : Service</text><polygon fill="#FFFF44" points="20,501.1641,24,505.1641,20,509.1641,16,505.1641" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="29" y="509.3745">generateUUID() : string</text><!--MD5=[3991d1b48cf9ebb9c02225999c5e668a]
class ProxyHandler<T>--><rect codeLine="86" fill="#FEFECE" filter="url(#f1mv30utobo5ig)" height="23.9688" id="ProxyHandler&lt;T&gt;" style="stroke:#A80036;stroke-width:1.5;" width="115" x="728.5" y="249.5"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="109" x="731.5" y="265.6387">ProxyHandler&lt;T&gt;</text><!--MD5=[53c969134ea1bf79cb2298623678ad49]
reverse link Service to RemoteServiceProxy<T, S>--><path codeLine="85" d="M449.78,535.18 C454.69,548.72 459.62,562.33 464.54,575.91 " fill="none" id="Service-backto-RemoteServiceProxy&lt;T, S&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="443.1,537.28,442.87,516.1,456.26,532.52,443.1,537.28" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[6e1fe8cbf0e374031f836b5ea189c8ef]
reverse link ProxyHandler<T> to RemoteServiceProxy<T, S>--><path codeLine="88" d="M778.03,293.23 C765.31,341.25 739.02,436.8 711,516 C704.07,535.58 696.64,555.67 688.94,575.83 " fill="none" id="ProxyHandler&lt;T&gt;-backto-RemoteServiceProxy&lt;T, S&gt;" style="stroke:#A80036;stroke-width:1.0;stroke-dasharray:7.0,7.0;"/><polygon fill="none" points="771.29,291.33,783.12,273.75,784.83,294.87,771.29,291.33" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[8044c740f7a421062980cf0d503daa00]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "RemoteServiceProxy<T, S>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +logger : Function
    +model : any
    +uid : string
    #options : RemoteServiceOptions
    #service : S
    +addListener(eventName: string | symbol, listener: Function) : RemoteServiceProxy<T, S>
    +createHandler(target: T, p: PropertyKey) : Function
    +emit(name: string | symbol, args: any[]) : boolean
    +emit(name: "ready") : boolean
    +emit(name: "destroy") : boolean
    +eventNames() : (string | symbol)[]
    +get(target: T, p: PropertyKey) : any
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +isReady() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : RemoteServiceProxy<T, S>
    +on(eventName: string | symbol, listener: Function) : RemoteServiceProxy<T, S>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(name: string | symbol, listener: Function) : RemoteServiceProxy<T, S>
    +once(name: "destroy", listener: Function) : RemoteServiceProxy<T, S>
    +once(name: "build", listener: Function) : RemoteServiceProxy<T, S>
    +once(name: "ready", listener: Function) : RemoteServiceProxy<T, S>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : RemoteServiceProxy<T, S>
    +prependOnceListener(eventName: string | symbol, listener: Function) : RemoteServiceProxy<T, S>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : RemoteServiceProxy<T, S>
    +removeListener(eventName: string | symbol, listener: Function) : RemoteServiceProxy<T, S>
    +set(target: T, p: PropertyKey, value: any) : boolean
    +setMaxListeners(n: number) : RemoteServiceProxy<T, S>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setUID(uid: string) : RemoteServiceProxy<T, S>
    #generateUUID() : string
}
abstract class "Service" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +logger : Function
    +model : any
    +uid : string
    +addListener(eventName: string | symbol, listener: Function) : Service
    +emit(name: string | symbol, args: any[]) : boolean
    +emit(name: "ready") : boolean
    +emit(name: "destroy") : boolean
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +isReady() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Service
    +on(eventName: string | symbol, listener: Function) : Service
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(name: string | symbol, listener: Function) : Service
    +once(name: "destroy", listener: Function) : Service
    +once(name: "build", listener: Function) : Service
    +once(name: "ready", listener: Function) : Service
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : Service
    +prependOnceListener(eventName: string | symbol, listener: Function) : Service
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : Service
    +removeListener(eventName: string | symbol, listener: Function) : Service
    +setMaxListeners(n: number) : Service
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setUID(uid: string) : Service
    #generateUUID() : string
}
"Service" <|- - "RemoteServiceProxy<T, S>"
class "ProxyHandler<T>"
hide "ProxyHandler<T>" circle
"ProxyHandler<T>" <|.. "RemoteServiceProxy<T, S>"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 16:46:50 UTC 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>