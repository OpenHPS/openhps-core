<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2000px" preserveAspectRatio="none" style="width:4306px;height:2000px;background:#00000000;" version="1.1" viewBox="0 0 4306 2000" width="4306px" zoomAndPan="magnify"><defs><filter height="300%" id="fqaybzro6oxln" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[56778e99bf8b6cf989f5879aab54d3b1]
class DataService<I, T>--><rect codeLine="4" fill="#FEFECE" filter="url(#fqaybzro6oxln)" height="637.0156" id="DataService&lt;I, T&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="1810" y="576"/><ellipse cx="2090.75" cy="592" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2090.8594,587.3438 L2089.7031,592.4219 L2092.0313,592.4219 L2090.8594,587.3438 Z M2089.375,585.1094 L2092.3594,585.1094 L2095.7188,597.5 L2093.2656,597.5 L2092.5,594.4375 L2089.2188,594.4375 L2088.4688,597.5 L2086.0313,597.5 L2089.375,585.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="114" x="2111.25" y="596.1543">DataService&lt;I, T&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1811" x2="2493" y1="608" y2="608"/><ellipse cx="1821" cy="619" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="1830" y="622.2104">captureRejections : boolean</text><ellipse cx="1821" cy="631.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="1830" y="635.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="1821" cy="644.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="1830" y="647.8198">defaultMaxListeners : number</text><ellipse cx="1821" cy="657.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="1830" y="660.6245">errorMonitor : typeof errorMonitor</text><ellipse cx="1821" cy="670.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="1830" y="673.4292">logger : Function</text><ellipse cx="1821" cy="683.0234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="1830" y="686.2339">model : any</text><ellipse cx="1821" cy="695.8281" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="1830" y="699.0386">priority : number</text><ellipse cx="1821" cy="708.6328" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="1830" y="711.8433">uid : string</text><polygon fill="none" points="1821,716.4375,1825,720.4375,1821,724.4375,1817,720.4375" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="1830" y="724.6479">driver : DataServiceDriver&lt;I, T&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1811" x2="2493" y1="731.2422" y2="731.2422"/><ellipse cx="1821" cy="742.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="455" x="1830" y="745.4526">addListener(eventName: string | symbol, listener: Function) : DataService&lt;I, T&gt;</text><ellipse cx="1821" cy="755.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="287" x="1830" y="758.2573">count(query: FilterQuery&lt;T&gt;) : Promise&lt;number&gt;</text><ellipse cx="1821" cy="767.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="1830" y="771.062">delete(id: I) : Promise&lt;void&gt;</text><ellipse cx="1821" cy="780.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="277" x="1830" y="783.8667">deleteAll(filter: FilterQuery&lt;T&gt;) : Promise&lt;void&gt;</text><ellipse cx="1821" cy="793.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="1830" y="796.6714">emit(name: string | symbol, args: any[]) : boolean</text><ellipse cx="1821" cy="806.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="1830" y="809.4761">emit(name: "ready") : boolean</text><ellipse cx="1821" cy="819.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="1830" y="822.2808">emit(name: "destroy") : boolean</text><ellipse cx="1821" cy="831.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="1830" y="835.0854">eventNames() : (string | symbol)[]</text><ellipse cx="1821" cy="844.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="1830" y="847.8901">findAll(query: FilterQuery&lt;T&gt;, options: FindOptions) : Promise&lt;T[]&gt;</text><ellipse cx="1821" cy="857.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="1830" y="860.6948">findByUID(uid: I) : Promise&lt;T&gt;</text><ellipse cx="1821" cy="870.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="388" x="1830" y="873.4995">findOne(query: FilterQuery&lt;T&gt;, options: FindOptions) : Promise&lt;T&gt;</text><ellipse cx="1821" cy="883.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="1830" y="886.3042">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="1821" cy="895.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="1830" y="899.1089">getMaxListeners() : number</text><ellipse cx="1821" cy="908.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="203" x="1830" y="911.9136">insert(id: I, object: T) : Promise&lt;T&gt;</text><ellipse cx="1821" cy="921.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="1830" y="924.7183">isReady() : boolean</text><ellipse cx="1821" cy="934.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="1830" y="937.5229">listenerCount(eventName: string | symbol) : number</text><ellipse cx="1821" cy="947.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="1830" y="950.3276">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="1821" cy="959.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="1830" y="963.1323">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="1821" cy="972.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="403" x="1830" y="975.937">off(eventName: string | symbol, listener: Function) : DataService&lt;I, T&gt;</text><ellipse cx="1821" cy="985.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="402" x="1830" y="988.7417">on(eventName: string | symbol, listener: Function) : DataService&lt;I, T&gt;</text><ellipse cx="1821" cy="998.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="1830" y="1001.5464">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="1821" cy="1011.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="383" x="1830" y="1014.3511">once(name: string | symbol, listener: Function) : DataService&lt;I, T&gt;</text><ellipse cx="1821" cy="1023.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="350" x="1830" y="1027.1558">once(name: "destroy", listener: Function) : DataService&lt;I, T&gt;</text><ellipse cx="1821" cy="1036.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="334" x="1830" y="1039.9604">once(name: "build", listener: Function) : DataService&lt;I, T&gt;</text><ellipse cx="1821" cy="1049.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="339" x="1830" y="1052.7651">once(name: "ready", listener: Function) : DataService&lt;I, T&gt;</text><ellipse cx="1821" cy="1062.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="1830" y="1065.5698">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="1821" cy="1075.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="1830" y="1078.3745">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="1821" cy="1087.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="481" x="1830" y="1091.1792">prependListener(eventName: string | symbol, listener: Function) : DataService&lt;I, T&gt;</text><ellipse cx="1821" cy="1100.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="510" x="1830" y="1103.9839">prependOnceListener(eventName: string | symbol, listener: Function) : DataService&lt;I, T&gt;</text><ellipse cx="1821" cy="1113.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="1830" y="1116.7886">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="1821" cy="1126.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="358" x="1830" y="1129.5933">removeAllListeners(event: string | symbol) : DataService&lt;I, T&gt;</text><ellipse cx="1821" cy="1139.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="477" x="1830" y="1142.3979">removeListener(eventName: string | symbol, listener: Function) : DataService&lt;I, T&gt;</text><ellipse cx="1821" cy="1151.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="276" x="1830" y="1155.2026">setMaxListeners(n: number) : DataService&lt;I, T&gt;</text><ellipse cx="1821" cy="1164.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="1830" y="1168.0073">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="1821" cy="1177.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="1830" y="1180.812">setPriority(value: number) : DataService&lt;I, T&gt;</text><ellipse cx="1821" cy="1190.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="219" x="1830" y="1193.6167">setUID(uid: string) : DataService&lt;I, T&gt;</text><polygon fill="#FFFF44" points="1821,1198.2109,1825,1202.2109,1821,1206.2109,1817,1202.2109" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="1830" y="1206.4214">generateUUID() : string</text><!--MD5=[dbb8b4f13c7b21394f9d757e58732f45]
class Service--><rect codeLine="52" fill="#FEFECE" filter="url(#fqaybzro6oxln)" height="508.9688" id="Service" style="stroke:#A80036;stroke-width:1.5;" width="684" x="1810" y="7"/><ellipse cx="2125.25" cy="23" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2125.3594,18.3438 L2124.2031,23.4219 L2126.5313,23.4219 L2125.3594,18.3438 Z M2123.875,16.1094 L2126.8594,16.1094 L2130.2188,28.5 L2127.7656,28.5 L2127,25.4375 L2123.7188,25.4375 L2122.9688,28.5 L2120.5313,28.5 L2123.875,16.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="45" x="2145.75" y="27.1543">Service</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1811" x2="2493" y1="39" y2="39"/><ellipse cx="1821" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="1830" y="53.2104">captureRejections : boolean</text><ellipse cx="1821" cy="62.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="1830" y="66.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="1821" cy="75.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="1830" y="78.8198">defaultMaxListeners : number</text><ellipse cx="1821" cy="88.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="1830" y="91.6245">errorMonitor : typeof errorMonitor</text><ellipse cx="1821" cy="101.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="1830" y="104.4292">logger : Function</text><ellipse cx="1821" cy="114.0234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="1830" y="117.2339">model : any</text><ellipse cx="1821" cy="126.8281" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="1830" y="130.0386">uid : string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1811" x2="2493" y1="136.6328" y2="136.6328"/><ellipse cx="1821" cy="147.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="393" x="1830" y="150.8433">addListener(eventName: string | symbol, listener: Function) : Service</text><ellipse cx="1821" cy="160.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="1830" y="163.6479">emit(name: string | symbol, args: any[]) : boolean</text><ellipse cx="1821" cy="173.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="1830" y="176.4526">emit(name: "ready") : boolean</text><ellipse cx="1821" cy="186.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="1830" y="189.2573">emit(name: "destroy") : boolean</text><ellipse cx="1821" cy="198.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="1830" y="202.062">eventNames() : (string | symbol)[]</text><ellipse cx="1821" cy="211.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="1830" y="214.8667">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="1821" cy="224.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="1830" y="227.6714">getMaxListeners() : number</text><ellipse cx="1821" cy="237.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="1830" y="240.4761">isReady() : boolean</text><ellipse cx="1821" cy="250.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="1830" y="253.2808">listenerCount(eventName: string | symbol) : number</text><ellipse cx="1821" cy="262.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="1830" y="266.0854">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="1821" cy="275.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="1830" y="278.8901">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="1821" cy="288.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="1830" y="291.6948">off(eventName: string | symbol, listener: Function) : Service</text><ellipse cx="1821" cy="301.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="340" x="1830" y="304.4995">on(eventName: string | symbol, listener: Function) : Service</text><ellipse cx="1821" cy="314.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="1830" y="317.3042">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="1821" cy="326.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="321" x="1830" y="330.1089">once(name: string | symbol, listener: Function) : Service</text><ellipse cx="1821" cy="339.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="1830" y="342.9136">once(name: "destroy", listener: Function) : Service</text><ellipse cx="1821" cy="352.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="272" x="1830" y="355.7183">once(name: "build", listener: Function) : Service</text><ellipse cx="1821" cy="365.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="277" x="1830" y="368.5229">once(name: "ready", listener: Function) : Service</text><ellipse cx="1821" cy="378.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="1830" y="381.3276">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="1821" cy="390.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="1830" y="394.1323">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="1821" cy="403.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="419" x="1830" y="406.937">prependListener(eventName: string | symbol, listener: Function) : Service</text><ellipse cx="1821" cy="416.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="448" x="1830" y="419.7417">prependOnceListener(eventName: string | symbol, listener: Function) : Service</text><ellipse cx="1821" cy="429.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="1830" y="432.5464">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="1821" cy="442.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="1830" y="445.3511">removeAllListeners(event: string | symbol) : Service</text><ellipse cx="1821" cy="454.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="415" x="1830" y="458.1558">removeListener(eventName: string | symbol, listener: Function) : Service</text><ellipse cx="1821" cy="467.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="214" x="1830" y="470.9604">setMaxListeners(n: number) : Service</text><ellipse cx="1821" cy="480.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="1830" y="483.7651">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="1821" cy="493.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="1830" y="496.5698">setUID(uid: string) : Service</text><polygon fill="#FFFF44" points="1821,501.1641,1825,505.1641,1821,509.1641,1817,505.1641" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="1830" y="509.3745">generateUUID() : string</text><!--MD5=[cc936ad24b85db67915427e6ffdd434a]
class DataObjectService<T>--><rect codeLine="91" fill="#FEFECE" filter="url(#fqaybzro6oxln)" height="713.8438" id="DataObjectService&lt;T&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="9" y="1273"/><ellipse cx="275.75" cy="1289" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M278.7188,1294.6406 Q278.1406,1294.9375 277.5,1295.0781 Q276.8594,1295.2344 276.1563,1295.2344 Q273.6563,1295.2344 272.3281,1293.5938 Q271.0156,1291.9375 271.0156,1288.8125 Q271.0156,1285.6875 272.3281,1284.0313 Q273.6563,1282.375 276.1563,1282.375 Q276.8594,1282.375 277.5,1282.5313 Q278.1563,1282.6875 278.7188,1282.9844 L278.7188,1285.7031 Q278.0938,1285.125 277.5,1284.8594 Q276.9063,1284.5781 276.2813,1284.5781 Q274.9375,1284.5781 274.25,1285.6563 Q273.5625,1286.7188 273.5625,1288.8125 Q273.5625,1290.9063 274.25,1291.9844 Q274.9375,1293.0469 276.2813,1293.0469 Q276.9063,1293.0469 277.5,1292.7813 Q278.0938,1292.5 278.7188,1291.9219 L278.7188,1294.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="142" x="296.25" y="1293.1543">DataObjectService&lt;T&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="1305" y2="1305"/><ellipse cx="20" cy="1316" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="29" y="1319.2104">captureRejections : boolean</text><ellipse cx="20" cy="1328.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="29" y="1332.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="20" cy="1341.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="29" y="1344.8198">defaultMaxListeners : number</text><ellipse cx="20" cy="1354.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="29" y="1357.6245">errorMonitor : typeof errorMonitor</text><ellipse cx="20" cy="1367.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="29" y="1370.4292">logger : Function</text><ellipse cx="20" cy="1380.0234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="29" y="1383.2339">model : any</text><ellipse cx="20" cy="1392.8281" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="29" y="1396.0386">priority : number</text><ellipse cx="20" cy="1405.6328" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="29" y="1408.8433">uid : string</text><polygon fill="none" points="20,1413.4375,24,1417.4375,20,1421.4375,16,1417.4375" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="29" y="1421.6479">driver : DataServiceDriver&lt;string, T&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="1428.2422" y2="1428.2422"/><ellipse cx="20" cy="1439.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="480" x="29" y="1442.4526">addListener(eventName: string | symbol, listener: Function) : DataObjectService&lt;T&gt;</text><ellipse cx="20" cy="1452.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="287" x="29" y="1455.2573">count(query: FilterQuery&lt;T&gt;) : Promise&lt;number&gt;</text><ellipse cx="20" cy="1464.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="29" y="1468.062">delete(id: string) : Promise&lt;void&gt;</text><ellipse cx="20" cy="1477.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="277" x="29" y="1480.8667">deleteAll(filter: FilterQuery&lt;T&gt;) : Promise&lt;void&gt;</text><ellipse cx="20" cy="1490.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="29" y="1493.6714">emit(name: string | symbol, args: any[]) : boolean</text><ellipse cx="20" cy="1503.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="29" y="1506.4761">emit(name: "ready") : boolean</text><ellipse cx="20" cy="1516.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="29" y="1519.2808">emit(name: "destroy") : boolean</text><ellipse cx="20" cy="1528.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="29" y="1532.0854">eventNames() : (string | symbol)[]</text><ellipse cx="20" cy="1541.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="261" x="29" y="1544.8901">findAfter(timestamp: number) : Promise&lt;T[]&gt;</text><ellipse cx="20" cy="1554.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="29" y="1557.6948">findAll(query: FilterQuery&lt;T&gt;, options: FindOptions) : Promise&lt;T[]&gt;</text><ellipse cx="20" cy="1567.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="272" x="29" y="1570.4995">findBefore(timestamp: number) : Promise&lt;T[]&gt;</text><ellipse cx="20" cy="1580.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="323" x="29" y="1583.3042">findByDisplayName(displayName: string) : Promise&lt;T[]&gt;</text><ellipse cx="20" cy="1592.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="29" y="1596.1089">findByParentUID(parentUID: string) : Promise&lt;T[]&gt;</text><ellipse cx="20" cy="1605.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="29" y="1608.9136">findByPosition(position: AbsolutePosition) : Promise&lt;T[]&gt;</text><ellipse cx="20" cy="1618.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="204" x="29" y="1621.7183">findByUID(uid: string) : Promise&lt;T&gt;</text><ellipse cx="20" cy="1631.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="388" x="29" y="1634.5229">findOne(query: FilterQuery&lt;T&gt;, options: FindOptions) : Promise&lt;T&gt;</text><ellipse cx="20" cy="1644.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="29" y="1647.3276">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="20" cy="1656.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="29" y="1660.1323">getMaxListeners() : number</text><ellipse cx="20" cy="1669.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="29" y="1672.937">insert(id: string, object: T) : Promise&lt;T&gt;</text><ellipse cx="20" cy="1682.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="29" y="1685.7417">insertObject(object: T) : Promise&lt;T&gt;</text><ellipse cx="20" cy="1695.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="29" y="1698.5464">isReady() : boolean</text><ellipse cx="20" cy="1708.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="29" y="1711.3511">listenerCount(eventName: string | symbol) : number</text><ellipse cx="20" cy="1720.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="29" y="1724.1558">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="20" cy="1733.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="29" y="1736.9604">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="1746.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="428" x="29" y="1749.7651">off(eventName: string | symbol, listener: Function) : DataObjectService&lt;T&gt;</text><ellipse cx="20" cy="1759.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="427" x="29" y="1762.5698">on(eventName: string | symbol, listener: Function) : DataObjectService&lt;T&gt;</text><ellipse cx="20" cy="1772.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="29" y="1775.3745">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="20" cy="1784.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="408" x="29" y="1788.1792">once(name: string | symbol, listener: Function) : DataObjectService&lt;T&gt;</text><ellipse cx="20" cy="1797.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="375" x="29" y="1800.9839">once(name: "destroy", listener: Function) : DataObjectService&lt;T&gt;</text><ellipse cx="20" cy="1810.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="359" x="29" y="1813.7886">once(name: "build", listener: Function) : DataObjectService&lt;T&gt;</text><ellipse cx="20" cy="1823.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="364" x="29" y="1826.5933">once(name: "ready", listener: Function) : DataObjectService&lt;T&gt;</text><ellipse cx="20" cy="1836.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="29" y="1839.3979">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="1848.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="29" y="1852.2026">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="1861.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="506" x="29" y="1865.0073">prependListener(eventName: string | symbol, listener: Function) : DataObjectService&lt;T&gt;</text><ellipse cx="20" cy="1874.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="535" x="29" y="1877.812">prependOnceListener(eventName: string | symbol, listener: Function) : DataObjectService&lt;T&gt;</text><ellipse cx="20" cy="1887.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="29" y="1890.6167">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="1900.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="383" x="29" y="1903.4214">removeAllListeners(event: string | symbol) : DataObjectService&lt;T&gt;</text><ellipse cx="20" cy="1913.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="502" x="29" y="1916.2261">removeListener(eventName: string | symbol, listener: Function) : DataObjectService&lt;T&gt;</text><ellipse cx="20" cy="1925.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="29" y="1929.0308">setMaxListeners(n: number) : DataObjectService&lt;T&gt;</text><ellipse cx="20" cy="1938.625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="29" y="1941.8354">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="20" cy="1951.4297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="29" y="1954.6401">setPriority(value: number) : DataObjectService&lt;T&gt;</text><ellipse cx="20" cy="1964.2344" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="29" y="1967.4448">setUID(uid: string) : DataObjectService&lt;T&gt;</text><polygon fill="#FFFF44" points="20,1972.0391,24,1976.0391,20,1980.0391,16,1976.0391" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="29" y="1980.2495">generateUUID() : string</text><!--MD5=[2cb63121440fc9d2efbe3fd3aaa2ee9e]
class TrajectoryService<Trajectory>--><rect codeLine="146" fill="#FEFECE" filter="url(#fqaybzro6oxln)" height="701.0391" id="TrajectoryService&lt;Trajectory&gt;" style="stroke:#A80036;stroke-width:1.5;" width="688" x="728" y="1279.5"/><ellipse cx="973.25" cy="1295.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M976.2188,1301.1406 Q975.6406,1301.4375 975,1301.5781 Q974.3594,1301.7344 973.6563,1301.7344 Q971.1563,1301.7344 969.8281,1300.0938 Q968.5156,1298.4375 968.5156,1295.3125 Q968.5156,1292.1875 969.8281,1290.5313 Q971.1563,1288.875 973.6563,1288.875 Q974.3594,1288.875 975,1289.0313 Q975.6563,1289.1875 976.2188,1289.4844 L976.2188,1292.2031 Q975.5938,1291.625 975,1291.3594 Q974.4063,1291.0781 973.7813,1291.0781 Q972.4375,1291.0781 971.75,1292.1563 Q971.0625,1293.2188 971.0625,1295.3125 Q971.0625,1297.4063 971.75,1298.4844 Q972.4375,1299.5469 973.7813,1299.5469 Q974.4063,1299.5469 975,1299.2813 Q975.5938,1299 976.2188,1298.4219 L976.2188,1301.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="189" x="993.75" y="1299.6543">TrajectoryService&lt;Trajectory&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="729" x2="1415" y1="1311.5" y2="1311.5"/><ellipse cx="739" cy="1322.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="748" y="1325.7104">captureRejections : boolean</text><ellipse cx="739" cy="1335.3047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="748" y="1338.5151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="739" cy="1348.1094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="748" y="1351.3198">defaultMaxListeners : number</text><ellipse cx="739" cy="1360.9141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="748" y="1364.1245">errorMonitor : typeof errorMonitor</text><ellipse cx="739" cy="1373.7188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="748" y="1376.9292">logger : Function</text><ellipse cx="739" cy="1386.5234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="230" x="748" y="1389.7339">model : Model&lt;DataFrame, DataFrame&gt;</text><ellipse cx="739" cy="1399.3281" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="748" y="1402.5386">priority : number</text><ellipse cx="739" cy="1412.1328" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="748" y="1415.3433">uid : string</text><polygon fill="none" points="739,1419.9375,743,1423.9375,739,1427.9375,735,1423.9375" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="263" x="748" y="1428.1479">driver : DataServiceDriver&lt;string, Trajectory&gt;</text><polygon fill="none" points="739,1432.7422,743,1436.7422,739,1440.7422,735,1436.7422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="197" x="748" y="1440.9526">options : TrajectoryServiceOptions</text><line style="stroke:#A80036;stroke-width:1.5;" x1="729" x2="1415" y1="1447.5469" y2="1447.5469"/><ellipse cx="739" cy="1458.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="525" x="748" y="1461.7573">addListener(eventName: string | symbol, listener: Function) : TrajectoryService&lt;Trajectory&gt;</text><ellipse cx="739" cy="1471.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="399" x="748" y="1474.562">appendPosition(object: DataObject, uid: string) : Promise&lt;Trajectory&gt;</text><ellipse cx="739" cy="1484.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="337" x="748" y="1487.3667">count(query: FilterQuery&lt;Trajectory&gt;) : Promise&lt;number&gt;</text><ellipse cx="739" cy="1496.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="748" y="1500.1714">delete(id: string) : Promise&lt;void&gt;</text><ellipse cx="739" cy="1509.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="327" x="748" y="1512.9761">deleteAll(filter: FilterQuery&lt;Trajectory&gt;) : Promise&lt;void&gt;</text><ellipse cx="739" cy="1522.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="748" y="1525.7808">emit(name: string | symbol, args: any[]) : boolean</text><ellipse cx="739" cy="1535.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="748" y="1538.5854">emit(name: "ready") : boolean</text><ellipse cx="739" cy="1548.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="748" y="1551.3901">emit(name: "destroy") : boolean</text><ellipse cx="739" cy="1560.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="748" y="1564.1948">eventNames() : (string | symbol)[]</text><ellipse cx="739" cy="1573.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="486" x="748" y="1576.9995">findAll(query: FilterQuery&lt;Trajectory&gt;, options: FindOptions) : Promise&lt;Trajectory[]&gt;</text><ellipse cx="739" cy="1586.5938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="254" x="748" y="1589.8042">findByUID(uid: string) : Promise&lt;Trajectory&gt;</text><ellipse cx="739" cy="1599.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="412" x="748" y="1602.6089">findCurrentTrajectory(object: string | DataObject) : Promise&lt;Trajectory&gt;</text><ellipse cx="739" cy="1612.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="488" x="748" y="1615.4136">findOne(query: FilterQuery&lt;Trajectory&gt;, options: FindOptions) : Promise&lt;Trajectory&gt;</text><ellipse cx="739" cy="1625.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="364" x="748" y="1628.2183">findTrajectories(object: string | DataObject) : Promise&lt;string[]&gt;</text><ellipse cx="739" cy="1637.8125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="662" x="748" y="1641.0229">findTrajectoryByRange(object: string | DataObject, start: number | Date, end: number | Date) : Promise&lt;Trajectory&gt;</text><ellipse cx="739" cy="1650.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="748" y="1653.8276">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="739" cy="1663.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="748" y="1666.6323">getMaxListeners() : number</text><ellipse cx="739" cy="1676.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="748" y="1679.437">insert(id: string, object: Trajectory) : Promise&lt;Trajectory&gt;</text><ellipse cx="739" cy="1689.0313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="748" y="1692.2417">isReady() : boolean</text><ellipse cx="739" cy="1701.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="748" y="1705.0464">listenerCount(eventName: string | symbol) : number</text><ellipse cx="739" cy="1714.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="748" y="1717.8511">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="739" cy="1727.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="748" y="1730.6558">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="739" cy="1740.25" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="473" x="748" y="1743.4604">off(eventName: string | symbol, listener: Function) : TrajectoryService&lt;Trajectory&gt;</text><ellipse cx="739" cy="1753.0547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="472" x="748" y="1756.2651">on(eventName: string | symbol, listener: Function) : TrajectoryService&lt;Trajectory&gt;</text><ellipse cx="739" cy="1765.8594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="748" y="1769.0698">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="739" cy="1778.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="453" x="748" y="1781.8745">once(name: string | symbol, listener: Function) : TrajectoryService&lt;Trajectory&gt;</text><ellipse cx="739" cy="1791.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="420" x="748" y="1794.6792">once(name: "destroy", listener: Function) : TrajectoryService&lt;Trajectory&gt;</text><ellipse cx="739" cy="1804.2734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="404" x="748" y="1807.4839">once(name: "build", listener: Function) : TrajectoryService&lt;Trajectory&gt;</text><ellipse cx="739" cy="1817.0781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="409" x="748" y="1820.2886">once(name: "ready", listener: Function) : TrajectoryService&lt;Trajectory&gt;</text><ellipse cx="739" cy="1829.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="748" y="1833.0933">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="739" cy="1842.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="748" y="1845.8979">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="739" cy="1855.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="551" x="748" y="1858.7026">prependListener(eventName: string | symbol, listener: Function) : TrajectoryService&lt;Trajectory&gt;</text><ellipse cx="739" cy="1868.2969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="580" x="748" y="1871.5073">prependOnceListener(eventName: string | symbol, listener: Function) : TrajectoryService&lt;Trajectory&gt;</text><ellipse cx="739" cy="1881.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="748" y="1884.312">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="739" cy="1893.9063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="428" x="748" y="1897.1167">removeAllListeners(event: string | symbol) : TrajectoryService&lt;Trajectory&gt;</text><ellipse cx="739" cy="1906.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="547" x="748" y="1909.9214">removeListener(eventName: string | symbol, listener: Function) : TrajectoryService&lt;Trajectory&gt;</text><ellipse cx="739" cy="1919.5156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="346" x="748" y="1922.7261">setMaxListeners(n: number) : TrajectoryService&lt;Trajectory&gt;</text><ellipse cx="739" cy="1932.3203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="748" y="1935.5308">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="739" cy="1945.125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="334" x="748" y="1948.3354">setPriority(value: number) : TrajectoryService&lt;Trajectory&gt;</text><ellipse cx="739" cy="1957.9297" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="748" y="1961.1401">setUID(uid: string) : TrajectoryService&lt;Trajectory&gt;</text><polygon fill="#FFFF44" points="739,1965.7344,743,1969.7344,739,1973.7344,735,1969.7344" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="748" y="1973.9448">generateUUID() : string</text><!--MD5=[70f8411ba81d4758804383c71b5ba3b6]
class NodeDataService<T>--><rect codeLine="200" fill="#FEFECE" filter="url(#fqaybzro6oxln)" height="675.4297" id="NodeDataService&lt;T&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="1451" y="1292.5"/><ellipse cx="1721.25" cy="1308.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M1724.2188,1314.1406 Q1723.6406,1314.4375 1723,1314.5781 Q1722.3594,1314.7344 1721.6563,1314.7344 Q1719.1563,1314.7344 1717.8281,1313.0938 Q1716.5156,1311.4375 1716.5156,1308.3125 Q1716.5156,1305.1875 1717.8281,1303.5313 Q1719.1563,1301.875 1721.6563,1301.875 Q1722.3594,1301.875 1723,1302.0313 Q1723.6563,1302.1875 1724.2188,1302.4844 L1724.2188,1305.2031 Q1723.5938,1304.625 1723,1304.3594 Q1722.4063,1304.0781 1721.7813,1304.0781 Q1720.4375,1304.0781 1719.75,1305.1563 Q1719.0625,1306.2188 1719.0625,1308.3125 Q1719.0625,1310.4063 1719.75,1311.4844 Q1720.4375,1312.5469 1721.7813,1312.5469 Q1722.4063,1312.5469 1723,1312.2813 Q1723.5938,1312 1724.2188,1311.4219 L1724.2188,1314.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="135" x="1741.75" y="1312.6543">NodeDataService&lt;T&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1452" x2="2134" y1="1324.5" y2="1324.5"/><ellipse cx="1462" cy="1335.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="1471" y="1338.7104">captureRejections : boolean</text><ellipse cx="1462" cy="1348.3047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="1471" y="1351.5151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="1462" cy="1361.1094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="1471" y="1364.3198">defaultMaxListeners : number</text><ellipse cx="1462" cy="1373.9141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="1471" y="1377.1245">errorMonitor : typeof errorMonitor</text><ellipse cx="1462" cy="1386.7188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="1471" y="1389.9292">logger : Function</text><ellipse cx="1462" cy="1399.5234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="1471" y="1402.7339">model : any</text><ellipse cx="1462" cy="1412.3281" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="1471" y="1415.5386">priority : number</text><ellipse cx="1462" cy="1425.1328" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="1471" y="1428.3433">uid : string</text><polygon fill="none" points="1462,1432.9375,1466,1436.9375,1462,1440.9375,1458,1436.9375" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="1471" y="1441.1479">driver : DataServiceDriver&lt;string, T&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="1452" x2="2134" y1="1447.7422" y2="1447.7422"/><ellipse cx="1462" cy="1458.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="473" x="1471" y="1461.9526">addListener(eventName: string | symbol, listener: Function) : NodeDataService&lt;T&gt;</text><ellipse cx="1462" cy="1471.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="287" x="1471" y="1474.7573">count(query: FilterQuery&lt;T&gt;) : Promise&lt;number&gt;</text><ellipse cx="1462" cy="1484.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="1471" y="1487.562">delete(id: string) : Promise&lt;void&gt;</text><ellipse cx="1462" cy="1497.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="277" x="1471" y="1500.3667">deleteAll(filter: FilterQuery&lt;T&gt;) : Promise&lt;void&gt;</text><ellipse cx="1462" cy="1509.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="1471" y="1513.1714">emit(name: string | symbol, args: any[]) : boolean</text><ellipse cx="1462" cy="1522.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="1471" y="1525.9761">emit(name: "ready") : boolean</text><ellipse cx="1462" cy="1535.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="1471" y="1538.7808">emit(name: "destroy") : boolean</text><ellipse cx="1462" cy="1548.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="1471" y="1551.5854">eventNames() : (string | symbol)[]</text><ellipse cx="1462" cy="1561.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="1471" y="1564.3901">findAll(query: FilterQuery&lt;T&gt;, options: FindOptions) : Promise&lt;T[]&gt;</text><ellipse cx="1462" cy="1573.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="204" x="1471" y="1577.1948">findByUID(uid: string) : Promise&lt;T&gt;</text><ellipse cx="1462" cy="1586.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="424" x="1471" y="1589.9995">findData(nodeUID: string, dataObject: string | DataObject) : Promise&lt;any&gt;</text><ellipse cx="1462" cy="1599.5938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="388" x="1471" y="1602.8042">findOne(query: FilterQuery&lt;T&gt;, options: FindOptions) : Promise&lt;T&gt;</text><ellipse cx="1462" cy="1612.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="1471" y="1615.6089">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="1462" cy="1625.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="1471" y="1628.4136">getMaxListeners() : number</text><ellipse cx="1462" cy="1638.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="1471" y="1641.2183">insert(id: string, object: T) : Promise&lt;T&gt;</text><ellipse cx="1462" cy="1650.8125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="484" x="1471" y="1654.0229">insertData(nodeUID: string, dataObject: string | DataObject, data: any) : Promise&lt;T&gt;</text><ellipse cx="1462" cy="1663.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="1471" y="1666.8276">isReady() : boolean</text><ellipse cx="1462" cy="1676.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="1471" y="1679.6323">listenerCount(eventName: string | symbol) : number</text><ellipse cx="1462" cy="1689.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="1471" y="1692.437">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="1462" cy="1702.0313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="1471" y="1705.2417">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="1462" cy="1714.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="421" x="1471" y="1718.0464">off(eventName: string | symbol, listener: Function) : NodeDataService&lt;T&gt;</text><ellipse cx="1462" cy="1727.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="420" x="1471" y="1730.8511">on(eventName: string | symbol, listener: Function) : NodeDataService&lt;T&gt;</text><ellipse cx="1462" cy="1740.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="1471" y="1743.6558">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="1462" cy="1753.25" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="401" x="1471" y="1756.4604">once(name: string | symbol, listener: Function) : NodeDataService&lt;T&gt;</text><ellipse cx="1462" cy="1766.0547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="368" x="1471" y="1769.2651">once(name: "destroy", listener: Function) : NodeDataService&lt;T&gt;</text><ellipse cx="1462" cy="1778.8594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="352" x="1471" y="1782.0698">once(name: "build", listener: Function) : NodeDataService&lt;T&gt;</text><ellipse cx="1462" cy="1791.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="357" x="1471" y="1794.8745">once(name: "ready", listener: Function) : NodeDataService&lt;T&gt;</text><ellipse cx="1462" cy="1804.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="1471" y="1807.6792">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="1462" cy="1817.2734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="1471" y="1820.4839">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="1462" cy="1830.0781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="499" x="1471" y="1833.2886">prependListener(eventName: string | symbol, listener: Function) : NodeDataService&lt;T&gt;</text><ellipse cx="1462" cy="1842.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="528" x="1471" y="1846.0933">prependOnceListener(eventName: string | symbol, listener: Function) : NodeDataService&lt;T&gt;</text><ellipse cx="1462" cy="1855.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="1471" y="1858.8979">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="1462" cy="1868.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="376" x="1471" y="1871.7026">removeAllListeners(event: string | symbol) : NodeDataService&lt;T&gt;</text><ellipse cx="1462" cy="1881.2969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="495" x="1471" y="1884.5073">removeListener(eventName: string | symbol, listener: Function) : NodeDataService&lt;T&gt;</text><ellipse cx="1462" cy="1894.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="294" x="1471" y="1897.312">setMaxListeners(n: number) : NodeDataService&lt;T&gt;</text><ellipse cx="1462" cy="1906.9063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="1471" y="1910.1167">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="1462" cy="1919.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="282" x="1471" y="1922.9214">setPriority(value: number) : NodeDataService&lt;T&gt;</text><ellipse cx="1462" cy="1932.5156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="237" x="1471" y="1935.7261">setUID(uid: string) : NodeDataService&lt;T&gt;</text><polygon fill="#FFFF44" points="1462,1940.3203,1466,1944.3203,1462,1948.3203,1458,1944.3203" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="1471" y="1948.5308">generateUUID() : string</text><polygon fill="#FFFF44" points="1462,1953.125,1466,1957.125,1462,1961.125,1458,1957.125" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="1471" y="1961.3354">getUID(nodeUID: string, dataObjectUID: string) : string</text><!--MD5=[9b99c8cb6d1b9f2e96dc2035eb577d27]
class KeyValueDataService--><rect codeLine="252" fill="#FEFECE" filter="url(#fqaybzro6oxln)" height="662.625" id="KeyValueDataService" style="stroke:#A80036;stroke-width:1.5;" width="684" x="2170" y="1298.5"/><ellipse cx="2442.25" cy="1314.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M2445.2188,1320.1406 Q2444.6406,1320.4375 2444,1320.5781 Q2443.3594,1320.7344 2442.6563,1320.7344 Q2440.1563,1320.7344 2438.8281,1319.0938 Q2437.5156,1317.4375 2437.5156,1314.3125 Q2437.5156,1311.1875 2438.8281,1309.5313 Q2440.1563,1307.875 2442.6563,1307.875 Q2443.3594,1307.875 2444,1308.0313 Q2444.6563,1308.1875 2445.2188,1308.4844 L2445.2188,1311.2031 Q2444.5938,1310.625 2444,1310.3594 Q2443.4063,1310.0781 2442.7813,1310.0781 Q2441.4375,1310.0781 2440.75,1311.1563 Q2440.0625,1312.2188 2440.0625,1314.3125 Q2440.0625,1316.4063 2440.75,1317.4844 Q2441.4375,1318.5469 2442.7813,1318.5469 Q2443.4063,1318.5469 2444,1318.2813 Q2444.5938,1318 2445.2188,1317.4219 L2445.2188,1320.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="131" x="2462.75" y="1318.6543">KeyValueDataService</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2171" x2="2853" y1="1330.5" y2="1330.5"/><ellipse cx="2181" cy="1341.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="2190" y="1344.7104">captureRejections : boolean</text><ellipse cx="2181" cy="1354.3047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="2190" y="1357.5151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="2181" cy="1367.1094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="2190" y="1370.3198">defaultMaxListeners : number</text><ellipse cx="2181" cy="1379.9141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="2190" y="1383.1245">errorMonitor : typeof errorMonitor</text><ellipse cx="2181" cy="1392.7188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="2190" y="1395.9292">logger : Function</text><ellipse cx="2181" cy="1405.5234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="2190" y="1408.7339">model : any</text><ellipse cx="2181" cy="1418.3281" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="2190" y="1421.5386">priority : number</text><ellipse cx="2181" cy="1431.1328" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="2190" y="1434.3433">uid : string</text><polygon fill="none" points="2181,1438.9375,2185,1442.9375,2181,1446.9375,2177,1442.9375" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="2190" y="1447.1479">driver : DataServiceDriver&lt;string, any&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2171" x2="2853" y1="1453.7422" y2="1453.7422"/><ellipse cx="2181" cy="1464.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="470" x="2190" y="1467.9526">addListener(eventName: string | symbol, listener: Function) : KeyValueDataService</text><ellipse cx="2181" cy="1477.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="300" x="2190" y="1480.7573">count(query: FilterQuery&lt;any&gt;) : Promise&lt;number&gt;</text><ellipse cx="2181" cy="1490.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="2190" y="1493.562">delete(id: string) : Promise&lt;void&gt;</text><ellipse cx="2181" cy="1503.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="290" x="2190" y="1506.3667">deleteAll(filter: FilterQuery&lt;any&gt;) : Promise&lt;void&gt;</text><ellipse cx="2181" cy="1515.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="2190" y="1519.1714">emit(name: string | symbol, args: any[]) : boolean</text><ellipse cx="2181" cy="1528.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="2190" y="1531.9761">emit(name: "ready") : boolean</text><ellipse cx="2181" cy="1541.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="2190" y="1544.7808">emit(name: "destroy") : boolean</text><ellipse cx="2181" cy="1554.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="2190" y="1557.5854">eventNames() : (string | symbol)[]</text><ellipse cx="2181" cy="1567.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="412" x="2190" y="1570.3901">findAll(query: FilterQuery&lt;any&gt;, options: FindOptions) : Promise&lt;any[]&gt;</text><ellipse cx="2181" cy="1579.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="217" x="2190" y="1583.1948">findByUID(uid: string) : Promise&lt;any&gt;</text><ellipse cx="2181" cy="1592.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="414" x="2190" y="1595.9995">findOne(query: FilterQuery&lt;any&gt;, options: FindOptions) : Promise&lt;any&gt;</text><ellipse cx="2181" cy="1605.5938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="2190" y="1608.8042">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="2181" cy="1618.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="2190" y="1621.6089">getMaxListeners() : number</text><ellipse cx="2181" cy="1631.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="214" x="2190" y="1634.4136">getValue(key: string) : Promise&lt;any&gt;</text><ellipse cx="2181" cy="1644.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="259" x="2190" y="1647.2183">insert(id: string, object: any) : Promise&lt;any&gt;</text><ellipse cx="2181" cy="1656.8125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="2190" y="1660.0229">isReady() : boolean</text><ellipse cx="2181" cy="1669.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="2190" y="1672.8276">listenerCount(eventName: string | symbol) : number</text><ellipse cx="2181" cy="1682.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="2190" y="1685.6323">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="2181" cy="1695.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="2190" y="1698.437">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="2181" cy="1708.0313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="418" x="2190" y="1711.2417">off(eventName: string | symbol, listener: Function) : KeyValueDataService</text><ellipse cx="2181" cy="1720.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="417" x="2190" y="1724.0464">on(eventName: string | symbol, listener: Function) : KeyValueDataService</text><ellipse cx="2181" cy="1733.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="2190" y="1736.8511">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="2181" cy="1746.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="398" x="2190" y="1749.6558">once(name: string | symbol, listener: Function) : KeyValueDataService</text><ellipse cx="2181" cy="1759.25" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="365" x="2190" y="1762.4604">once(name: "destroy", listener: Function) : KeyValueDataService</text><ellipse cx="2181" cy="1772.0547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="349" x="2190" y="1775.2651">once(name: "build", listener: Function) : KeyValueDataService</text><ellipse cx="2181" cy="1784.8594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="354" x="2190" y="1788.0698">once(name: "ready", listener: Function) : KeyValueDataService</text><ellipse cx="2181" cy="1797.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="2190" y="1800.8745">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="2181" cy="1810.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="2190" y="1813.6792">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="2181" cy="1823.2734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="496" x="2190" y="1826.4839">prependListener(eventName: string | symbol, listener: Function) : KeyValueDataService</text><ellipse cx="2181" cy="1836.0781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="525" x="2190" y="1839.2886">prependOnceListener(eventName: string | symbol, listener: Function) : KeyValueDataService</text><ellipse cx="2181" cy="1848.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="2190" y="1852.0933">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="2181" cy="1861.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="373" x="2190" y="1864.8979">removeAllListeners(event: string | symbol) : KeyValueDataService</text><ellipse cx="2181" cy="1874.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="492" x="2190" y="1877.7026">removeListener(eventName: string | symbol, listener: Function) : KeyValueDataService</text><ellipse cx="2181" cy="1887.2969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="291" x="2190" y="1890.5073">setMaxListeners(n: number) : KeyValueDataService</text><ellipse cx="2181" cy="1900.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="2190" y="1903.312">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="2181" cy="1912.9063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="279" x="2190" y="1916.1167">setPriority(value: number) : KeyValueDataService</text><ellipse cx="2181" cy="1925.7109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="234" x="2190" y="1928.9214">setUID(uid: string) : KeyValueDataService</text><ellipse cx="2181" cy="1938.5156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="2190" y="1941.7261">setValue(key: string, value: any) : Promise&lt;void&gt;</text><polygon fill="#FFFF44" points="2181,1946.3203,2185,1950.3203,2181,1954.3203,2177,1950.3203" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="2190" y="1954.5308">generateUUID() : string</text><!--MD5=[ef96f1da5b4f2901fba7aa449b0117fd]
class DataFrameService<T>--><rect codeLine="303" fill="#FEFECE" filter="url(#fqaybzro6oxln)" height="688.2344" id="DataFrameService&lt;T&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="2889" y="1286"/><ellipse cx="3156.25" cy="1302" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3159.2188,1307.6406 Q3158.6406,1307.9375 3158,1308.0781 Q3157.3594,1308.2344 3156.6563,1308.2344 Q3154.1563,1308.2344 3152.8281,1306.5938 Q3151.5156,1304.9375 3151.5156,1301.8125 Q3151.5156,1298.6875 3152.8281,1297.0313 Q3154.1563,1295.375 3156.6563,1295.375 Q3157.3594,1295.375 3158,1295.5313 Q3158.6563,1295.6875 3159.2188,1295.9844 L3159.2188,1298.7031 Q3158.5938,1298.125 3158,1297.8594 Q3157.4063,1297.5781 3156.7813,1297.5781 Q3155.4375,1297.5781 3154.75,1298.6563 Q3154.0625,1299.7188 3154.0625,1301.8125 Q3154.0625,1303.9063 3154.75,1304.9844 Q3155.4375,1306.0469 3156.7813,1306.0469 Q3157.4063,1306.0469 3158,1305.7813 Q3158.5938,1305.5 3159.2188,1304.9219 L3159.2188,1307.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="141" x="3176.75" y="1306.1543">DataFrameService&lt;T&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2890" x2="3572" y1="1318" y2="1318"/><ellipse cx="2900" cy="1329" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="2909" y="1332.2104">captureRejections : boolean</text><ellipse cx="2900" cy="1341.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="2909" y="1345.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="2900" cy="1354.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="2909" y="1357.8198">defaultMaxListeners : number</text><ellipse cx="2900" cy="1367.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="2909" y="1370.6245">errorMonitor : typeof errorMonitor</text><ellipse cx="2900" cy="1380.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="2909" y="1383.4292">logger : Function</text><ellipse cx="2900" cy="1393.0234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="2909" y="1396.2339">model : any</text><ellipse cx="2900" cy="1405.8281" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="2909" y="1409.0386">priority : number</text><ellipse cx="2900" cy="1418.6328" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="2909" y="1421.8433">uid : string</text><polygon fill="none" points="2900,1426.4375,2904,1430.4375,2900,1434.4375,2896,1430.4375" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="213" x="2909" y="1434.6479">driver : DataServiceDriver&lt;string, T&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="2890" x2="3572" y1="1441.2422" y2="1441.2422"/><ellipse cx="2900" cy="1452.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="480" x="2909" y="1455.4526">addListener(eventName: string | symbol, listener: Function) : DataFrameService&lt;T&gt;</text><ellipse cx="2900" cy="1465.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="287" x="2909" y="1468.2573">count(query: FilterQuery&lt;T&gt;) : Promise&lt;number&gt;</text><ellipse cx="2900" cy="1477.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="194" x="2909" y="1481.062">delete(id: string) : Promise&lt;void&gt;</text><ellipse cx="2900" cy="1490.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="277" x="2909" y="1493.8667">deleteAll(filter: FilterQuery&lt;T&gt;) : Promise&lt;void&gt;</text><ellipse cx="2900" cy="1503.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="2909" y="1506.6714">emit(name: string | symbol, args: any[]) : boolean</text><ellipse cx="2900" cy="1516.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="2909" y="1519.4761">emit(name: "ready") : boolean</text><ellipse cx="2900" cy="1529.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="2909" y="1532.2808">emit(name: "destroy") : boolean</text><ellipse cx="2900" cy="1541.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="2909" y="1545.0854">eventNames() : (string | symbol)[]</text><ellipse cx="2900" cy="1554.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="2909" y="1557.8901">findAfter(timestamp: number, options: FindOptions) : Promise&lt;T[]&gt;</text><ellipse cx="2900" cy="1567.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="2909" y="1570.6948">findAll(query: FilterQuery&lt;T&gt;, options: FindOptions) : Promise&lt;T[]&gt;</text><ellipse cx="2900" cy="1580.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="397" x="2909" y="1583.4995">findBefore(timestamp: number, options: FindOptions) : Promise&lt;T[]&gt;</text><ellipse cx="2900" cy="1593.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="498" x="2909" y="1596.3042">findByDataObject(dataObject: string | DataObject, options: FindOptions) : Promise&lt;T[]&gt;</text><ellipse cx="2900" cy="1605.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="204" x="2909" y="1609.1089">findByUID(uid: string) : Promise&lt;T&gt;</text><ellipse cx="2900" cy="1618.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="388" x="2909" y="1621.9136">findOne(query: FilterQuery&lt;T&gt;, options: FindOptions) : Promise&lt;T&gt;</text><ellipse cx="2900" cy="1631.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="2909" y="1634.7183">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="2900" cy="1644.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="2909" y="1647.5229">getMaxListeners() : number</text><ellipse cx="2900" cy="1657.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="233" x="2909" y="1660.3276">insert(id: string, object: T) : Promise&lt;T&gt;</text><ellipse cx="2900" cy="1669.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="210" x="2909" y="1673.1323">insertFrame(frame: T) : Promise&lt;T&gt;</text><ellipse cx="2900" cy="1682.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="2909" y="1685.937">isReady() : boolean</text><ellipse cx="2900" cy="1695.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="2909" y="1698.7417">listenerCount(eventName: string | symbol) : number</text><ellipse cx="2900" cy="1708.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="2909" y="1711.5464">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="2900" cy="1721.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="2909" y="1724.3511">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="2900" cy="1733.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="428" x="2909" y="1737.1558">off(eventName: string | symbol, listener: Function) : DataFrameService&lt;T&gt;</text><ellipse cx="2900" cy="1746.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="427" x="2909" y="1749.9604">on(eventName: string | symbol, listener: Function) : DataFrameService&lt;T&gt;</text><ellipse cx="2900" cy="1759.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="2909" y="1762.7651">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="2900" cy="1772.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="408" x="2909" y="1775.5698">once(name: string | symbol, listener: Function) : DataFrameService&lt;T&gt;</text><ellipse cx="2900" cy="1785.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="375" x="2909" y="1788.3745">once(name: "destroy", listener: Function) : DataFrameService&lt;T&gt;</text><ellipse cx="2900" cy="1797.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="359" x="2909" y="1801.1792">once(name: "build", listener: Function) : DataFrameService&lt;T&gt;</text><ellipse cx="2900" cy="1810.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="364" x="2909" y="1813.9839">once(name: "ready", listener: Function) : DataFrameService&lt;T&gt;</text><ellipse cx="2900" cy="1823.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="2909" y="1826.7886">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="2900" cy="1836.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="2909" y="1839.5933">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="2900" cy="1849.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="506" x="2909" y="1852.3979">prependListener(eventName: string | symbol, listener: Function) : DataFrameService&lt;T&gt;</text><ellipse cx="2900" cy="1861.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="535" x="2909" y="1865.2026">prependOnceListener(eventName: string | symbol, listener: Function) : DataFrameService&lt;T&gt;</text><ellipse cx="2900" cy="1874.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="2909" y="1878.0073">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="2900" cy="1887.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="383" x="2909" y="1890.812">removeAllListeners(event: string | symbol) : DataFrameService&lt;T&gt;</text><ellipse cx="2900" cy="1900.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="502" x="2909" y="1903.6167">removeListener(eventName: string | symbol, listener: Function) : DataFrameService&lt;T&gt;</text><ellipse cx="2900" cy="1913.2109" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="301" x="2909" y="1916.4214">setMaxListeners(n: number) : DataFrameService&lt;T&gt;</text><ellipse cx="2900" cy="1926.0156" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="2909" y="1929.2261">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="2900" cy="1938.8203" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="289" x="2909" y="1942.0308">setPriority(value: number) : DataFrameService&lt;T&gt;</text><ellipse cx="2900" cy="1951.625" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="244" x="2909" y="1954.8354">setUID(uid: string) : DataFrameService&lt;T&gt;</text><polygon fill="#FFFF44" points="2900,1959.4297,2904,1963.4297,2900,1967.4297,2896,1963.4297" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="2909" y="1967.6401">generateUUID() : string</text><!--MD5=[70fbb990fe6e46f3fe9e939fedd78cd7]
class DummyDataService<I, T>--><rect codeLine="356" fill="#FEFECE" filter="url(#fqaybzro6oxln)" height="637.0156" id="DummyDataService&lt;I, T&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="3608" y="1311.5"/><ellipse cx="3866.75" cy="1327.5" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M3869.7188,1333.1406 Q3869.1406,1333.4375 3868.5,1333.5781 Q3867.8594,1333.7344 3867.1563,1333.7344 Q3864.6563,1333.7344 3863.3281,1332.0938 Q3862.0156,1330.4375 3862.0156,1327.3125 Q3862.0156,1324.1875 3863.3281,1322.5313 Q3864.6563,1320.875 3867.1563,1320.875 Q3867.8594,1320.875 3868.5,1321.0313 Q3869.1563,1321.1875 3869.7188,1321.4844 L3869.7188,1324.2031 Q3869.0938,1323.625 3868.5,1323.3594 Q3867.9063,1323.0781 3867.2813,1323.0781 Q3865.9375,1323.0781 3865.25,1324.1563 Q3864.5625,1325.2188 3864.5625,1327.3125 Q3864.5625,1329.4063 3865.25,1330.4844 Q3865.9375,1331.5469 3867.2813,1331.5469 Q3867.9063,1331.5469 3868.5,1331.2813 Q3869.0938,1331 3869.7188,1330.4219 L3869.7188,1333.1406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="158" x="3887.25" y="1331.6543">DummyDataService&lt;I, T&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3609" x2="4291" y1="1343.5" y2="1343.5"/><ellipse cx="3619" cy="1354.5" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="3628" y="1357.7104">captureRejections : boolean</text><ellipse cx="3619" cy="1367.3047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="3628" y="1370.5151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="3619" cy="1380.1094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="3628" y="1383.3198">defaultMaxListeners : number</text><ellipse cx="3619" cy="1392.9141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="3628" y="1396.1245">errorMonitor : typeof errorMonitor</text><ellipse cx="3619" cy="1405.7188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="3628" y="1408.9292">logger : Function</text><ellipse cx="3619" cy="1418.5234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="3628" y="1421.7339">model : any</text><ellipse cx="3619" cy="1431.3281" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="96" x="3628" y="1434.5386">priority : number</text><ellipse cx="3619" cy="1444.1328" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="3628" y="1447.3433">uid : string</text><polygon fill="none" points="3619,1451.9375,3623,1455.9375,3619,1459.9375,3615,1455.9375" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="3628" y="1460.1479">driver : DataServiceDriver&lt;I, T&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="3609" x2="4291" y1="1466.7422" y2="1466.7422"/><ellipse cx="3619" cy="1477.7422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="498" x="3628" y="1480.9526">addListener(eventName: string | symbol, listener: Function) : DummyDataService&lt;I, T&gt;</text><ellipse cx="3619" cy="1490.5469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="287" x="3628" y="1493.7573">count(query: FilterQuery&lt;T&gt;) : Promise&lt;number&gt;</text><ellipse cx="3619" cy="1503.3516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="3628" y="1506.562">delete(id: I) : Promise&lt;void&gt;</text><ellipse cx="3619" cy="1516.1563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="277" x="3628" y="1519.3667">deleteAll(filter: FilterQuery&lt;T&gt;) : Promise&lt;void&gt;</text><ellipse cx="3619" cy="1528.9609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="3628" y="1532.1714">emit(name: string | symbol, args: any[]) : boolean</text><ellipse cx="3619" cy="1541.7656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="3628" y="1544.9761">emit(name: "ready") : boolean</text><ellipse cx="3619" cy="1554.5703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="3628" y="1557.7808">emit(name: "destroy") : boolean</text><ellipse cx="3619" cy="1567.375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="3628" y="1570.5854">eventNames() : (string | symbol)[]</text><ellipse cx="3619" cy="1580.1797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="3628" y="1583.3901">findAll(query: FilterQuery&lt;T&gt;, options: FindOptions) : Promise&lt;T[]&gt;</text><ellipse cx="3619" cy="1592.9844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="3628" y="1596.1948">findByUID(uid: I) : Promise&lt;T&gt;</text><ellipse cx="3619" cy="1605.7891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="388" x="3628" y="1608.9995">findOne(query: FilterQuery&lt;T&gt;, options: FindOptions) : Promise&lt;T&gt;</text><ellipse cx="3619" cy="1618.5938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="3628" y="1621.8042">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="3619" cy="1631.3984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="3628" y="1634.6089">getMaxListeners() : number</text><ellipse cx="3619" cy="1644.2031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="203" x="3628" y="1647.4136">insert(id: I, object: T) : Promise&lt;T&gt;</text><ellipse cx="3619" cy="1657.0078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="3628" y="1660.2183">isReady() : boolean</text><ellipse cx="3619" cy="1669.8125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="3628" y="1673.0229">listenerCount(eventName: string | symbol) : number</text><ellipse cx="3619" cy="1682.6172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="3628" y="1685.8276">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="3619" cy="1695.4219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="3628" y="1698.6323">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="3619" cy="1708.2266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="446" x="3628" y="1711.437">off(eventName: string | symbol, listener: Function) : DummyDataService&lt;I, T&gt;</text><ellipse cx="3619" cy="1721.0313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="445" x="3628" y="1724.2417">on(eventName: string | symbol, listener: Function) : DummyDataService&lt;I, T&gt;</text><ellipse cx="3619" cy="1733.8359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="3628" y="1737.0464">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="3619" cy="1746.6406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="426" x="3628" y="1749.8511">once(name: string | symbol, listener: Function) : DummyDataService&lt;I, T&gt;</text><ellipse cx="3619" cy="1759.4453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="393" x="3628" y="1762.6558">once(name: "destroy", listener: Function) : DummyDataService&lt;I, T&gt;</text><ellipse cx="3619" cy="1772.25" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="377" x="3628" y="1775.4604">once(name: "build", listener: Function) : DummyDataService&lt;I, T&gt;</text><ellipse cx="3619" cy="1785.0547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="382" x="3628" y="1788.2651">once(name: "ready", listener: Function) : DummyDataService&lt;I, T&gt;</text><ellipse cx="3619" cy="1797.8594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="3628" y="1801.0698">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="3619" cy="1810.6641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="3628" y="1813.8745">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="3619" cy="1823.4688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="524" x="3628" y="1826.6792">prependListener(eventName: string | symbol, listener: Function) : DummyDataService&lt;I, T&gt;</text><ellipse cx="3619" cy="1836.2734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="553" x="3628" y="1839.4839">prependOnceListener(eventName: string | symbol, listener: Function) : DummyDataService&lt;I, T&gt;</text><ellipse cx="3619" cy="1849.0781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="3628" y="1852.2886">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="3619" cy="1861.8828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="401" x="3628" y="1865.0933">removeAllListeners(event: string | symbol) : DummyDataService&lt;I, T&gt;</text><ellipse cx="3619" cy="1874.6875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="520" x="3628" y="1877.8979">removeListener(eventName: string | symbol, listener: Function) : DummyDataService&lt;I, T&gt;</text><ellipse cx="3619" cy="1887.4922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="319" x="3628" y="1890.7026">setMaxListeners(n: number) : DummyDataService&lt;I, T&gt;</text><ellipse cx="3619" cy="1900.2969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="3628" y="1903.5073">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="3619" cy="1913.1016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="3628" y="1916.312">setPriority(value: number) : DummyDataService&lt;I, T&gt;</text><ellipse cx="3619" cy="1925.9063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="262" x="3628" y="1929.1167">setUID(uid: string) : DummyDataService&lt;I, T&gt;</text><polygon fill="#FFFF44" points="3619,1933.7109,3623,1937.7109,3619,1941.7109,3615,1937.7109" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="3628" y="1941.9214">generateUUID() : string</text><!--MD5=[97da2f35b32cfad258435b423ec52503]
reverse link Service to DataService<I, T>--><path codeLine="90" d="M2152,536.75 C2152,549.74 2152,562.82 2152,575.91 " fill="none" id="Service-backto-DataService&lt;I, T&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="2145,536.42,2152,516.42,2159,536.42,2145,536.42" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[0700b1790f804a8ad751396c357a1153]
reverse link DataService<I, T> to DataObjectService<T>--><path codeLine="145" d="M1790.05,936.85 C1485.79,983.72 1047.72,1080.25 710,1273 C704.38,1276.21 698.78,1279.53 693.21,1282.95 " fill="none" id="DataService&lt;I, T&gt;-backto-DataObjectService&lt;T&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1789.07,929.92,1809.9,933.84,1791.18,943.76,1789.07,929.92" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[44fdf3be49727d0a125f29e371f91240]
reverse link DataService<I, T> to TrajectoryService<Trajectory>--><path codeLine="199" d="M1791.44,1058.53 C1672.81,1118.92 1543.18,1192.51 1433,1273 C1427.4,1277.09 1421.81,1281.26 1416.22,1285.51 " fill="none" id="DataService&lt;I, T&gt;-backto-TrajectoryService&lt;Trajectory&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1788.62,1052.11,1809.62,1049.33,1794.94,1064.6,1788.62,1052.11" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[47112fbf2ec883f6a552d96080229705]
reverse link DataService<I, T> to NodeDataService<T>--><path codeLine="251" d="M1987.6,1231.4 C1977.67,1251.68 1967.69,1272.08 1957.76,1292.36 " fill="none" id="DataService&lt;I, T&gt;-backto-NodeDataService&lt;T&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="1981.42,1228.11,1996.49,1213.22,1993.99,1234.27,1981.42,1228.11" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[19e20e1307895988fa5f8111538ed825]
reverse link DataService<I, T> to KeyValueDataService--><path codeLine="302" d="M2316.9,1231.48 C2327.84,1253.78 2338.86,1276.22 2349.78,1298.49 " fill="none" id="DataService&lt;I, T&gt;-backto-KeyValueDataService" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="2310.47,1234.26,2307.94,1213.22,2323.03,1228.09,2310.47,1234.26" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[f71745a404f2ff41a5368751e3c21ad8]
reverse link DataService<I, T> to DataFrameService<T>--><path codeLine="355" d="M2511.96,1057.65 C2631.1,1118.15 2761.41,1192.02 2872,1273 C2877.75,1277.21 2883.5,1281.52 2889.25,1285.9 " fill="none" id="DataService&lt;I, T&gt;-backto-DataFrameService&lt;T&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="2508.78,1063.89,2494.08,1048.63,2515.09,1051.39,2508.78,1063.89" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[40fc18199ba2d530da3da1188168cec0]
reverse link DataService<I, T> to DummyDataService<I, T>--><path codeLine="404" d="M2513.94,937.12 C2817.54,984.11 3254.26,1080.7 3591,1273 C3611.2,1284.54 3631.06,1297.5 3650.44,1311.47 " fill="none" id="DataService&lt;I, T&gt;-backto-DummyDataService&lt;I, T&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="2512.85,944.03,2494.13,934.09,2514.96,930.19,2512.85,944.03" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[48a1dc065ac9de0aae3dae47fb87c20b]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
abstract class "DataService<I, T>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +logger : Function
    +model : any
    +priority : number
    +uid : string
    #driver : DataServiceDriver<I, T>
    +addListener(eventName: string | symbol, listener: Function) : DataService<I, T>
    +count(query: FilterQuery<T>) : Promise<number>
    +delete(id: I) : Promise<void>
    +deleteAll(filter: FilterQuery<T>) : Promise<void>
    +emit(name: string | symbol, args: any[]) : boolean
    +emit(name: "ready") : boolean
    +emit(name: "destroy") : boolean
    +eventNames() : (string | symbol)[]
    +findAll(query: FilterQuery<T>, options: FindOptions) : Promise<T[]>
    +findByUID(uid: I) : Promise<T>
    +findOne(query: FilterQuery<T>, options: FindOptions) : Promise<T>
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +insert(id: I, object: T) : Promise<T>
    +isReady() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : DataService<I, T>
    +on(eventName: string | symbol, listener: Function) : DataService<I, T>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(name: string | symbol, listener: Function) : DataService<I, T>
    +once(name: "destroy", listener: Function) : DataService<I, T>
    +once(name: "build", listener: Function) : DataService<I, T>
    +once(name: "ready", listener: Function) : DataService<I, T>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : DataService<I, T>
    +prependOnceListener(eventName: string | symbol, listener: Function) : DataService<I, T>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : DataService<I, T>
    +removeListener(eventName: string | symbol, listener: Function) : DataService<I, T>
    +setMaxListeners(n: number) : DataService<I, T>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setPriority(value: number) : DataService<I, T>
    +setUID(uid: string) : DataService<I, T>
    #generateUUID() : string
}
abstract class "Service" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +logger : Function
    +model : any
    +uid : string
    +addListener(eventName: string | symbol, listener: Function) : Service
    +emit(name: string | symbol, args: any[]) : boolean
    +emit(name: "ready") : boolean
    +emit(name: "destroy") : boolean
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +isReady() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Service
    +on(eventName: string | symbol, listener: Function) : Service
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(name: string | symbol, listener: Function) : Service
    +once(name: "destroy", listener: Function) : Service
    +once(name: "build", listener: Function) : Service
    +once(name: "ready", listener: Function) : Service
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : Service
    +prependOnceListener(eventName: string | symbol, listener: Function) : Service
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : Service
    +removeListener(eventName: string | symbol, listener: Function) : Service
    +setMaxListeners(n: number) : Service
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setUID(uid: string) : Service
    #generateUUID() : string
}
"Service" <|- - "DataService<I, T>"
class "DataObjectService<T>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +logger : Function
    +model : any
    +priority : number
    +uid : string
    #driver : DataServiceDriver<string, T>
    +addListener(eventName: string | symbol, listener: Function) : DataObjectService<T>
    +count(query: FilterQuery<T>) : Promise<number>
    +delete(id: string) : Promise<void>
    +deleteAll(filter: FilterQuery<T>) : Promise<void>
    +emit(name: string | symbol, args: any[]) : boolean
    +emit(name: "ready") : boolean
    +emit(name: "destroy") : boolean
    +eventNames() : (string | symbol)[]
    +findAfter(timestamp: number) : Promise<T[]>
    +findAll(query: FilterQuery<T>, options: FindOptions) : Promise<T[]>
    +findBefore(timestamp: number) : Promise<T[]>
    +findByDisplayName(displayName: string) : Promise<T[]>
    +findByParentUID(parentUID: string) : Promise<T[]>
    +findByPosition(position: AbsolutePosition) : Promise<T[]>
    +findByUID(uid: string) : Promise<T>
    +findOne(query: FilterQuery<T>, options: FindOptions) : Promise<T>
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +insert(id: string, object: T) : Promise<T>
    +insertObject(object: T) : Promise<T>
    +isReady() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : DataObjectService<T>
    +on(eventName: string | symbol, listener: Function) : DataObjectService<T>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(name: string | symbol, listener: Function) : DataObjectService<T>
    +once(name: "destroy", listener: Function) : DataObjectService<T>
    +once(name: "build", listener: Function) : DataObjectService<T>
    +once(name: "ready", listener: Function) : DataObjectService<T>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : DataObjectService<T>
    +prependOnceListener(eventName: string | symbol, listener: Function) : DataObjectService<T>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : DataObjectService<T>
    +removeListener(eventName: string | symbol, listener: Function) : DataObjectService<T>
    +setMaxListeners(n: number) : DataObjectService<T>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setPriority(value: number) : DataObjectService<T>
    +setUID(uid: string) : DataObjectService<T>
    #generateUUID() : string
}
"DataService<I, T>" <|- - "DataObjectService<T>"
class "TrajectoryService<Trajectory>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +logger : Function
    +model : Model<DataFrame, DataFrame>
    +priority : number
    +uid : string
    #driver : DataServiceDriver<string, Trajectory>
    #options : TrajectoryServiceOptions
    +addListener(eventName: string | symbol, listener: Function) : TrajectoryService<Trajectory>
    +appendPosition(object: DataObject, uid: string) : Promise<Trajectory>
    +count(query: FilterQuery<Trajectory>) : Promise<number>
    +delete(id: string) : Promise<void>
    +deleteAll(filter: FilterQuery<Trajectory>) : Promise<void>
    +emit(name: string | symbol, args: any[]) : boolean
    +emit(name: "ready") : boolean
    +emit(name: "destroy") : boolean
    +eventNames() : (string | symbol)[]
    +findAll(query: FilterQuery<Trajectory>, options: FindOptions) : Promise<Trajectory[]>
    +findByUID(uid: string) : Promise<Trajectory>
    +findCurrentTrajectory(object: string | DataObject) : Promise<Trajectory>
    +findOne(query: FilterQuery<Trajectory>, options: FindOptions) : Promise<Trajectory>
    +findTrajectories(object: string | DataObject) : Promise<string[]>
    +findTrajectoryByRange(object: string | DataObject, start: number | Date, end: number | Date) : Promise<Trajectory>
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +insert(id: string, object: Trajectory) : Promise<Trajectory>
    +isReady() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : TrajectoryService<Trajectory>
    +on(eventName: string | symbol, listener: Function) : TrajectoryService<Trajectory>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(name: string | symbol, listener: Function) : TrajectoryService<Trajectory>
    +once(name: "destroy", listener: Function) : TrajectoryService<Trajectory>
    +once(name: "build", listener: Function) : TrajectoryService<Trajectory>
    +once(name: "ready", listener: Function) : TrajectoryService<Trajectory>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : TrajectoryService<Trajectory>
    +prependOnceListener(eventName: string | symbol, listener: Function) : TrajectoryService<Trajectory>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : TrajectoryService<Trajectory>
    +removeListener(eventName: string | symbol, listener: Function) : TrajectoryService<Trajectory>
    +setMaxListeners(n: number) : TrajectoryService<Trajectory>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setPriority(value: number) : TrajectoryService<Trajectory>
    +setUID(uid: string) : TrajectoryService<Trajectory>
    #generateUUID() : string
}
"DataService<I, T>" <|- - "TrajectoryService<Trajectory>"
class "NodeDataService<T>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +logger : Function
    +model : any
    +priority : number
    +uid : string
    #driver : DataServiceDriver<string, T>
    +addListener(eventName: string | symbol, listener: Function) : NodeDataService<T>
    +count(query: FilterQuery<T>) : Promise<number>
    +delete(id: string) : Promise<void>
    +deleteAll(filter: FilterQuery<T>) : Promise<void>
    +emit(name: string | symbol, args: any[]) : boolean
    +emit(name: "ready") : boolean
    +emit(name: "destroy") : boolean
    +eventNames() : (string | symbol)[]
    +findAll(query: FilterQuery<T>, options: FindOptions) : Promise<T[]>
    +findByUID(uid: string) : Promise<T>
    +findData(nodeUID: string, dataObject: string | DataObject) : Promise<any>
    +findOne(query: FilterQuery<T>, options: FindOptions) : Promise<T>
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +insert(id: string, object: T) : Promise<T>
    +insertData(nodeUID: string, dataObject: string | DataObject, data: any) : Promise<T>
    +isReady() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : NodeDataService<T>
    +on(eventName: string | symbol, listener: Function) : NodeDataService<T>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(name: string | symbol, listener: Function) : NodeDataService<T>
    +once(name: "destroy", listener: Function) : NodeDataService<T>
    +once(name: "build", listener: Function) : NodeDataService<T>
    +once(name: "ready", listener: Function) : NodeDataService<T>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : NodeDataService<T>
    +prependOnceListener(eventName: string | symbol, listener: Function) : NodeDataService<T>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : NodeDataService<T>
    +removeListener(eventName: string | symbol, listener: Function) : NodeDataService<T>
    +setMaxListeners(n: number) : NodeDataService<T>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setPriority(value: number) : NodeDataService<T>
    +setUID(uid: string) : NodeDataService<T>
    #generateUUID() : string
    #getUID(nodeUID: string, dataObjectUID: string) : string
}
"DataService<I, T>" <|- - "NodeDataService<T>"
class "KeyValueDataService" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +logger : Function
    +model : any
    +priority : number
    +uid : string
    #driver : DataServiceDriver<string, any>
    +addListener(eventName: string | symbol, listener: Function) : KeyValueDataService
    +count(query: FilterQuery<any>) : Promise<number>
    +delete(id: string) : Promise<void>
    +deleteAll(filter: FilterQuery<any>) : Promise<void>
    +emit(name: string | symbol, args: any[]) : boolean
    +emit(name: "ready") : boolean
    +emit(name: "destroy") : boolean
    +eventNames() : (string | symbol)[]
    +findAll(query: FilterQuery<any>, options: FindOptions) : Promise<any[]>
    +findByUID(uid: string) : Promise<any>
    +findOne(query: FilterQuery<any>, options: FindOptions) : Promise<any>
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +getValue(key: string) : Promise<any>
    +insert(id: string, object: any) : Promise<any>
    +isReady() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : KeyValueDataService
    +on(eventName: string | symbol, listener: Function) : KeyValueDataService
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(name: string | symbol, listener: Function) : KeyValueDataService
    +once(name: "destroy", listener: Function) : KeyValueDataService
    +once(name: "build", listener: Function) : KeyValueDataService
    +once(name: "ready", listener: Function) : KeyValueDataService
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : KeyValueDataService
    +prependOnceListener(eventName: string | symbol, listener: Function) : KeyValueDataService
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : KeyValueDataService
    +removeListener(eventName: string | symbol, listener: Function) : KeyValueDataService
    +setMaxListeners(n: number) : KeyValueDataService
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setPriority(value: number) : KeyValueDataService
    +setUID(uid: string) : KeyValueDataService
    +setValue(key: string, value: any) : Promise<void>
    #generateUUID() : string
}
"DataService<I, T>" <|- - "KeyValueDataService"
class "DataFrameService<T>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +logger : Function
    +model : any
    +priority : number
    +uid : string
    #driver : DataServiceDriver<string, T>
    +addListener(eventName: string | symbol, listener: Function) : DataFrameService<T>
    +count(query: FilterQuery<T>) : Promise<number>
    +delete(id: string) : Promise<void>
    +deleteAll(filter: FilterQuery<T>) : Promise<void>
    +emit(name: string | symbol, args: any[]) : boolean
    +emit(name: "ready") : boolean
    +emit(name: "destroy") : boolean
    +eventNames() : (string | symbol)[]
    +findAfter(timestamp: number, options: FindOptions) : Promise<T[]>
    +findAll(query: FilterQuery<T>, options: FindOptions) : Promise<T[]>
    +findBefore(timestamp: number, options: FindOptions) : Promise<T[]>
    +findByDataObject(dataObject: string | DataObject, options: FindOptions) : Promise<T[]>
    +findByUID(uid: string) : Promise<T>
    +findOne(query: FilterQuery<T>, options: FindOptions) : Promise<T>
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +insert(id: string, object: T) : Promise<T>
    +insertFrame(frame: T) : Promise<T>
    +isReady() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : DataFrameService<T>
    +on(eventName: string | symbol, listener: Function) : DataFrameService<T>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(name: string | symbol, listener: Function) : DataFrameService<T>
    +once(name: "destroy", listener: Function) : DataFrameService<T>
    +once(name: "build", listener: Function) : DataFrameService<T>
    +once(name: "ready", listener: Function) : DataFrameService<T>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : DataFrameService<T>
    +prependOnceListener(eventName: string | symbol, listener: Function) : DataFrameService<T>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : DataFrameService<T>
    +removeListener(eventName: string | symbol, listener: Function) : DataFrameService<T>
    +setMaxListeners(n: number) : DataFrameService<T>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setPriority(value: number) : DataFrameService<T>
    +setUID(uid: string) : DataFrameService<T>
    #generateUUID() : string
}
"DataService<I, T>" <|- - "DataFrameService<T>"
class "DummyDataService<I, T>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +logger : Function
    +model : any
    +priority : number
    +uid : string
    #driver : DataServiceDriver<I, T>
    +addListener(eventName: string | symbol, listener: Function) : DummyDataService<I, T>
    +count(query: FilterQuery<T>) : Promise<number>
    +delete(id: I) : Promise<void>
    +deleteAll(filter: FilterQuery<T>) : Promise<void>
    +emit(name: string | symbol, args: any[]) : boolean
    +emit(name: "ready") : boolean
    +emit(name: "destroy") : boolean
    +eventNames() : (string | symbol)[]
    +findAll(query: FilterQuery<T>, options: FindOptions) : Promise<T[]>
    +findByUID(uid: I) : Promise<T>
    +findOne(query: FilterQuery<T>, options: FindOptions) : Promise<T>
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +insert(id: I, object: T) : Promise<T>
    +isReady() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : DummyDataService<I, T>
    +on(eventName: string | symbol, listener: Function) : DummyDataService<I, T>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(name: string | symbol, listener: Function) : DummyDataService<I, T>
    +once(name: "destroy", listener: Function) : DummyDataService<I, T>
    +once(name: "build", listener: Function) : DummyDataService<I, T>
    +once(name: "ready", listener: Function) : DummyDataService<I, T>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : DummyDataService<I, T>
    +prependOnceListener(eventName: string | symbol, listener: Function) : DummyDataService<I, T>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : DummyDataService<I, T>
    +removeListener(eventName: string | symbol, listener: Function) : DummyDataService<I, T>
    +setMaxListeners(n: number) : DummyDataService<I, T>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setPriority(value: number) : DummyDataService<I, T>
    +setUID(uid: string) : DummyDataService<I, T>
    #generateUUID() : string
}
"DataService<I, T>" <|- - "DummyDataService<I, T>"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 16:46:50 UTC 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>