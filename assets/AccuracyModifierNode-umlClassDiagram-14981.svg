<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="970px" preserveAspectRatio="none" style="width:707px;height:970px;background:#00000000;" version="1.1" viewBox="0 0 707 970" width="707px" zoomAndPan="magnify"><defs><filter height="300%" id="f16hj5xc9ousfk" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[6eac2bc4dcfbbc374adacf5949f54a2d]
class AccuracyModifierNode<InOut>--><rect codeLine="4" fill="#FEFECE" filter="url(#f16hj5xc9ousfk)" height="444.9453" id="AccuracyModifierNode&lt;InOut&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="9" y="512"/><ellipse cx="251.25" cy="528" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M254.2188,533.6406 Q253.6406,533.9375 253,534.0781 Q252.3594,534.2344 251.6563,534.2344 Q249.1563,534.2344 247.8281,532.5938 Q246.5156,530.9375 246.5156,527.8125 Q246.5156,524.6875 247.8281,523.0313 Q249.1563,521.375 251.6563,521.375 Q252.3594,521.375 253,521.5313 Q253.6563,521.6875 254.2188,521.9844 L254.2188,524.7031 Q253.5938,524.125 253,523.8594 Q252.4063,523.5781 251.7813,523.5781 Q250.4375,523.5781 249.75,524.6563 Q249.0625,525.7188 249.0625,527.8125 Q249.0625,529.9063 249.75,530.9844 Q250.4375,532.0469 251.7813,532.0469 Q252.4063,532.0469 253,531.7813 Q253.5938,531.5 254.2188,530.9219 L254.2188,533.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="191" x="271.75" y="532.1543">AccuracyModifierNode&lt;InOut&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="544" y2="544"/><ellipse cx="20" cy="555" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="29" y="558.2104">captureRejections : boolean</text><ellipse cx="20" cy="567.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="29" y="571.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="20" cy="580.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="29" y="583.8198">defaultMaxListeners : number</text><ellipse cx="20" cy="593.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="29" y="596.6245">errorMonitor : typeof errorMonitor</text><polygon fill="none" points="20,601.2188,24,605.2188,20,609.2188,16,605.2188" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="29" y="609.4292">options : AccuracyModifierOptions</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="616.0234" y2="616.0234"/><ellipse cx="20" cy="627.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="523" x="29" y="630.2339">addListener(eventName: string | symbol, listener: Function) : AccuracyModifierNode&lt;InOut&gt;</text><ellipse cx="20" cy="639.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="29" y="643.0386">eventNames() : (string | symbol)[]</text><ellipse cx="20" cy="652.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="29" y="655.8433">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="20" cy="665.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="29" y="668.6479">getMaxListeners() : number</text><ellipse cx="20" cy="678.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="29" y="681.4526">getOptions() : NodeOptions</text><ellipse cx="20" cy="691.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="29" y="694.2573">listenerCount(eventName: string | symbol) : number</text><ellipse cx="20" cy="703.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="29" y="707.062">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="20" cy="716.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="29" y="719.8667">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="729.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="471" x="29" y="732.6714">off(eventName: string | symbol, listener: Function) : AccuracyModifierNode&lt;InOut&gt;</text><ellipse cx="20" cy="742.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="29" y="745.4761">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="20" cy="755.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="29" y="758.2808">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="767.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="29" y="771.0854">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="780.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="549" x="29" y="783.8901">prependListener(eventName: string | symbol, listener: Function) : AccuracyModifierNode&lt;InOut&gt;</text><ellipse cx="20" cy="793.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="578" x="29" y="796.6948">prependOnceListener(eventName: string | symbol, listener: Function) : AccuracyModifierNode&lt;InOut&gt;</text><ellipse cx="20" cy="806.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="370" x="29" y="809.4995">process(frame: InOut, options: GraphOptions) : Promise&lt;InOut&gt;</text><ellipse cx="20" cy="819.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="333" x="29" y="822.3042">processObject(object: DataObject) : Promise&lt;DataObject&gt;</text><ellipse cx="20" cy="831.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="29" y="835.1089">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="844.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="426" x="29" y="847.9136">removeAllListeners(event: string | symbol) : AccuracyModifierNode&lt;InOut&gt;</text><ellipse cx="20" cy="857.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="545" x="29" y="860.7183">removeListener(eventName: string | symbol, listener: Function) : AccuracyModifierNode&lt;InOut&gt;</text><ellipse cx="20" cy="870.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="344" x="29" y="873.5229">setMaxListeners(n: number) : AccuracyModifierNode&lt;InOut&gt;</text><ellipse cx="20" cy="883.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="29" y="886.3276">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="20" cy="895.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="377" x="29" y="899.1323">setOptions(options: NodeOptions) : AccuracyModifierNode&lt;InOut&gt;</text><polygon fill="#FFFF44" points="20,903.7266,24,907.7266,20,911.7266,16,907.7266" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="29" y="911.937">findNodeDataService() : NodeDataService&lt;NodeData&gt;</text><polygon fill="#FFFF44" points="20,916.5313,24,920.5313,20,924.5313,16,920.5313" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="475" x="29" y="924.7417">findObjectByUID(uid: string, dataFrame: InOut, type: string) : Promise&lt;DataObject&gt;</text><polygon fill="#FFFF44" points="20,929.3359,24,933.3359,20,937.3359,16,933.3359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="422" x="29" y="937.5464">getNodeData&lt;T&gt;(dataObject: DataObject, defaultData: T) : Promise&lt;any&gt;</text><polygon fill="#FFFF44" points="20,942.1406,24,946.1406,20,950.1406,16,946.1406" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="405" x="29" y="950.3511">setNodeData(dataObject: DataObject, data: any) : Promise&lt;NodeData&gt;</text><!--MD5=[9ac6b26c9c0951042fc71ef94bb46580]
class ObjectProcessingNode<InOut>--><rect codeLine="37" fill="#FEFECE" filter="url(#f16hj5xc9ousfk)" height="444.9453" id="ObjectProcessingNode&lt;InOut&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="9" y="7"/><ellipse cx="251.25" cy="23" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M251.3594,18.3438 L250.2031,23.4219 L252.5313,23.4219 L251.3594,18.3438 Z M249.875,16.1094 L252.8594,16.1094 L256.2188,28.5 L253.7656,28.5 L253,25.4375 L249.7188,25.4375 L248.9688,28.5 L246.5313,28.5 L249.875,16.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="191" x="271.75" y="27.1543">ObjectProcessingNode&lt;InOut&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="39" y2="39"/><ellipse cx="20" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="29" y="53.2104">captureRejections : boolean</text><ellipse cx="20" cy="62.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="29" y="66.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="20" cy="75.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="29" y="78.8198">defaultMaxListeners : number</text><ellipse cx="20" cy="88.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="29" y="91.6245">errorMonitor : typeof errorMonitor</text><polygon fill="none" points="20,96.2188,24,100.2188,20,104.2188,16,100.2188" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="29" y="104.4292">options : ObjectProcessingNodeOptions</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="111.0234" y2="111.0234"/><ellipse cx="20" cy="122.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="527" x="29" y="125.2339">addListener(eventName: string | symbol, listener: Function) : ObjectProcessingNode&lt;InOut&gt;</text><ellipse cx="20" cy="134.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="29" y="138.0386">eventNames() : (string | symbol)[]</text><ellipse cx="20" cy="147.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="29" y="150.8433">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="20" cy="160.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="29" y="163.6479">getMaxListeners() : number</text><ellipse cx="20" cy="173.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="29" y="176.4526">getOptions() : NodeOptions</text><ellipse cx="20" cy="186.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="29" y="189.2573">listenerCount(eventName: string | symbol) : number</text><ellipse cx="20" cy="198.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="29" y="202.062">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="20" cy="211.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="29" y="214.8667">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="224.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="475" x="29" y="227.6714">off(eventName: string | symbol, listener: Function) : ObjectProcessingNode&lt;InOut&gt;</text><ellipse cx="20" cy="237.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="29" y="240.4761">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="20" cy="250.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="29" y="253.2808">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="262.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="29" y="266.0854">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="275.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="553" x="29" y="278.8901">prependListener(eventName: string | symbol, listener: Function) : ObjectProcessingNode&lt;InOut&gt;</text><ellipse cx="20" cy="288.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="582" x="29" y="291.6948">prependOnceListener(eventName: string | symbol, listener: Function) : ObjectProcessingNode&lt;InOut&gt;</text><ellipse cx="20" cy="301.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="370" x="29" y="304.4995">process(frame: InOut, options: GraphOptions) : Promise&lt;InOut&gt;</text><ellipse cx="20" cy="314.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="599" x="29" y="317.3042">processObject(dataObject: DataObject, dataFrame: InOut, options: GraphOptions) : Promise&lt;DataObject&gt;</text><ellipse cx="20" cy="326.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="29" y="330.1089">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="339.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="430" x="29" y="342.9136">removeAllListeners(event: string | symbol) : ObjectProcessingNode&lt;InOut&gt;</text><ellipse cx="20" cy="352.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="549" x="29" y="355.7183">removeListener(eventName: string | symbol, listener: Function) : ObjectProcessingNode&lt;InOut&gt;</text><ellipse cx="20" cy="365.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="348" x="29" y="368.5229">setMaxListeners(n: number) : ObjectProcessingNode&lt;InOut&gt;</text><ellipse cx="20" cy="378.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="29" y="381.3276">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="20" cy="390.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="381" x="29" y="394.1323">setOptions(options: NodeOptions) : ObjectProcessingNode&lt;InOut&gt;</text><polygon fill="#FFFF44" points="20,398.7266,24,402.7266,20,406.7266,16,402.7266" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="29" y="406.937">findNodeDataService() : NodeDataService&lt;NodeData&gt;</text><polygon fill="#FFFF44" points="20,411.5313,24,415.5313,20,419.5313,16,415.5313" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="475" x="29" y="419.7417">findObjectByUID(uid: string, dataFrame: InOut, type: string) : Promise&lt;DataObject&gt;</text><polygon fill="#FFFF44" points="20,424.3359,24,428.3359,20,432.3359,16,428.3359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="422" x="29" y="432.5464">getNodeData&lt;T&gt;(dataObject: DataObject, defaultData: T) : Promise&lt;any&gt;</text><polygon fill="#FFFF44" points="20,437.1406,24,441.1406,20,445.1406,16,441.1406" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="405" x="29" y="445.3511">setNodeData(dataObject: DataObject, data: any) : Promise&lt;NodeData&gt;</text><!--MD5=[38e05d7f8e35851813ae9bcf291c8b17]
reverse link ObjectProcessingNode<InOut> to AccuracyModifierNode<InOut>--><path codeLine="70" d="M351,472.66 C351,485.7 351,498.77 351,511.73 " fill="none" id="ObjectProcessingNode&lt;InOut&gt;-backto-AccuracyModifierNode&lt;InOut&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="344,472.22,351,452.22,358,472.22,344,472.22" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[c7ff7ab4a1a5555b8a923d0d7940e447]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "AccuracyModifierNode<InOut>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    #options : AccuracyModifierOptions
    +addListener(eventName: string | symbol, listener: Function) : AccuracyModifierNode<InOut>
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +getOptions() : NodeOptions
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : AccuracyModifierNode<InOut>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : AccuracyModifierNode<InOut>
    +prependOnceListener(eventName: string | symbol, listener: Function) : AccuracyModifierNode<InOut>
    +process(frame: InOut, options: GraphOptions) : Promise<InOut>
    +processObject(object: DataObject) : Promise<DataObject>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : AccuracyModifierNode<InOut>
    +removeListener(eventName: string | symbol, listener: Function) : AccuracyModifierNode<InOut>
    +setMaxListeners(n: number) : AccuracyModifierNode<InOut>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setOptions(options: NodeOptions) : AccuracyModifierNode<InOut>
    #findNodeDataService() : NodeDataService<NodeData>
    #findObjectByUID(uid: string, dataFrame: InOut, type: string) : Promise<DataObject>
    #getNodeData<T>(dataObject: DataObject, defaultData: T) : Promise<any>
    #setNodeData(dataObject: DataObject, data: any) : Promise<NodeData>
}
abstract class "ObjectProcessingNode<InOut>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    #options : ObjectProcessingNodeOptions
    +addListener(eventName: string | symbol, listener: Function) : ObjectProcessingNode<InOut>
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +getOptions() : NodeOptions
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : ObjectProcessingNode<InOut>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : ObjectProcessingNode<InOut>
    +prependOnceListener(eventName: string | symbol, listener: Function) : ObjectProcessingNode<InOut>
    +process(frame: InOut, options: GraphOptions) : Promise<InOut>
    {abstract} +processObject(dataObject: DataObject, dataFrame: InOut, options: GraphOptions) : Promise<DataObject>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : ObjectProcessingNode<InOut>
    +removeListener(eventName: string | symbol, listener: Function) : ObjectProcessingNode<InOut>
    +setMaxListeners(n: number) : ObjectProcessingNode<InOut>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setOptions(options: NodeOptions) : ObjectProcessingNode<InOut>
    #findNodeDataService() : NodeDataService<NodeData>
    #findObjectByUID(uid: string, dataFrame: InOut, type: string) : Promise<DataObject>
    #getNodeData<T>(dataObject: DataObject, defaultData: T) : Promise<any>
    #setNodeData(dataObject: DataObject, data: any) : Promise<NodeData>
}
"ObjectProcessingNode<InOut>" <|- - "AccuracyModifierNode<InOut>"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 16:46:50 UTC 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>