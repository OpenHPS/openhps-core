<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="562px" preserveAspectRatio="none" style="width:707px;height:562px;background:#00000000;" version="1.1" viewBox="0 0 707 562" width="707px" zoomAndPan="magnify"><defs><filter height="300%" id="f1p338l9viftts" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[1799d84d6b13175ad2cdaa8d9c216441]
class WorkerHandler--><rect codeLine="4" fill="#FEFECE" filter="url(#f1p338l9viftts)" height="457.75" id="WorkerHandler" style="stroke:#A80036;stroke-width:1.5;" width="684" x="9" y="91"/><ellipse cx="300.25" cy="107" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M303.2188,112.6406 Q302.6406,112.9375 302,113.0781 Q301.3594,113.2344 300.6563,113.2344 Q298.1563,113.2344 296.8281,111.5938 Q295.5156,109.9375 295.5156,106.8125 Q295.5156,103.6875 296.8281,102.0313 Q298.1563,100.375 300.6563,100.375 Q301.3594,100.375 302,100.5313 Q302.6563,100.6875 303.2188,100.9844 L303.2188,103.7031 Q302.5938,103.125 302,102.8594 Q301.4063,102.5781 300.7813,102.5781 Q299.4375,102.5781 298.75,103.6563 Q298.0625,104.7188 298.0625,106.8125 Q298.0625,108.9063 298.75,109.9844 Q299.4375,111.0469 300.7813,111.0469 Q301.4063,111.0469 302,110.7813 Q302.5938,110.5 303.2188,109.9219 L303.2188,112.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="93" x="320.75" y="111.1543">WorkerHandler</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="123" y2="123"/><ellipse cx="20" cy="134" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="29" y="137.2104">captureRejections : boolean</text><ellipse cx="20" cy="146.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="29" y="150.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="20" cy="159.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="111" x="29" y="162.8198">config : WorkerData</text><ellipse cx="20" cy="172.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="29" y="175.6245">defaultMaxListeners : number</text><ellipse cx="20" cy="185.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="29" y="188.4292">errorMonitor : typeof errorMonitor</text><ellipse cx="20" cy="198.0234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="137" x="29" y="201.2339">options : WorkerOptions</text><polygon fill="none" points="20,205.8281,24,209.8281,20,213.8281,16,209.8281" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="230" x="29" y="214.0386">model : Model&lt;DataFrame, DataFrame&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="220.6328" y2="220.6328"/><ellipse cx="20" cy="231.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="434" x="29" y="234.8433">addListener(eventName: string | symbol, listener: Function) : WorkerHandler</text><ellipse cx="20" cy="244.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="135" x="29" y="247.6479">build() : Promise&lt;void&gt;</text><ellipse cx="20" cy="257.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="151" x="29" y="260.4526">destroy() : Promise&lt;void&gt;</text><ellipse cx="20" cy="270.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="318" x="29" y="273.2573">emit(eventName: string | symbol, args: any[]) : boolean</text><ellipse cx="20" cy="282.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="29" y="286.062">eventNames() : (string | symbol)[]</text><ellipse cx="20" cy="295.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="29" y="298.8667">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="20" cy="308.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="29" y="311.6714">getMaxListeners() : number</text><ellipse cx="20" cy="321.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="29" y="324.4761">listenerCount(eventName: string | symbol) : number</text><ellipse cx="20" cy="334.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="29" y="337.2808">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="20" cy="346.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="29" y="350.0854">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="359.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="382" x="29" y="362.8901">off(eventName: string | symbol, listener: Function) : WorkerHandler</text><ellipse cx="20" cy="372.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="381" x="29" y="375.6948">on(eventName: string | symbol, listener: Function) : WorkerHandler</text><ellipse cx="20" cy="385.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="29" y="388.4995">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="20" cy="398.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="394" x="29" y="401.3042">once(eventName: string | symbol, listener: Function) : WorkerHandler</text><ellipse cx="20" cy="410.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="29" y="414.1089">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="423.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="29" y="426.9136">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="436.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="460" x="29" y="439.7183">prependListener(eventName: string | symbol, listener: Function) : WorkerHandler</text><ellipse cx="20" cy="449.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="489" x="29" y="452.5229">prependOnceListener(eventName: string | symbol, listener: Function) : WorkerHandler</text><ellipse cx="20" cy="462.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="242" x="29" y="465.3276">pull(options: PullOptions) : Promise&lt;void&gt;</text><ellipse cx="20" cy="474.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="452" x="29" y="478.1323">push(frame: DataFrame | DataFrame[], options: PushOptions) : Promise&lt;void&gt;</text><ellipse cx="20" cy="487.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="29" y="490.937">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="500.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="337" x="29" y="503.7417">removeAllListeners(event: string | symbol) : WorkerHandler</text><ellipse cx="20" cy="513.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="456" x="29" y="516.5464">removeListener(eventName: string | symbol, listener: Function) : WorkerHandler</text><ellipse cx="20" cy="526.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="255" x="29" y="529.3511">setMaxListeners(n: number) : WorkerHandler</text><ellipse cx="20" cy="538.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="29" y="542.1558">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><!--MD5=[71c102d61d5bb14938b06cd0ee12bcfc]
class AsyncEventEmitter--><rect codeLine="38" fill="#FEFECE" filter="url(#f1p338l9viftts)" height="23.9688" id="AsyncEventEmitter" style="stroke:#A80036;stroke-width:1.5;" width="122" x="290" y="7"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="116" x="293" y="23.1387">AsyncEventEmitter</text><!--MD5=[5d1227804163347d8a5f7a6973c2179c]
reverse link AsyncEventEmitter to WorkerHandler--><path codeLine="40" d="M351,51.44 C351,62.51 351,75.94 351,90.83 " fill="none" id="AsyncEventEmitter-backto-WorkerHandler" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="344,51.36,351,31.36,358,51.36,344,51.36" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[073a8f54c1eb2b6c5d551f86d2b519dd]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "WorkerHandler" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    +config : WorkerData
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +options : WorkerOptions
    #model : Model<DataFrame, DataFrame>
    +addListener(eventName: string | symbol, listener: Function) : WorkerHandler
    +build() : Promise<void>
    +destroy() : Promise<void>
    +emit(eventName: string | symbol, args: any[]) : boolean
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : WorkerHandler
    +on(eventName: string | symbol, listener: Function) : WorkerHandler
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(eventName: string | symbol, listener: Function) : WorkerHandler
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : WorkerHandler
    +prependOnceListener(eventName: string | symbol, listener: Function) : WorkerHandler
    +pull(options: PullOptions) : Promise<void>
    +push(frame: DataFrame | DataFrame[], options: PushOptions) : Promise<void>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : WorkerHandler
    +removeListener(eventName: string | symbol, listener: Function) : WorkerHandler
    +setMaxListeners(n: number) : WorkerHandler
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
}
class "AsyncEventEmitter"
hide "AsyncEventEmitter" circle
"AsyncEventEmitter" <|- - "WorkerHandler"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 16:46:50 UTC 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>