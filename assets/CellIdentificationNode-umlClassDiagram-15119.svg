<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="996px" preserveAspectRatio="none" style="width:947px;height:996px;background:#00000000;" version="1.1" viewBox="0 0 947 996" width="947px" zoomAndPan="magnify"><defs><filter height="300%" id="f1qmoawlmpdahe" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[6ca7ed68d11791e77b122335e816879c]
class CellIdentificationNode<InOut>--><rect codeLine="4" fill="#FEFECE" filter="url(#f1qmoawlmpdahe)" height="457.75" id="CellIdentificationNode&lt;InOut&gt;" style="stroke:#A80036;stroke-width:1.5;" width="924" x="9" y="525"/><ellipse cx="372.25" cy="541" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M375.2188,546.6406 Q374.6406,546.9375 374,547.0781 Q373.3594,547.2344 372.6563,547.2344 Q370.1563,547.2344 368.8281,545.5938 Q367.5156,543.9375 367.5156,540.8125 Q367.5156,537.6875 368.8281,536.0313 Q370.1563,534.375 372.6563,534.375 Q373.3594,534.375 374,534.5313 Q374.6563,534.6875 375.2188,534.9844 L375.2188,537.7031 Q374.5938,537.125 374,536.8594 Q373.4063,536.5781 372.7813,536.5781 Q371.4375,536.5781 370.75,537.6563 Q370.0625,538.7188 370.0625,540.8125 Q370.0625,542.9063 370.75,543.9844 Q371.4375,545.0469 372.7813,545.0469 Q373.4063,545.0469 374,544.7813 Q374.5938,544.5 375.2188,543.9219 L375.2188,546.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="189" x="392.75" y="545.1543">CellIdentificationNode&lt;InOut&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="932" y1="557" y2="557"/><ellipse cx="20" cy="568" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="29" y="571.2104">captureRejections : boolean</text><ellipse cx="20" cy="580.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="29" y="584.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="20" cy="593.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="29" y="596.8198">defaultMaxListeners : number</text><ellipse cx="20" cy="606.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="29" y="609.6245">errorMonitor : typeof errorMonitor</text><polygon fill="none" points="20,614.2188,24,618.2188,20,622.2188,16,618.2188" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="191" x="29" y="622.4292">options : CellIdentificationOptions</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="932" y1="629.0234" y2="629.0234"/><ellipse cx="20" cy="640.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="521" x="29" y="643.2339">addListener(eventName: string | symbol, listener: Function) : CellIdentificationNode&lt;InOut&gt;</text><ellipse cx="20" cy="652.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="29" y="656.0386">eventNames() : (string | symbol)[]</text><ellipse cx="20" cy="665.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="29" y="668.8433">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="20" cy="678.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="29" y="681.6479">getMaxListeners() : number</text><ellipse cx="20" cy="691.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="29" y="694.4526">getOptions() : NodeOptions</text><ellipse cx="20" cy="704.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="29" y="707.2573">listenerCount(eventName: string | symbol) : number</text><ellipse cx="20" cy="716.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="29" y="720.062">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="20" cy="729.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="29" y="732.8667">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="742.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="469" x="29" y="745.6714">off(eventName: string | symbol, listener: Function) : CellIdentificationNode&lt;InOut&gt;</text><ellipse cx="20" cy="755.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="29" y="758.4761">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="20" cy="768.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="29" y="771.2808">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="780.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="29" y="784.0854">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="793.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="547" x="29" y="796.8901">prependListener(eventName: string | symbol, listener: Function) : CellIdentificationNode&lt;InOut&gt;</text><ellipse cx="20" cy="806.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="576" x="29" y="809.6948">prependOnceListener(eventName: string | symbol, listener: Function) : CellIdentificationNode&lt;InOut&gt;</text><ellipse cx="20" cy="819.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="370" x="29" y="822.4995">process(frame: InOut, options: GraphOptions) : Promise&lt;InOut&gt;</text><ellipse cx="20" cy="832.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="467" x="29" y="835.3042">processObject(dataObject: DataObject, dataFrame: InOut) : Promise&lt;DataObject&gt;</text><ellipse cx="20" cy="844.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="898" x="29" y="848.1089">processRelativePositions&lt;P&gt;(dataObject: DataObject, relativePositions: Map&lt;RelativeDistance, DataObject&gt;, dataFrame: DataFrame) : Promise&lt;DataObject&gt;</text><ellipse cx="20" cy="857.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="29" y="860.9136">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="870.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="424" x="29" y="873.7183">removeAllListeners(event: string | symbol) : CellIdentificationNode&lt;InOut&gt;</text><ellipse cx="20" cy="883.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="543" x="29" y="886.5229">removeListener(eventName: string | symbol, listener: Function) : CellIdentificationNode&lt;InOut&gt;</text><ellipse cx="20" cy="896.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="342" x="29" y="899.3276">setMaxListeners(n: number) : CellIdentificationNode&lt;InOut&gt;</text><ellipse cx="20" cy="908.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="29" y="912.1323">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="20" cy="921.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="375" x="29" y="924.937">setOptions(options: NodeOptions) : CellIdentificationNode&lt;InOut&gt;</text><polygon fill="#FFFF44" points="20,929.5313,24,933.5313,20,937.5313,16,933.5313" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="29" y="937.7417">findNodeDataService() : NodeDataService&lt;NodeData&gt;</text><polygon fill="#FFFF44" points="20,942.3359,24,946.3359,20,950.3359,16,946.3359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="475" x="29" y="950.5464">findObjectByUID(uid: string, dataFrame: InOut, type: string) : Promise&lt;DataObject&gt;</text><polygon fill="#FFFF44" points="20,955.1406,24,959.1406,20,963.1406,16,959.1406" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="422" x="29" y="963.3511">getNodeData&lt;T&gt;(dataObject: DataObject, defaultData: T) : Promise&lt;any&gt;</text><polygon fill="#FFFF44" points="20,967.9453,24,971.9453,20,975.9453,16,971.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="405" x="29" y="976.1558">setNodeData(dataObject: DataObject, data: any) : Promise&lt;NodeData&gt;</text><!--MD5=[5ee0ba2e13c098ddf7aec5a4aa62c115]
class RelativePositionProcessing<InOut, RelativeDistance>--><rect codeLine="38" fill="#FEFECE" filter="url(#f1qmoawlmpdahe)" height="457.75" id="RelativePositionProcessing&lt;InOut, RelativeDistance&gt;" style="stroke:#A80036;stroke-width:1.5;" width="864" x="39" y="7"/><ellipse cx="303.25" cy="23" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M303.3594,18.3438 L302.2031,23.4219 L304.5313,23.4219 L303.3594,18.3438 Z M301.875,16.1094 L304.8594,16.1094 L308.2188,28.5 L305.7656,28.5 L305,25.4375 L301.7188,25.4375 L300.9688,28.5 L298.5313,28.5 L301.875,16.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="327" x="323.75" y="27.1543">RelativePositionProcessing&lt;InOut, RelativeDistance&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="40" x2="902" y1="39" y2="39"/><ellipse cx="50" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="59" y="53.2104">captureRejections : boolean</text><ellipse cx="50" cy="62.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="59" y="66.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="50" cy="75.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="59" y="78.8198">defaultMaxListeners : number</text><ellipse cx="50" cy="88.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="59" y="91.6245">errorMonitor : typeof errorMonitor</text><polygon fill="none" points="50,96.2188,54,100.2188,50,104.2188,46,100.2188" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="226" x="59" y="104.4292">options : ObjectProcessingNodeOptions</text><line style="stroke:#A80036;stroke-width:1.5;" x1="40" x2="902" y1="111.0234" y2="111.0234"/><ellipse cx="50" cy="122.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="652" x="59" y="125.2339">addListener(eventName: string | symbol, listener: Function) : RelativePositionProcessing&lt;InOut, RelativeDistance&gt;</text><ellipse cx="50" cy="134.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="59" y="138.0386">eventNames() : (string | symbol)[]</text><ellipse cx="50" cy="147.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="59" y="150.8433">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="50" cy="160.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="59" y="163.6479">getMaxListeners() : number</text><ellipse cx="50" cy="173.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="59" y="176.4526">getOptions() : NodeOptions</text><ellipse cx="50" cy="186.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="59" y="189.2573">listenerCount(eventName: string | symbol) : number</text><ellipse cx="50" cy="198.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="59" y="202.062">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="50" cy="211.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="59" y="214.8667">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="50" cy="224.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="600" x="59" y="227.6714">off(eventName: string | symbol, listener: Function) : RelativePositionProcessing&lt;InOut, RelativeDistance&gt;</text><ellipse cx="50" cy="237.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="59" y="240.4761">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="50" cy="250.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="59" y="253.2808">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="50" cy="262.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="59" y="266.0854">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="50" cy="275.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="678" x="59" y="278.8901">prependListener(eventName: string | symbol, listener: Function) : RelativePositionProcessing&lt;InOut, RelativeDistance&gt;</text><ellipse cx="50" cy="288.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="707" x="59" y="291.6948">prependOnceListener(eventName: string | symbol, listener: Function) : RelativePositionProcessing&lt;InOut, RelativeDistance&gt;</text><ellipse cx="50" cy="301.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="370" x="59" y="304.4995">process(frame: InOut, options: GraphOptions) : Promise&lt;InOut&gt;</text><ellipse cx="50" cy="314.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="467" x="59" y="317.3042">processObject(dataObject: DataObject, dataFrame: InOut) : Promise&lt;DataObject&gt;</text><ellipse cx="50" cy="326.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="838" x="59" y="330.1089">processRelativePositions(dataObject: DataObject, relativePositions: Map&lt;RelativeDistance, DataObject&gt;, dataFrame: InOut) : Promise&lt;DataObject&gt;</text><ellipse cx="50" cy="339.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="59" y="342.9136">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="50" cy="352.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="555" x="59" y="355.7183">removeAllListeners(event: string | symbol) : RelativePositionProcessing&lt;InOut, RelativeDistance&gt;</text><ellipse cx="50" cy="365.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="674" x="59" y="368.5229">removeListener(eventName: string | symbol, listener: Function) : RelativePositionProcessing&lt;InOut, RelativeDistance&gt;</text><ellipse cx="50" cy="378.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="473" x="59" y="381.3276">setMaxListeners(n: number) : RelativePositionProcessing&lt;InOut, RelativeDistance&gt;</text><ellipse cx="50" cy="390.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="59" y="394.1323">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="50" cy="403.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="506" x="59" y="406.937">setOptions(options: NodeOptions) : RelativePositionProcessing&lt;InOut, RelativeDistance&gt;</text><polygon fill="#FFFF44" points="50,411.5313,54,415.5313,50,419.5313,46,415.5313" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="59" y="419.7417">findNodeDataService() : NodeDataService&lt;NodeData&gt;</text><polygon fill="#FFFF44" points="50,424.3359,54,428.3359,50,432.3359,46,428.3359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="475" x="59" y="432.5464">findObjectByUID(uid: string, dataFrame: InOut, type: string) : Promise&lt;DataObject&gt;</text><polygon fill="#FFFF44" points="50,437.1406,54,441.1406,50,445.1406,46,441.1406" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="422" x="59" y="445.3511">getNodeData&lt;T&gt;(dataObject: DataObject, defaultData: T) : Promise&lt;any&gt;</text><polygon fill="#FFFF44" points="50,449.9453,54,453.9453,50,457.9453,46,453.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="405" x="59" y="458.1558">setNodeData(dataObject: DataObject, data: any) : Promise&lt;NodeData&gt;</text><!--MD5=[cc36d975d9eb323ab582d0e9fcc87c58]
reverse link RelativePositionProcessing<InOut, RelativeDistance> to CellIdentificationNode<InOut>--><path codeLine="72" d="M471,485.25 C471,498.49 471,511.76 471,524.93 " fill="none" id="RelativePositionProcessing&lt;InOut, RelativeDistance&gt;-backto-CellIdentificationNode&lt;InOut&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="464,485.2,471,465.2,478,485.2,464,485.2" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[67a7eb90dfa2787aad03e91b9f3166f8]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "CellIdentificationNode<InOut>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    #options : CellIdentificationOptions
    +addListener(eventName: string | symbol, listener: Function) : CellIdentificationNode<InOut>
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +getOptions() : NodeOptions
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : CellIdentificationNode<InOut>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : CellIdentificationNode<InOut>
    +prependOnceListener(eventName: string | symbol, listener: Function) : CellIdentificationNode<InOut>
    +process(frame: InOut, options: GraphOptions) : Promise<InOut>
    +processObject(dataObject: DataObject, dataFrame: InOut) : Promise<DataObject>
    +processRelativePositions<P>(dataObject: DataObject, relativePositions: Map<RelativeDistance, DataObject>, dataFrame: DataFrame) : Promise<DataObject>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : CellIdentificationNode<InOut>
    +removeListener(eventName: string | symbol, listener: Function) : CellIdentificationNode<InOut>
    +setMaxListeners(n: number) : CellIdentificationNode<InOut>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setOptions(options: NodeOptions) : CellIdentificationNode<InOut>
    #findNodeDataService() : NodeDataService<NodeData>
    #findObjectByUID(uid: string, dataFrame: InOut, type: string) : Promise<DataObject>
    #getNodeData<T>(dataObject: DataObject, defaultData: T) : Promise<any>
    #setNodeData(dataObject: DataObject, data: any) : Promise<NodeData>
}
abstract class "RelativePositionProcessing<InOut, RelativeDistance>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    #options : ObjectProcessingNodeOptions
    +addListener(eventName: string | symbol, listener: Function) : RelativePositionProcessing<InOut, RelativeDistance>
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +getOptions() : NodeOptions
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : RelativePositionProcessing<InOut, RelativeDistance>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : RelativePositionProcessing<InOut, RelativeDistance>
    +prependOnceListener(eventName: string | symbol, listener: Function) : RelativePositionProcessing<InOut, RelativeDistance>
    +process(frame: InOut, options: GraphOptions) : Promise<InOut>
    +processObject(dataObject: DataObject, dataFrame: InOut) : Promise<DataObject>
    {abstract} +processRelativePositions(dataObject: DataObject, relativePositions: Map<RelativeDistance, DataObject>, dataFrame: InOut) : Promise<DataObject>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : RelativePositionProcessing<InOut, RelativeDistance>
    +removeListener(eventName: string | symbol, listener: Function) : RelativePositionProcessing<InOut, RelativeDistance>
    +setMaxListeners(n: number) : RelativePositionProcessing<InOut, RelativeDistance>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setOptions(options: NodeOptions) : RelativePositionProcessing<InOut, RelativeDistance>
    #findNodeDataService() : NodeDataService<NodeData>
    #findObjectByUID(uid: string, dataFrame: InOut, type: string) : Promise<DataObject>
    #getNodeData<T>(dataObject: DataObject, defaultData: T) : Promise<any>
    #setNodeData(dataObject: DataObject, data: any) : Promise<NodeData>
}
"RelativePositionProcessing<InOut, RelativeDistance>" <|- - "CellIdentificationNode<InOut>"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 16:46:50 UTC 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>