<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="996px" preserveAspectRatio="none" style="width:707px;height:996px;background:#00000000;" version="1.1" viewBox="0 0 707 996" width="707px" zoomAndPan="magnify"><defs><filter height="300%" id="f1fyfllc2npvde" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[943b477b6036b84e9a15595886afebc3]
class ObjectMergeNode<InOut>--><rect codeLine="4" fill="#FEFECE" filter="url(#f1fyfllc2npvde)" height="457.75" id="ObjectMergeNode&lt;InOut&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="9" y="525"/><ellipse cx="264.25" cy="541" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M267.2188,546.6406 Q266.6406,546.9375 266,547.0781 Q265.3594,547.2344 264.6563,547.2344 Q262.1563,547.2344 260.8281,545.5938 Q259.5156,543.9375 259.5156,540.8125 Q259.5156,537.6875 260.8281,536.0313 Q262.1563,534.375 264.6563,534.375 Q265.3594,534.375 266,534.5313 Q266.6563,534.6875 267.2188,534.9844 L267.2188,537.7031 Q266.5938,537.125 266,536.8594 Q265.4063,536.5781 264.7813,536.5781 Q263.4375,536.5781 262.75,537.6563 Q262.0625,538.7188 262.0625,540.8125 Q262.0625,542.9063 262.75,543.9844 Q263.4375,545.0469 264.7813,545.0469 Q265.4063,545.0469 266,544.7813 Q266.5938,544.5 267.2188,543.9219 L267.2188,546.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="165" x="284.75" y="545.1543">ObjectMergeNode&lt;InOut&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="557" y2="557"/><ellipse cx="20" cy="568" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="29" y="571.2104">captureRejections : boolean</text><ellipse cx="20" cy="580.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="29" y="584.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="20" cy="593.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="29" y="596.8198">defaultMaxListeners : number</text><ellipse cx="20" cy="606.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="29" y="609.6245">errorMonitor : typeof errorMonitor</text><polygon fill="none" points="20,614.2188,24,618.2188,20,622.2188,16,618.2188" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="29" y="622.4292">options : ObjectMergeOptions</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="629.0234" y2="629.0234"/><ellipse cx="20" cy="640.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="499" x="29" y="643.2339">addListener(eventName: string | symbol, listener: Function) : ObjectMergeNode&lt;InOut&gt;</text><ellipse cx="20" cy="652.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="29" y="656.0386">eventNames() : (string | symbol)[]</text><ellipse cx="20" cy="665.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="29" y="668.8433">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="20" cy="678.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="29" y="681.6479">getMaxListeners() : number</text><ellipse cx="20" cy="691.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="29" y="694.4526">getOptions() : NodeOptions</text><ellipse cx="20" cy="704.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="29" y="707.2573">listenerCount(eventName: string | symbol) : number</text><ellipse cx="20" cy="716.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="29" y="720.062">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="20" cy="729.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="29" y="732.8667">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="742.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="29" y="745.6714">merge(frames: InOut[]) : InOut</text><ellipse cx="20" cy="755.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="29" y="758.4761">mergeObjects(objects: DataObject[]) : DataObject</text><ellipse cx="20" cy="768.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="520" x="29" y="771.2808">mergePositions(positionA: AbsolutePosition, positionB: AbsolutePosition) : AbsolutePosition</text><ellipse cx="20" cy="780.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="447" x="29" y="784.0854">off(eventName: string | symbol, listener: Function) : ObjectMergeNode&lt;InOut&gt;</text><ellipse cx="20" cy="793.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="29" y="796.8901">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="20" cy="806.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="29" y="809.6948">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="819.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="29" y="822.4995">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="832.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="525" x="29" y="835.3042">prependListener(eventName: string | symbol, listener: Function) : ObjectMergeNode&lt;InOut&gt;</text><ellipse cx="20" cy="844.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="554" x="29" y="848.1089">prependOnceListener(eventName: string | symbol, listener: Function) : ObjectMergeNode&lt;InOut&gt;</text><ellipse cx="20" cy="857.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="29" y="860.9136">process(frame: InOut, options: PushOptions) : Promise&lt;InOut&gt;</text><ellipse cx="20" cy="870.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="29" y="873.7183">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="883.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="402" x="29" y="886.5229">removeAllListeners(event: string | symbol) : ObjectMergeNode&lt;InOut&gt;</text><ellipse cx="20" cy="896.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="521" x="29" y="899.3276">removeListener(eventName: string | symbol, listener: Function) : ObjectMergeNode&lt;InOut&gt;</text><ellipse cx="20" cy="908.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="29" y="912.1323">setMaxListeners(n: number) : ObjectMergeNode&lt;InOut&gt;</text><ellipse cx="20" cy="921.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="29" y="924.937">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="20" cy="934.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="29" y="937.7417">setOptions(options: NodeOptions) : ObjectMergeNode&lt;InOut&gt;</text><polygon fill="#FFFF44" points="20,942.3359,24,946.3359,20,950.3359,16,946.3359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="29" y="950.5464">findNodeDataService() : NodeDataService&lt;NodeData&gt;</text><polygon fill="#FFFF44" points="20,955.1406,24,959.1406,20,963.1406,16,959.1406" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="422" x="29" y="963.3511">getNodeData&lt;T&gt;(dataObject: DataObject, defaultData: T) : Promise&lt;any&gt;</text><polygon fill="#FFFF44" points="20,967.9453,24,971.9453,20,975.9453,16,971.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="405" x="29" y="976.1558">setNodeData(dataObject: DataObject, data: any) : Promise&lt;NodeData&gt;</text><!--MD5=[141a2e6d8ea8a7e5d43ad004068c18c9]
class FrameMergeNode<InOut>--><rect codeLine="38" fill="#FEFECE" filter="url(#f1fyfllc2npvde)" height="457.75" id="FrameMergeNode&lt;InOut&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="9" y="7"/><ellipse cx="264.75" cy="23" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M267.7188,28.6406 Q267.1406,28.9375 266.5,29.0781 Q265.8594,29.2344 265.1563,29.2344 Q262.6563,29.2344 261.3281,27.5938 Q260.0156,25.9375 260.0156,22.8125 Q260.0156,19.6875 261.3281,18.0313 Q262.6563,16.375 265.1563,16.375 Q265.8594,16.375 266.5,16.5313 Q267.1563,16.6875 267.7188,16.9844 L267.7188,19.7031 Q267.0938,19.125 266.5,18.8594 Q265.9063,18.5781 265.2813,18.5781 Q263.9375,18.5781 263.25,19.6563 Q262.5625,20.7188 262.5625,22.8125 Q262.5625,24.9063 263.25,25.9844 Q263.9375,27.0469 265.2813,27.0469 Q265.9063,27.0469 266.5,26.7813 Q267.0938,26.5 267.7188,25.9219 L267.7188,28.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="164" x="285.25" y="27.1543">FrameMergeNode&lt;InOut&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="39" y2="39"/><ellipse cx="20" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="29" y="53.2104">captureRejections : boolean</text><ellipse cx="20" cy="62.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="29" y="66.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="20" cy="75.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="29" y="78.8198">defaultMaxListeners : number</text><ellipse cx="20" cy="88.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="29" y="91.6245">errorMonitor : typeof errorMonitor</text><polygon fill="none" points="20,96.2188,24,100.2188,20,104.2188,16,100.2188" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="169" x="29" y="104.4292">options : MergeShapeOptions</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="111.0234" y2="111.0234"/><ellipse cx="20" cy="122.0234" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="499" x="29" y="125.2339">addListener(eventName: string | symbol, listener: Function) : FrameMergeNode&lt;InOut&gt;</text><ellipse cx="20" cy="134.8281" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="29" y="138.0386">eventNames() : (string | symbol)[]</text><ellipse cx="20" cy="147.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="29" y="150.8433">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="20" cy="160.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="29" y="163.6479">getMaxListeners() : number</text><ellipse cx="20" cy="173.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="155" x="29" y="176.4526">getOptions() : NodeOptions</text><ellipse cx="20" cy="186.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="29" y="189.2573">listenerCount(eventName: string | symbol) : number</text><ellipse cx="20" cy="198.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="29" y="202.062">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="20" cy="211.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="29" y="214.8667">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="224.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="29" y="227.6714">merge(frames: InOut[]) : InOut</text><ellipse cx="20" cy="237.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="29" y="240.4761">mergeObjects(objects: DataObject[]) : DataObject</text><ellipse cx="20" cy="250.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="520" x="29" y="253.2808">mergePositions(positionA: AbsolutePosition, positionB: AbsolutePosition) : AbsolutePosition</text><ellipse cx="20" cy="262.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="447" x="29" y="266.0854">off(eventName: string | symbol, listener: Function) : FrameMergeNode&lt;InOut&gt;</text><ellipse cx="20" cy="275.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="29" y="278.8901">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="20" cy="288.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="29" y="291.6948">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="301.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="29" y="304.4995">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="314.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="525" x="29" y="317.3042">prependListener(eventName: string | symbol, listener: Function) : FrameMergeNode&lt;InOut&gt;</text><ellipse cx="20" cy="326.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="554" x="29" y="330.1089">prependOnceListener(eventName: string | symbol, listener: Function) : FrameMergeNode&lt;InOut&gt;</text><ellipse cx="20" cy="339.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="363" x="29" y="342.9136">process(frame: InOut, options: PushOptions) : Promise&lt;InOut&gt;</text><ellipse cx="20" cy="352.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="29" y="355.7183">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="365.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="402" x="29" y="368.5229">removeAllListeners(event: string | symbol) : FrameMergeNode&lt;InOut&gt;</text><ellipse cx="20" cy="378.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="521" x="29" y="381.3276">removeListener(eventName: string | symbol, listener: Function) : FrameMergeNode&lt;InOut&gt;</text><ellipse cx="20" cy="390.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="320" x="29" y="394.1323">setMaxListeners(n: number) : FrameMergeNode&lt;InOut&gt;</text><ellipse cx="20" cy="403.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="29" y="406.937">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="20" cy="416.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="353" x="29" y="419.7417">setOptions(options: NodeOptions) : FrameMergeNode&lt;InOut&gt;</text><polygon fill="#FFFF44" points="20,424.3359,24,428.3359,20,432.3359,16,428.3359" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="308" x="29" y="432.5464">findNodeDataService() : NodeDataService&lt;NodeData&gt;</text><polygon fill="#FFFF44" points="20,437.1406,24,441.1406,20,445.1406,16,441.1406" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="422" x="29" y="445.3511">getNodeData&lt;T&gt;(dataObject: DataObject, defaultData: T) : Promise&lt;any&gt;</text><polygon fill="#FFFF44" points="20,449.9453,24,453.9453,20,457.9453,16,453.9453" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="405" x="29" y="458.1558">setNodeData(dataObject: DataObject, data: any) : Promise&lt;NodeData&gt;</text><!--MD5=[f341d586a20787445b2ac3a17c08cbc1]
reverse link FrameMergeNode<InOut> to ObjectMergeNode<InOut>--><path codeLine="72" d="M351,485.25 C351,498.49 351,511.76 351,524.93 " fill="none" id="FrameMergeNode&lt;InOut&gt;-backto-ObjectMergeNode&lt;InOut&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="344,485.2,351,465.2,358,485.2,344,485.2" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[895ec269e1c7a0318a9b27243338a2b2]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
class "ObjectMergeNode<InOut>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    #options : ObjectMergeOptions
    +addListener(eventName: string | symbol, listener: Function) : ObjectMergeNode<InOut>
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +getOptions() : NodeOptions
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +merge(frames: InOut[]) : InOut
    +mergeObjects(objects: DataObject[]) : DataObject
    +mergePositions(positionA: AbsolutePosition, positionB: AbsolutePosition) : AbsolutePosition
    +off(eventName: string | symbol, listener: Function) : ObjectMergeNode<InOut>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : ObjectMergeNode<InOut>
    +prependOnceListener(eventName: string | symbol, listener: Function) : ObjectMergeNode<InOut>
    +process(frame: InOut, options: PushOptions) : Promise<InOut>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : ObjectMergeNode<InOut>
    +removeListener(eventName: string | symbol, listener: Function) : ObjectMergeNode<InOut>
    +setMaxListeners(n: number) : ObjectMergeNode<InOut>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setOptions(options: NodeOptions) : ObjectMergeNode<InOut>
    #findNodeDataService() : NodeDataService<NodeData>
    #getNodeData<T>(dataObject: DataObject, defaultData: T) : Promise<any>
    #setNodeData(dataObject: DataObject, data: any) : Promise<NodeData>
}
class "FrameMergeNode<InOut>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    #options : MergeShapeOptions
    +addListener(eventName: string | symbol, listener: Function) : FrameMergeNode<InOut>
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +getOptions() : NodeOptions
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +merge(frames: InOut[]) : InOut
    +mergeObjects(objects: DataObject[]) : DataObject
    +mergePositions(positionA: AbsolutePosition, positionB: AbsolutePosition) : AbsolutePosition
    +off(eventName: string | symbol, listener: Function) : FrameMergeNode<InOut>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : FrameMergeNode<InOut>
    +prependOnceListener(eventName: string | symbol, listener: Function) : FrameMergeNode<InOut>
    +process(frame: InOut, options: PushOptions) : Promise<InOut>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : FrameMergeNode<InOut>
    +removeListener(eventName: string | symbol, listener: Function) : FrameMergeNode<InOut>
    +setMaxListeners(n: number) : FrameMergeNode<InOut>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setOptions(options: NodeOptions) : FrameMergeNode<InOut>
    #findNodeDataService() : NodeDataService<NodeData>
    #getNodeData<T>(dataObject: DataObject, defaultData: T) : Promise<any>
    #setNodeData(dataObject: DataObject, data: any) : Promise<NodeData>
}
"FrameMergeNode<InOut>" <|- - "ObjectMergeNode<InOut>"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 16:46:50 UTC 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>