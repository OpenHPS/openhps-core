<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1911px" preserveAspectRatio="none" style="width:707px;height:1911px;background:#00000000;" version="1.1" viewBox="0 0 707 1911" width="707px" zoomAndPan="magnify"><defs><filter height="300%" id="fhj9ntnivnk0w" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[c76d0fce5d3661eb136e4d7eaf503103]
class DataServiceDriver<I, T>--><rect codeLine="4" fill="#FEFECE" filter="url(#fhj9ntnivnk0w)" height="624.2109" id="DataServiceDriver&lt;I, T&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="9" y="576"/><ellipse cx="271.75" cy="592" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M271.8594,587.3438 L270.7031,592.4219 L273.0313,592.4219 L271.8594,587.3438 Z M270.375,585.1094 L273.3594,585.1094 L276.7188,597.5 L274.2656,597.5 L273.5,594.4375 L270.2188,594.4375 L269.4688,597.5 L267.0313,597.5 L270.375,585.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="150" x="292.25" y="596.1543">DataServiceDriver&lt;I, T&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="608" y2="608"/><ellipse cx="20" cy="619" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="29" y="622.2104">captureRejections : boolean</text><ellipse cx="20" cy="631.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="29" y="635.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="20" cy="644.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="29" y="647.8198">dataType : Constructor&lt;T&gt;</text><ellipse cx="20" cy="657.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="29" y="660.6245">defaultMaxListeners : number</text><ellipse cx="20" cy="670.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="29" y="673.4292">errorMonitor : typeof errorMonitor</text><ellipse cx="20" cy="683.0234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="29" y="686.2339">logger : Function</text><ellipse cx="20" cy="695.8281" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="29" y="699.0386">model : any</text><ellipse cx="20" cy="708.6328" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="29" y="711.8433">uid : string</text><polygon fill="none" points="20,716.4375,24,720.4375,20,724.4375,16,720.4375" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="191" x="29" y="724.6479">options : DataServiceOptions&lt;T&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="731.2422" y2="731.2422"/><ellipse cx="20" cy="742.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="489" x="29" y="745.4526">addListener(eventName: string | symbol, listener: Function) : DataServiceDriver&lt;I, T&gt;</text><ellipse cx="20" cy="755.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="288" x="29" y="758.2573">count(query: FilterQuery&lt;T&gt;) : Promise&lt;number&gt;</text><ellipse cx="20" cy="767.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="164" x="29" y="771.062">delete(id: I) : Promise&lt;void&gt;</text><ellipse cx="20" cy="780.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="286" x="29" y="783.8667">deleteAll(query: FilterQuery&lt;T&gt;) : Promise&lt;void&gt;</text><ellipse cx="20" cy="793.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="29" y="796.6714">emit(name: string | symbol, args: any[]) : boolean</text><ellipse cx="20" cy="806.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="29" y="809.4761">emit(name: "ready") : boolean</text><ellipse cx="20" cy="819.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="29" y="822.2808">emit(name: "destroy") : boolean</text><ellipse cx="20" cy="831.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="29" y="835.0854">eventNames() : (string | symbol)[]</text><ellipse cx="20" cy="844.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="386" x="29" y="847.8901">findAll(query: FilterQuery&lt;T&gt;, options: FindOptions) : Promise&lt;T[]&gt;</text><ellipse cx="20" cy="857.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="167" x="29" y="860.6948">findByUID(id: I) : Promise&lt;T&gt;</text><ellipse cx="20" cy="870.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="387" x="29" y="873.4995">findOne(query: FilterQuery&lt;T&gt;, options: FindOptions) : Promise&lt;T&gt;</text><ellipse cx="20" cy="883.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="29" y="886.3042">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="20" cy="895.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="29" y="899.1089">getMaxListeners() : number</text><ellipse cx="20" cy="908.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacing" textLength="201" x="29" y="911.9136">insert(id: I, object: T) : Promise&lt;T&gt;</text><ellipse cx="20" cy="921.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="29" y="924.7183">isReady() : boolean</text><ellipse cx="20" cy="934.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="29" y="937.5229">listenerCount(eventName: string | symbol) : number</text><ellipse cx="20" cy="947.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="29" y="950.3276">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="20" cy="959.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="29" y="963.1323">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="972.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="437" x="29" y="975.937">off(eventName: string | symbol, listener: Function) : DataServiceDriver&lt;I, T&gt;</text><ellipse cx="20" cy="985.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="436" x="29" y="988.7417">on(eventName: string | symbol, listener: Function) : DataServiceDriver&lt;I, T&gt;</text><ellipse cx="20" cy="998.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="29" y="1001.5464">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="20" cy="1011.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="417" x="29" y="1014.3511">once(name: string | symbol, listener: Function) : DataServiceDriver&lt;I, T&gt;</text><ellipse cx="20" cy="1023.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="384" x="29" y="1027.1558">once(name: "destroy", listener: Function) : DataServiceDriver&lt;I, T&gt;</text><ellipse cx="20" cy="1036.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="368" x="29" y="1039.9604">once(name: "build", listener: Function) : DataServiceDriver&lt;I, T&gt;</text><ellipse cx="20" cy="1049.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="373" x="29" y="1052.7651">once(name: "ready", listener: Function) : DataServiceDriver&lt;I, T&gt;</text><ellipse cx="20" cy="1062.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="29" y="1065.5698">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="1075.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="29" y="1078.3745">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="1087.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="515" x="29" y="1091.1792">prependListener(eventName: string | symbol, listener: Function) : DataServiceDriver&lt;I, T&gt;</text><ellipse cx="20" cy="1100.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="544" x="29" y="1103.9839">prependOnceListener(eventName: string | symbol, listener: Function) : DataServiceDriver&lt;I, T&gt;</text><ellipse cx="20" cy="1113.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="29" y="1116.7886">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="1126.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="392" x="29" y="1129.5933">removeAllListeners(event: string | symbol) : DataServiceDriver&lt;I, T&gt;</text><ellipse cx="20" cy="1139.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="511" x="29" y="1142.3979">removeListener(eventName: string | symbol, listener: Function) : DataServiceDriver&lt;I, T&gt;</text><ellipse cx="20" cy="1151.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="310" x="29" y="1155.2026">setMaxListeners(n: number) : DataServiceDriver&lt;I, T&gt;</text><ellipse cx="20" cy="1164.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="29" y="1168.0073">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="20" cy="1177.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="253" x="29" y="1180.812">setUID(uid: string) : DataServiceDriver&lt;I, T&gt;</text><polygon fill="#FFFF44" points="20,1185.4063,24,1189.4063,20,1193.4063,16,1189.4063" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="29" y="1193.6167">generateUUID() : string</text><!--MD5=[dbb8b4f13c7b21394f9d757e58732f45]
class Service--><rect codeLine="51" fill="#FEFECE" filter="url(#fhj9ntnivnk0w)" height="508.9688" id="Service" style="stroke:#A80036;stroke-width:1.5;" width="684" x="9" y="7"/><ellipse cx="324.25" cy="23" fill="#A9DCDF" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M324.3594,18.3438 L323.2031,23.4219 L325.5313,23.4219 L324.3594,18.3438 Z M322.875,16.1094 L325.8594,16.1094 L329.2188,28.5 L326.7656,28.5 L326,25.4375 L322.7188,25.4375 L321.9688,28.5 L319.5313,28.5 L322.875,16.1094 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="45" x="344.75" y="27.1543">Service</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="39" y2="39"/><ellipse cx="20" cy="50" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="29" y="53.2104">captureRejections : boolean</text><ellipse cx="20" cy="62.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="29" y="66.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="20" cy="75.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="29" y="78.8198">defaultMaxListeners : number</text><ellipse cx="20" cy="88.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="29" y="91.6245">errorMonitor : typeof errorMonitor</text><ellipse cx="20" cy="101.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="29" y="104.4292">logger : Function</text><ellipse cx="20" cy="114.0234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="29" y="117.2339">model : any</text><ellipse cx="20" cy="126.8281" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="29" y="130.0386">uid : string</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="136.6328" y2="136.6328"/><ellipse cx="20" cy="147.6328" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="393" x="29" y="150.8433">addListener(eventName: string | symbol, listener: Function) : Service</text><ellipse cx="20" cy="160.4375" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="29" y="163.6479">emit(name: string | symbol, args: any[]) : boolean</text><ellipse cx="20" cy="173.2422" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="29" y="176.4526">emit(name: "ready") : boolean</text><ellipse cx="20" cy="186.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="29" y="189.2573">emit(name: "destroy") : boolean</text><ellipse cx="20" cy="198.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="29" y="202.062">eventNames() : (string | symbol)[]</text><ellipse cx="20" cy="211.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="29" y="214.8667">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="20" cy="224.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="29" y="227.6714">getMaxListeners() : number</text><ellipse cx="20" cy="237.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="29" y="240.4761">isReady() : boolean</text><ellipse cx="20" cy="250.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="29" y="253.2808">listenerCount(eventName: string | symbol) : number</text><ellipse cx="20" cy="262.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="29" y="266.0854">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="20" cy="275.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="29" y="278.8901">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="288.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="341" x="29" y="291.6948">off(eventName: string | symbol, listener: Function) : Service</text><ellipse cx="20" cy="301.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="340" x="29" y="304.4995">on(eventName: string | symbol, listener: Function) : Service</text><ellipse cx="20" cy="314.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="29" y="317.3042">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="20" cy="326.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="321" x="29" y="330.1089">once(name: string | symbol, listener: Function) : Service</text><ellipse cx="20" cy="339.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="288" x="29" y="342.9136">once(name: "destroy", listener: Function) : Service</text><ellipse cx="20" cy="352.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="272" x="29" y="355.7183">once(name: "build", listener: Function) : Service</text><ellipse cx="20" cy="365.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="277" x="29" y="368.5229">once(name: "ready", listener: Function) : Service</text><ellipse cx="20" cy="378.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="29" y="381.3276">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="390.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="29" y="394.1323">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="403.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="419" x="29" y="406.937">prependListener(eventName: string | symbol, listener: Function) : Service</text><ellipse cx="20" cy="416.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="448" x="29" y="419.7417">prependOnceListener(eventName: string | symbol, listener: Function) : Service</text><ellipse cx="20" cy="429.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="29" y="432.5464">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="442.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="296" x="29" y="445.3511">removeAllListeners(event: string | symbol) : Service</text><ellipse cx="20" cy="454.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="415" x="29" y="458.1558">removeListener(eventName: string | symbol, listener: Function) : Service</text><ellipse cx="20" cy="467.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="214" x="29" y="470.9604">setMaxListeners(n: number) : Service</text><ellipse cx="20" cy="480.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="29" y="483.7651">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="20" cy="493.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="29" y="496.5698">setUID(uid: string) : Service</text><polygon fill="#FFFF44" points="20,501.1641,24,505.1641,20,509.1641,16,505.1641" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="29" y="509.3745">generateUUID() : string</text><!--MD5=[82a64caa9ea03dece7f2eb2529d2496d]
class MemoryDataService<I, T>--><rect codeLine="90" fill="#FEFECE" filter="url(#fhj9ntnivnk0w)" height="637.0156" id="MemoryDataService&lt;I, T&gt;" style="stroke:#A80036;stroke-width:1.5;" width="684" x="9" y="1260"/><ellipse cx="266.25" cy="1276" fill="#ADD1B2" rx="11" ry="11" style="stroke:#A80036;stroke-width:1.0;"/><path d="M269.2188,1281.6406 Q268.6406,1281.9375 268,1282.0781 Q267.3594,1282.2344 266.6563,1282.2344 Q264.1563,1282.2344 262.8281,1280.5938 Q261.5156,1278.9375 261.5156,1275.8125 Q261.5156,1272.6875 262.8281,1271.0313 Q264.1563,1269.375 266.6563,1269.375 Q267.3594,1269.375 268,1269.5313 Q268.6563,1269.6875 269.2188,1269.9844 L269.2188,1272.7031 Q268.5938,1272.125 268,1271.8594 Q267.4063,1271.5781 266.7813,1271.5781 Q265.4375,1271.5781 264.75,1272.6563 Q264.0625,1273.7188 264.0625,1275.8125 Q264.0625,1277.9063 264.75,1278.9844 Q265.4375,1280.0469 266.7813,1280.0469 Q267.4063,1280.0469 268,1279.7813 Q268.5938,1279.5 269.2188,1278.9219 L269.2188,1281.6406 Z " fill="#000000"/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacing" textLength="161" x="286.75" y="1280.1543">MemoryDataService&lt;I, T&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="1292" y2="1292"/><ellipse cx="20" cy="1303" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="158" x="29" y="1306.2104">captureRejections : boolean</text><ellipse cx="20" cy="1315.8047" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="323" x="29" y="1319.0151">captureRejectionSymbol : typeof captureRejectionSymbol</text><ellipse cx="20" cy="1328.6094" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="156" x="29" y="1331.8198">dataType : Constructor&lt;T&gt;</text><ellipse cx="20" cy="1341.4141" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="170" x="29" y="1344.6245">defaultMaxListeners : number</text><ellipse cx="20" cy="1354.2188" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="193" x="29" y="1357.4292">errorMonitor : typeof errorMonitor</text><ellipse cx="20" cy="1367.0234" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="95" x="29" y="1370.2339">logger : Function</text><ellipse cx="20" cy="1379.8281" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="67" x="29" y="1383.0386">model : any</text><ellipse cx="20" cy="1392.6328" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;fill:none;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="62" x="29" y="1395.8433">uid : string</text><polygon fill="none" points="20,1400.4375,24,1404.4375,20,1408.4375,16,1404.4375" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="191" x="29" y="1408.6479">options : DataServiceOptions&lt;T&gt;</text><polygon fill="none" points="20,1413.2422,24,1417.2422,20,1421.2422,16,1417.2422" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="115" x="29" y="1421.4526">_data : Map&lt;I, any&gt;</text><line style="stroke:#A80036;stroke-width:1.5;" x1="10" x2="692" y1="1428.0469" y2="1428.0469"/><ellipse cx="20" cy="1439.0469" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="500" x="29" y="1442.2573">addListener(eventName: string | symbol, listener: Function) : MemoryDataService&lt;I, T&gt;</text><ellipse cx="20" cy="1451.8516" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="281" x="29" y="1455.062">count(filter: FilterQuery&lt;T&gt;) : Promise&lt;number&gt;</text><ellipse cx="20" cy="1464.6563" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="164" x="29" y="1467.8667">delete(id: I) : Promise&lt;void&gt;</text><ellipse cx="20" cy="1477.4609" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="277" x="29" y="1480.6714">deleteAll(filter: FilterQuery&lt;T&gt;) : Promise&lt;void&gt;</text><ellipse cx="20" cy="1490.2656" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="286" x="29" y="1493.4761">emit(name: string | symbol, args: any[]) : boolean</text><ellipse cx="20" cy="1503.0703" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="172" x="29" y="1506.2808">emit(name: "ready") : boolean</text><ellipse cx="20" cy="1515.875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="183" x="29" y="1519.0854">emit(name: "destroy") : boolean</text><ellipse cx="20" cy="1528.6797" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="193" x="29" y="1531.8901">eventNames() : (string | symbol)[]</text><ellipse cx="20" cy="1541.4844" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="386" x="29" y="1544.6948">findAll(query: FilterQuery&lt;T&gt;, options: FindOptions) : Promise&lt;T[]&gt;</text><ellipse cx="20" cy="1554.2891" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="174" x="29" y="1557.4995">findByUID(uid: I) : Promise&lt;T&gt;</text><ellipse cx="20" cy="1567.0938" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="388" x="29" y="1570.3042">findOne(query: FilterQuery&lt;T&gt;, options: FindOptions) : Promise&lt;T&gt;</text><ellipse cx="20" cy="1579.8984" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="538" x="29" y="1583.1089">getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]</text><ellipse cx="20" cy="1592.7031" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="157" x="29" y="1595.9136">getMaxListeners() : number</text><ellipse cx="20" cy="1605.5078" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="203" x="29" y="1608.7183">insert(id: I, object: T) : Promise&lt;T&gt;</text><ellipse cx="20" cy="1618.3125" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="109" x="29" y="1621.5229">isReady() : boolean</text><ellipse cx="20" cy="1631.1172" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="298" x="29" y="1634.3276">listenerCount(eventName: string | symbol) : number</text><ellipse cx="20" cy="1643.9219" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="427" x="29" y="1647.1323">listenerCount(emitter: EventEmitter, eventName: string | symbol) : number</text><ellipse cx="20" cy="1656.7266" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="283" x="29" y="1659.937">listeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="1669.5313" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="448" x="29" y="1672.7417">off(eventName: string | symbol, listener: Function) : MemoryDataService&lt;I, T&gt;</text><ellipse cx="20" cy="1682.3359" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="447" x="29" y="1685.5464">on(eventName: string | symbol, listener: Function) : MemoryDataService&lt;I, T&gt;</text><ellipse cx="20" cy="1695.1406" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="630" x="29" y="1698.3511">on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator&lt;any&gt;</text><ellipse cx="20" cy="1707.9453" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="428" x="29" y="1711.1558">once(name: string | symbol, listener: Function) : MemoryDataService&lt;I, T&gt;</text><ellipse cx="20" cy="1720.75" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="395" x="29" y="1723.9604">once(name: "destroy", listener: Function) : MemoryDataService&lt;I, T&gt;</text><ellipse cx="20" cy="1733.5547" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="379" x="29" y="1736.7651">once(name: "build", listener: Function) : MemoryDataService&lt;I, T&gt;</text><ellipse cx="20" cy="1746.3594" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="384" x="29" y="1749.5698">once(name: "ready", listener: Function) : MemoryDataService&lt;I, T&gt;</text><ellipse cx="20" cy="1759.1641" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="658" x="29" y="1762.3745">once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="1771.9688" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="602" x="29" y="1775.1792">once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise&lt;any[]&gt;</text><ellipse cx="20" cy="1784.7734" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="526" x="29" y="1787.9839">prependListener(eventName: string | symbol, listener: Function) : MemoryDataService&lt;I, T&gt;</text><ellipse cx="20" cy="1797.5781" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="555" x="29" y="1800.7886">prependOnceListener(eventName: string | symbol, listener: Function) : MemoryDataService&lt;I, T&gt;</text><ellipse cx="20" cy="1810.3828" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="307" x="29" y="1813.5933">rawListeners(eventName: string | symbol) : Function[]</text><ellipse cx="20" cy="1823.1875" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="403" x="29" y="1826.3979">removeAllListeners(event: string | symbol) : MemoryDataService&lt;I, T&gt;</text><ellipse cx="20" cy="1835.9922" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="522" x="29" y="1839.2026">removeListener(eventName: string | symbol, listener: Function) : MemoryDataService&lt;I, T&gt;</text><ellipse cx="20" cy="1848.7969" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="321" x="29" y="1852.0073">setMaxListeners(n: number) : MemoryDataService&lt;I, T&gt;</text><ellipse cx="20" cy="1861.6016" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" text-decoration="underline" textLength="480" x="29" y="1864.812">setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void</text><ellipse cx="20" cy="1874.4063" fill="#84BE84" rx="3" ry="3" style="stroke:#038048;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="264" x="29" y="1877.6167">setUID(uid: string) : MemoryDataService&lt;I, T&gt;</text><polygon fill="#FFFF44" points="20,1882.2109,24,1886.2109,20,1890.2109,16,1886.2109" style="stroke:#B38D22;stroke-width:1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacing" textLength="131" x="29" y="1890.4214">generateUUID() : string</text><!--MD5=[38b151187c62877230fe698df5ac1715]
reverse link Service to DataServiceDriver<I, T>--><path codeLine="89" d="M351,536.46 C351,549.49 351,562.62 351,575.75 " fill="none" id="Service-backto-DataServiceDriver&lt;I, T&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="344,536.06,351,516.06,358,536.06,344,536.06" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[2cf44a30e36fa772474fc10d0c274669]
reverse link DataServiceDriver<I, T> to MemoryDataService<I, T>--><path codeLine="138" d="M351,1220.08 C351,1233.32 351,1246.58 351,1259.79 " fill="none" id="DataServiceDriver&lt;I, T&gt;-backto-MemoryDataService&lt;I, T&gt;" style="stroke:#A80036;stroke-width:1.0;"/><polygon fill="none" points="344,1220.01,351,1200.01,358,1220.01,344,1220.01" style="stroke:#A80036;stroke-width:1.0;"/><!--MD5=[c89f38cbd7d4375a1de27172945f9840]
@startuml
skinparam BackgroundColor transparent
hide empty methods
hide empty fields
abstract class "DataServiceDriver<I, T>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    +dataType : Constructor<T>
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +logger : Function
    +model : any
    +uid : string
    #options : DataServiceOptions<T>
    +addListener(eventName: string | symbol, listener: Function) : DataServiceDriver<I, T>
    {abstract} +count(query: FilterQuery<T>) : Promise<number>
    {abstract} +delete(id: I) : Promise<void>
    {abstract} +deleteAll(query: FilterQuery<T>) : Promise<void>
    +emit(name: string | symbol, args: any[]) : boolean
    +emit(name: "ready") : boolean
    +emit(name: "destroy") : boolean
    +eventNames() : (string | symbol)[]
    {abstract} +findAll(query: FilterQuery<T>, options: FindOptions) : Promise<T[]>
    {abstract} +findByUID(id: I) : Promise<T>
    {abstract} +findOne(query: FilterQuery<T>, options: FindOptions) : Promise<T>
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    {abstract} +insert(id: I, object: T) : Promise<T>
    +isReady() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : DataServiceDriver<I, T>
    +on(eventName: string | symbol, listener: Function) : DataServiceDriver<I, T>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(name: string | symbol, listener: Function) : DataServiceDriver<I, T>
    +once(name: "destroy", listener: Function) : DataServiceDriver<I, T>
    +once(name: "build", listener: Function) : DataServiceDriver<I, T>
    +once(name: "ready", listener: Function) : DataServiceDriver<I, T>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : DataServiceDriver<I, T>
    +prependOnceListener(eventName: string | symbol, listener: Function) : DataServiceDriver<I, T>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : DataServiceDriver<I, T>
    +removeListener(eventName: string | symbol, listener: Function) : DataServiceDriver<I, T>
    +setMaxListeners(n: number) : DataServiceDriver<I, T>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setUID(uid: string) : DataServiceDriver<I, T>
    #generateUUID() : string
}
abstract class "Service" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +logger : Function
    +model : any
    +uid : string
    +addListener(eventName: string | symbol, listener: Function) : Service
    +emit(name: string | symbol, args: any[]) : boolean
    +emit(name: "ready") : boolean
    +emit(name: "destroy") : boolean
    +eventNames() : (string | symbol)[]
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +isReady() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : Service
    +on(eventName: string | symbol, listener: Function) : Service
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(name: string | symbol, listener: Function) : Service
    +once(name: "destroy", listener: Function) : Service
    +once(name: "build", listener: Function) : Service
    +once(name: "ready", listener: Function) : Service
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : Service
    +prependOnceListener(eventName: string | symbol, listener: Function) : Service
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : Service
    +removeListener(eventName: string | symbol, listener: Function) : Service
    +setMaxListeners(n: number) : Service
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setUID(uid: string) : Service
    #generateUUID() : string
}
"Service" <|- - "DataServiceDriver<I, T>"
class "MemoryDataService<I, T>" {
    {static} +captureRejections : boolean
    {static} +captureRejectionSymbol : typeof captureRejectionSymbol
    +dataType : Constructor<T>
    {static} +defaultMaxListeners : number
    {static} +errorMonitor : typeof errorMonitor
    +logger : Function
    +model : any
    +uid : string
    #options : DataServiceOptions<T>
    #_data : Map<I, any>
    +addListener(eventName: string | symbol, listener: Function) : MemoryDataService<I, T>
    +count(filter: FilterQuery<T>) : Promise<number>
    +delete(id: I) : Promise<void>
    +deleteAll(filter: FilterQuery<T>) : Promise<void>
    +emit(name: string | symbol, args: any[]) : boolean
    +emit(name: "ready") : boolean
    +emit(name: "destroy") : boolean
    +eventNames() : (string | symbol)[]
    +findAll(query: FilterQuery<T>, options: FindOptions) : Promise<T[]>
    +findByUID(uid: I) : Promise<T>
    +findOne(query: FilterQuery<T>, options: FindOptions) : Promise<T>
    {static} +getEventListeners(emitter: EventEmitter | DOMEventTarget, name: string | symbol) : Function[]
    +getMaxListeners() : number
    +insert(id: I, object: T) : Promise<T>
    +isReady() : boolean
    +listenerCount(eventName: string | symbol) : number
    {static} +listenerCount(emitter: EventEmitter, eventName: string | symbol) : number
    +listeners(eventName: string | symbol) : Function[]
    +off(eventName: string | symbol, listener: Function) : MemoryDataService<I, T>
    +on(eventName: string | symbol, listener: Function) : MemoryDataService<I, T>
    {static} +on(emitter: EventEmitter, eventName: string, options: StaticEventEmitterOptions) : AsyncIterableIterator<any>
    +once(name: string | symbol, listener: Function) : MemoryDataService<I, T>
    +once(name: "destroy", listener: Function) : MemoryDataService<I, T>
    +once(name: "build", listener: Function) : MemoryDataService<I, T>
    +once(name: "ready", listener: Function) : MemoryDataService<I, T>
    {static} +once(emitter: NodeEventTarget, eventName: string | symbol, options: StaticEventEmitterOptions) : Promise<any[]>
    {static} +once(emitter: DOMEventTarget, eventName: string, options: StaticEventEmitterOptions) : Promise<any[]>
    +prependListener(eventName: string | symbol, listener: Function) : MemoryDataService<I, T>
    +prependOnceListener(eventName: string | symbol, listener: Function) : MemoryDataService<I, T>
    +rawListeners(eventName: string | symbol) : Function[]
    +removeAllListeners(event: string | symbol) : MemoryDataService<I, T>
    +removeListener(eventName: string | symbol, listener: Function) : MemoryDataService<I, T>
    +setMaxListeners(n: number) : MemoryDataService<I, T>
    {static} +setMaxListeners(n: number, eventTargets: (EventEmitter | DOMEventTarget)[]) : void
    +setUID(uid: string) : MemoryDataService<I, T>
    #generateUUID() : string
}
"DataServiceDriver<I, T>" <|- - "MemoryDataService<I, T>"
@enduml

PlantUML version 1.2021.14(Fri Nov 12 16:46:50 UTC 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: null
--></g></svg>